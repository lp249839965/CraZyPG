{"version":3,"file":"czpg.min.js","sources":["../src/math/Vector3.js","../src/math/Quaternion.js","../src/math/Matrix4.js","../src/renderer/typedArray.js","../src/model/Transform.js","../src/renderer/utils.js","../src/renderer/program.js","../src/renderer/attributes.js","../src/math/Matrix3.js","../src/shader/Shader.js","../src/shader/CommonVAOShader.js","../src/model/Model.js","../src/math/BezierCurve.js","../src/model/Primatives.js","../src/shader/GridAxisShader.js","../src/shader/FlatTextureShader.js","../src/shader/DynamicSkyboxShader.js","../src/shader/PointlightShader.js","../src/shader/ColorPointShader.js","../src/shader/PhongLightShader.js","../src/shader/ColorpickShader.js","../src/shader/WireframeShader.js","../src/shader/MeshLineShader.js","../src/shader/TransformShader.js","../src/shader/GLTFShader.js","../src/model/MeshLineModel.js","../src/renderer/texture.js","../src/renderer/webgl.js","../src/camera/Camera.js","../src/math/Vector2.js","../src/math/Spherical.js","../src/loaders/Fileloader.js","../src/loaders/ObjLoader.js","../src/scene/Node.js","../src/loaders/GLTFLoader.js","../src/helper/PointHelper.js","../src/shader/ColorLineShader.js","../src/helper/LineHelper.js","../src/math/Perlin.js","../src/model/Terrain.js","../src/renderer/framebuffer.js","../src/controls/FramebufferPicker.js","../src/shader/ScreenQuadShader.js","../src/controls/BufferPicker.js","../src/controls/Controler.js","../src/scene/Scene.js","../src/scene/Animator.js","../src/renderer/constant.js","../src/math/Math.js","../src/renderer/vertexArray.js","../src/core/Render.js","../src/renderer/Renderer.js","../src/controls/OrbitControls.js"],"sourcesContent":["/* eslint no-param-reassign: 0 */\nimport { PMath } from './Math';\n\nfunction Vector3( x, y, z ) {\n\n    this.raw = [];\n    this.x = x || 0;\n    this.y = y || 0;\n    this.z = z || 0;\n\n}\n\nObject.defineProperties( Vector3.prototype, {\n\n    x: {\n        get() {\n\n            return this.raw[ 0 ];\n\n        },\n        set( v ) {\n\n            this.raw[ 0 ] = v;\n\n        },\n    },\n\n    y: {\n        get() {\n\n            return this.raw[ 1 ];\n\n        },\n        set( v ) {\n\n            this.raw[ 1 ] = v;\n\n        },\n    },\n\n    z: {\n        get() {\n\n            return this.raw[ 2 ];\n\n        },\n        set( v ) {\n\n            this.raw[ 2 ] = v;\n\n        },\n    },\n\n} );\n\nObject.assign( Vector3.prototype, {\n\n    length( v ) {\n\n        // Only get the magnitude of this vector\n        if ( v === undefined )\n            return Math.sqrt( ( this.x * this.x ) + ( this.y * this.y ) + ( this.z * this.z ) );\n\n        // Get magnitude based on another vector\n        const x = v.x - this.x;\n        const y = v.y - this.y;\n        const z = v.z - this.z;\n\n        return Math.sqrt( ( x * x ) + ( y * y ) + ( z * z ) );\n\n    },\n\n    squareLength( v ) {\n\n        if ( v === undefined )\n            return ( this.x * this.x ) + ( this.y * this.y ) + ( this.z * this.z );\n\n        const x = v.x - this.x;\n        const y = v.y - this.y;\n        const z = v.z - this.z;\n\n        return ( x * x ) + ( y * y ) + ( z * z );\n\n    },\n\n    normalize() {\n\n        const mag = this.length();\n        this.x /= mag;\n        this.y /= mag;\n        this.z /= mag;\n        return this;\n\n    },\n\n    set( x, y, z ) {\n\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        return this;\n\n    },\n\n    setFromSpherical( s ) {\n\n        Vector3.fromSpherical( this.raw, s );\n        return this;\n\n    },\n\n    setFromArray( array, offset ) {\n\n        if ( offset === undefined ) offset = 0;\n        this.x = array[ offset ];\n        this.y = array[ offset + 1 ];\n        this.z = array[ offset + 2 ];\n\n        return this;\n\n    },\n\n    // XYZ order\n    setFromRotationMatrix( m ) {\n\n        const te = m.raw || m;\n        const m11 = te[ 0 ];\n        const m12 = te[ 4 ];\n        const m13 = te[ 8 ];\n        const m22 = te[ 5 ];\n        const m23 = te[ 9 ];\n        const m32 = te[ 6 ];\n        const m33 = te[ 10 ];\n\n        this.y = Math.asin( PMath.clamp( m13, - 1, 1 ) );\n\n        if ( Math.abs( m13 ) < 0.99999 ) {\n\n            this.x = Math.atan2( - m23, m33 );\n            this.z = Math.atan2( - m12, m11 );\n\n        } else {\n\n            this.x = Math.atan2( m32, m22 );\n            this.z = 0;\n\n        }\n\n        return this;\n\n    },\n\n    multiScalar( v ) {\n\n        this.x *= v;\n        this.y *= v;\n        this.z *= v;\n        return this;\n\n    },\n\n    getArray() {\n\n        return this.raw;\n\n    },\n\n    getFloatArray() {\n\n        return new Float32Array( this.raw );\n\n    },\n\n    clone() {\n\n        return new Vector3( this.x, this.y, this.z );\n\n    },\n\n    copy( v ) {\n\n        this.x = v.x;\n        this.y = v.y;\n        this.z = v.z;\n\n        return this;\n\n    },\n\n    sub( v ) {\n\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n\n        return this;\n\n    },\n\n    add( v ) {\n\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n\n        return this;\n\n    },\n\n    subVectors( a, b ) {\n\n        this.x = a.x - b.x;\n        this.y = a.y - a.y;\n        this.z = a.z - a.y;\n\n        return this;\n\n    },\n\n    dot( v ) {\n\n        this.dotVectors( this, v );\n        return this;\n\n    },\n\n    cross( v, frag ) {\n\n        const result = frag || new Vector3();\n        Vector3.crossVectors( result.raw, this.raw, v.raw );\n        return result;\n\n    },\n\n    applyQuaternion( q ) {\n\n        Vector3.transformQuat( this.raw, this.raw, q.raw );\n        return this;\n\n    },\n\n    dotVectors( v1, v2 ) {\n\n        return ( v1.x * v2.z ) + ( v1.y * v2.y ) + ( v1.z * v2.z );\n\n    },\n\n} );\n\nObject.assign( Vector3, {\n\n    crossVectors( out, v1, v2 ) {\n\n        const ax = v1[ 0 ];\n        const ay = v1[ 1 ];\n        const az = v1[ 2 ];\n        const bx = v2[ 0 ];\n        const by = v2[ 1 ];\n        const bz = v2[ 2 ];\n        out[ 0 ] = ay * bz - az * by;\n        out[ 1 ] = az * bx - ax * bz;\n        out[ 2 ] = ax * by - ay * bx;\n\n        return out;\n\n    },\n\n    fromSpherical( out, s ) {\n\n        const sinPhiRadius = Math.sin( s.phi ) * s.radius;\n\n        out[ 0 ] = sinPhiRadius * Math.sin( s.theta );\n        out[ 1 ] = Math.cos( s.phi ) * s.radius;\n        out[ 2 ] = sinPhiRadius * Math.cos( s.theta );\n\n        return out;\n\n    },\n\n    transformQuat( out, a, q ) {\n\n        const x = a[ 0 ];\n        const y = a[ 1 ];\n        const z = a[ 2 ];\n        const qx = q[ 0 ];\n        const qy = q[ 1 ];\n        const qz = q[ 2 ];\n        const qw = q[ 3 ];\n\n        // calculate quat * vector\n        const ix = qw * x + qy * z - qz * y;\n        const iy = qw * y + qz * x - qx * z;\n        const iz = qw * z + qx * y - qy * x;\n        const iw = - qx * x - qy * y - qz * z;\n\n        // calculate result * inverse quat\n        out[ 0 ] = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n        out[ 1 ] = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n        out[ 2 ] = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n        return out;\n\n    },\n\n} );\n\nexport { Vector3 };\n","/* eslint no-param-reassign: 0 no-mixed-operators:0 */\nimport { Vector3 } from './Vector3';\n\nfunction Quaternion( x, y, z, w ) {\n\n    this.raw = [];\n    if ( arguments.length === 1 )\n        this.raw = x.slice( 0, 4 );\n    else {\n\n        this.x = x || 0;\n        this.y = y || 0;\n        this.z = z || 0;\n        this.w = typeof w === 'undefined' ? 1 : w;\n\n    }\n\n}\n\nObject.defineProperties( Quaternion.prototype, {\n\n    x: {\n        get() {\n\n            return this.raw[ 0 ];\n\n        },\n\n        set( v ) {\n\n            this.raw[ 0 ] = v;\n\n        },\n    },\n\n    y: {\n        get() {\n\n            return this.raw[ 1 ];\n\n        },\n\n        set( v ) {\n\n            this.raw[ 1 ] = v;\n\n        },\n    },\n\n    z: {\n        get() {\n\n            return this.raw[ 2 ];\n\n        },\n\n        set( v ) {\n\n            this.raw[ 2 ] = v;\n\n        },\n    },\n\n    w: {\n        get() {\n\n            return this.raw[ 3 ];\n\n        },\n\n        set( v ) {\n\n            this.raw[ 3 ] = v;\n\n        },\n    },\n\n} );\n\nObject.assign( Quaternion.prototype, {\n\n    set( x, y, z, w ) {\n\n        if ( arguments.length === 1 )\n            this.raw = x.slice( 0, 4 );\n        else {\n\n            this.x = x;\n            this.y = y;\n            this.z = z;\n            this.w = w;\n\n        }\n\n        return this;\n\n    },\n\n    clone() {\n\n        return new Quaternion( this.raw );\n\n    },\n\n    getArray() {\n\n        return this.raw;\n\n    },\n\n    setFromEuler( x, y, z ) {\n\n        Quaternion.fromEuler( this.raw, x, y, z );\n        return this;\n\n    },\n\n    length() {\n\n        return Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n    },\n\n    normalize() {\n\n        Quaternion.normalize( this.raw, this.raw );\n        return this;\n\n    },\n\n    setFromUnitVectors: ( function () {\n\n        let v1 = new Vector3();\n        const ESP = 0.000001;\n\n        return function setFromUnitVectors( vFrom, vTo ) {\n\n            v1 = new Vector3();\n            let r = vFrom.dot( vTo ) + 1;\n\n            if ( r < ESP ) {\n\n                r = 0;\n                if ( Math.abs( vFrom.x ) > Map.abs( vFrom.z ) )\n                    v1.set( - vFrom.y, vFrom.x, 0 );\n                else\n                    v1.set( 0, - vFrom.z, vFrom.y );\n\n            } else\n                Vector3.cross( v1, vFrom, vTo );\n\n            this.x = v1.x;\n            this.y = v1.y;\n            this.z = v1.z;\n            this.w = v1.w;\n\n            this.normalize();\n            return this;\n\n        };\n\n    }() ),\n\n    invert() {\n\n        Quaternion.invert( this.raw, this.raw );\n        return this;\n\n    },\n\n} );\n\nObject.assign( Quaternion, {\n\n    normalize( out, a ) {\n\n        let l = Math.sqrt( a[ 0 ] * a[ 0 ] + a[ 1 ] * a[ 1 ] + a[ 2 ] * a[ 2 ] + a[ 3 ] * a[ 3 ] );\n\n        if ( l === 0 ) {\n\n            out[ 0 ] = 0;\n            out[ 1 ] = 0;\n            out[ 2 ] = 0;\n            out[ 3 ] = 1;\n\n        } else {\n\n            l = 1 / l;\n            out[ 0 ] = a[ 0 ] * l;\n            out[ 1 ] = a[ 1 ] * l;\n            out[ 2 ] = a[ 2 ] * l;\n            out[ 3 ] = a[ 3 ] * l;\n\n        }\n\n        return out;\n\n    },\n\n    fromEuler( out, x, y, z ) {\n\n        // XYZ order\n        const cos = Math.cos;\n        const sin = Math.sin;\n\n        const c1 = cos( x / 2 );\n        const c2 = cos( y / 2 );\n        const c3 = cos( z / 2 );\n\n        const s1 = sin( x / 2 );\n        const s2 = sin( y / 2 );\n        const s3 = sin( z / 2 );\n\n        out[ 0 ] = s1 * c2 * c3 + c1 * s2 * s3;\n        out[ 1 ] = c1 * s2 * c3 - s1 * c2 * s3;\n        out[ 2 ] = c1 * c2 * s3 + s1 * s2 * c3;\n        out[ 3 ] = c1 * c2 * c3 - s1 * s2 * s3;\n\n    },\n\n    invert( out, a ) {\n\n        const a0 = a[ 0 ];\n        const a1 = a[ 1 ];\n        const a2 = a[ 2 ];\n        const a3 = a[ 3 ];\n        const dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n        const invDot = dot ? 1.0 / dot : 0;\n\n        out[ 0 ] = - a0 * invDot;\n        out[ 1 ] = - a1 * invDot;\n        out[ 2 ] = - a2 * invDot;\n        out[ 3 ] = a3 * invDot;\n\n        return out;\n\n    },\n\n    lerp( out, a, b, t ) {\n\n        const ax = a[ 0 ];\n        const ay = a[ 1 ];\n        const az = a[ 2 ];\n        const aw = a[ 3 ];\n        out[ 0 ] = ax + t * ( b[ 0 ] - ax );\n        out[ 1 ] = ay + t * ( b[ 1 ] - ay );\n        out[ 2 ] = az + t * ( b[ 2 ] - az );\n        out[ 3 ] = aw + t * ( b[ 3 ] - aw );\n        return out;\n\n    },\n\n    slerp( out, a, b, t ) {\n\n        // benchmarks:\n        //    http://jsperf.com/quaternion-slerp-implementations\n        const ax = a[ 0 ];\n        const ay = a[ 1 ];\n        const az = a[ 2 ];\n        const aw = a[ 3 ];\n        let bx = b[ 0 ];\n        let by = b[ 1 ];\n        let bz = b[ 2 ];\n        let bw = b[ 3 ];\n        let omega;\n        let cosom;\n        let sinom;\n        let scale0;\n        let scale1;\n        // calc cosine\n        cosom = ax * bx + ay * by + az * bz + aw * bw;\n        // adjust signs (if necessary)\n        if ( cosom < 0.0 ) {\n\n            cosom = - cosom;\n            bx = - bx;\n            by = - by;\n            bz = - bz;\n            bw = - bw;\n\n        }\n        // calculate coefficients\n        if ( ( 1.0 - cosom ) > 0.000001 ) {\n\n            // standard case (slerp)\n            omega = Math.acos( cosom );\n            sinom = Math.sin( omega );\n            scale0 = Math.sin( ( 1.0 - t ) * omega ) / sinom;\n            scale1 = Math.sin( t * omega ) / sinom;\n\n        } else {\n\n            // \"from\" and \"to\" quaternions are very close\n            //  ... so we can do a linear interpolation\n            scale0 = 1.0 - t;\n            scale1 = t;\n\n        }\n        // calculate final values\n        out[ 0 ] = scale0 * ax + scale1 * bx;\n        out[ 1 ] = scale0 * ay + scale1 * by;\n        out[ 2 ] = scale0 * az + scale1 * bz;\n        out[ 3 ] = scale0 * aw + scale1 * bw;\n        return out;\n\n    },\n\n    fromMatrix4( out, m ) {\n\n        // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n        // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n        const m11 = m[ 0 ];\n        const m12 = m[ 4 ];\n        const m13 = m[ 8 ];\n        const m21 = m[ 1 ];\n        const m22 = m[ 5 ];\n        const m23 = m[ 9 ];\n        const m31 = m[ 2 ];\n        const m32 = m[ 6 ];\n        const m33 = m[ 10 ];\n\n        const trace = m11 + m22 + m33;\n        let s;\n\n        if ( trace > 0 ) {\n\n            s = 0.5 / Math.sqrt( trace + 1.0 );\n\n            out[ 3 ] = 0.25 / s;\n            out[ 0 ] = ( m32 - m23 ) * s;\n            out[ 1 ] = ( m13 - m31 ) * s;\n            out[ 2 ] = ( m21 - m12 ) * s;\n\n        } else if ( m11 > m22 && m11 > m33 ) {\n\n            s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n            out[ 3 ] = ( m32 - m23 ) / s;\n            out[ 0 ] = 0.25 * s;\n            out[ 1 ] = ( m12 + m21 ) / s;\n            out[ 2 ] = ( m13 + m31 ) / s;\n\n        } else if ( m22 > m33 ) {\n\n            s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n            out[ 3 ] = ( m13 - m31 ) / s;\n            out[ 0 ] = ( m12 + m21 ) / s;\n            out[ 1 ] = 0.25 * s;\n            out[ 2 ] = ( m23 + m32 ) / s;\n\n        } else {\n\n            s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n            out[ 3 ] = ( m21 - m12 ) / s;\n            out[ 0 ] = ( m13 + m31 ) / s;\n            out[ 1 ] = ( m23 + m32 ) / s;\n            out[ 2 ] = 0.25 * s;\n\n        }\n\n        return out;\n\n    },\n\n} );\n\nexport { Quaternion };\n","/* eslint no-param-reassign: 0 */\nimport { Quaternion } from './Quaternion';\n\nfunction Matrix4() {\n\n    this.raw = Matrix4.identity();\n\n}\n\nObject.assign( Matrix4.prototype, {\n\n    translate( x, y, z ) {\n\n        if ( x.x !== undefined ) {\n\n            Matrix4.translate( this.raw, x.x, x.y, x.z );\n            return this;\n\n        }\n        Matrix4.translate( this.raw, x, y, z );\n        return this;\n\n    },\n\n    rotateX( rad ) {\n\n        Matrix4.rotateX( this.raw, rad );\n        return this;\n\n    },\n\n    rotateY( rad ) {\n\n        Matrix4.rotateY( this.raw, rad );\n        return this;\n\n    },\n\n    rotateZ( rad ) {\n\n        Matrix4.rotateZ( this.raw, rad );\n        return this;\n\n    },\n\n    applyQuaternion: ( function () {\n\n        const matArray = new Array( 16 );\n        return function applyQuaternion( quat ) {\n\n            Matrix4.fromQuat( matArray, typeof quat.x === 'undefined' ? quat : quat.raw );\n            Matrix4.mult( this.raw, this.raw, matArray );\n            return this;\n\n        };\n\n    }() ),\n\n    scale( x, y, z ) {\n\n        if ( x.x !== undefined ) {\n\n            Matrix4.scale( this.raw, x.x, x.y, x.z );\n            return this;\n\n        }\n\n        Matrix4.scale( this.raw, x, y, z );\n        return this;\n\n    },\n\n    invert() {\n\n        Matrix4.invert( this.raw, this.raw );\n        return this;\n\n    },\n\n    resetRotation() {\n\n        for ( let i = 0; i < this.raw.length; i ++ ) {\n\n            if ( i >= 12 && i <= 14 ) continue; // eslint-disable-line\n            this.raw[ i ] = ( i % 5 === 0 ) ? 1 : 0;\n\n        }\n\n        return this;\n\n    },\n\n    reset() {\n\n        for ( let i = 0; i < this.raw.length; i ++ )\n            this.raw[ i ] = ( i % 5 === 0 ) ? 1 : 0;\n        return this;\n\n    },\n\n    fromTRS( translate, quaternion, scale ) {\n\n        Matrix4.fromRotationTranslationScale( this.raw, quaternion, translate, scale );\n        return this;\n\n    },\n\n} );\n\nObject.assign( Matrix4, {\n\n    identity( out ) {\n\n        if ( out ) {\n\n            out[ 0 ] = 1;\n            out[ 5 ] = 1;\n            out[ 10 ] = 1;\n            out[ 15 ] = 1;\n            return out;\n\n        }\n\n        const a = new Float32Array( 16 );\n        a[ 0 ] = 1;\n        a[ 5 ] = 1;\n        a[ 10 ] = 1;\n        a[ 15 ] = 1;\n        return a;\n\n    },\n\n    perspective( out, fov, aspect, near, far ) {\n\n        const f = 1.0 / Math.tan( fov / 2 );\n        const nf = 1 / ( near - far );\n        out[ 0 ] = f / aspect;\n        out[ 1 ] = 0;\n        out[ 2 ] = 0;\n        out[ 3 ] = 0;\n        out[ 4 ] = 0;\n        out[ 5 ] = f;\n        out[ 6 ] = 0;\n        out[ 7 ] = 0;\n        out[ 8 ] = 0;\n        out[ 9 ] = 0;\n        out[ 10 ] = ( far + near ) * nf;\n        out[ 11 ] = - 1;\n        out[ 12 ] = 0;\n        out[ 13 ] = 0;\n        out[ 14 ] = 2 * far * near * nf;\n        out[ 15 ] = 0;\n\n        return out;\n\n    },\n\n    ortho( out, left, right, bottom, top, near, far ) {\n\n        const lr = 1 / ( left - right );\n        const bt = 1 / ( bottom - top );\n        const nf = 1 / ( near - far );\n        out[ 0 ] = - 2 * lr;\n        out[ 1 ] = 0;\n        out[ 3 ] = 0;\n        out[ 4 ] = 0;\n        out[ 5 ] = - 2 * bt;\n        out[ 6 ] = 0;\n        out[ 7 ] = 0;\n        out[ 8 ] = 0;\n        out[ 9 ] = 0;\n        out[ 10 ] = 2 * nf;\n        out[ 11 ] = 0;\n        out[ 12 ] = ( left + right ) * lr;\n        out[ 13 ] = ( top + bottom ) * bt;\n        out[ 14 ] = ( far + near ) * nf;\n        out[ 15 ] = 1;\n\n        return out;\n\n    },\n\n    transpose( out, a ) {\n\n        if ( out === a ) {\n\n            const a01 = a[ 1 ];\n            const a02 = a[ 2 ];\n            const a03 = a[ 3 ];\n            const a12 = a[ 6 ];\n            const a13 = a[ 7 ];\n            const a23 = a[ 11 ];\n            out[ 1 ] = a[ 4 ];\n            out[ 2 ] = a[ 8 ];\n            out[ 3 ] = a[ 12 ];\n            out[ 4 ] = a01;\n            out[ 6 ] = a[ 9 ];\n            out[ 7 ] = a[ 13 ];\n            out[ 8 ] = a02;\n            out[ 9 ] = a12;\n            out[ 11 ] = a[ 14 ];\n            out[ 12 ] = a03;\n            out[ 13 ] = a13;\n            out[ 14 ] = a23;\n\n        } else {\n\n            out[ 0 ] = a[ 0 ];\n            out[ 1 ] = a[ 4 ];\n            out[ 2 ] = a[ 8 ];\n            out[ 3 ] = a[ 12 ];\n            out[ 4 ] = a[ 1 ];\n            out[ 5 ] = a[ 5 ];\n            out[ 6 ] = a[ 9 ];\n            out[ 7 ] = a[ 13 ];\n            out[ 8 ] = a[ 2 ];\n            out[ 9 ] = a[ 6 ];\n            out[ 10 ] = a[ 10 ];\n            out[ 11 ] = a[ 14 ];\n            out[ 12 ] = a[ 3 ];\n            out[ 13 ] = a[ 7 ];\n            out[ 14 ] = a[ 11 ];\n            out[ 15 ] = a[ 15 ];\n\n        }\n\n        return out;\n\n    },\n\n    normalMat3( out, a ) {\n\n        const a00 = a[ 0 ];\n        const a01 = a[ 1 ];\n        const a02 = a[ 2 ];\n        const a03 = a[ 3 ];\n        const a10 = a[ 4 ];\n        const a11 = a[ 5 ];\n        const a12 = a[ 6 ];\n        const a13 = a[ 7 ];\n        const a20 = a[ 8 ];\n        const a21 = a[ 9 ];\n        const a22 = a[ 10 ];\n        const a23 = a[ 11 ];\n        const a30 = a[ 12 ];\n        const a31 = a[ 13 ];\n        const a32 = a[ 14 ];\n        const a33 = a[ 15 ];\n\n        const b00 = ( a00 * a11 ) - ( a01 * a10 );\n        const b01 = ( a00 * a12 ) - ( a02 * a10 );\n        const b02 = ( a00 * a13 ) - ( a03 * a10 );\n        const b03 = ( a01 * a12 ) - ( a02 * a11 );\n        const b04 = ( a01 * a13 ) - ( a03 * a11 );\n        const b05 = ( a02 * a13 ) - ( a03 * a12 );\n        const b06 = ( a20 * a31 ) - ( a21 * a30 );\n        const b07 = ( a20 * a32 ) - ( a22 * a30 );\n        const b08 = ( a20 * a33 ) - ( a23 * a30 );\n        const b09 = ( a21 * a32 ) - ( a22 * a31 );\n        const b10 = ( a21 * a33 ) - ( a23 * a31 );\n        const b11 = ( a22 * a33 ) - ( a23 * a32 );\n\n        let det = ( ( b00 * b11 ) - ( b01 * b10 ) ) + ( b02 * b09 ) + ( ( b03 * b08 ) - ( b04 * b07 ) ) + ( b05 * b06 );\n\n        if ( ! det ) return null;\n\n        det = 1.0 / det;\n\n        out[ 0 ] = ( a11 * b11 - a12 * b10 + a13 * b09 ) * det;\n        out[ 1 ] = ( a12 * b08 - a10 * b11 - a13 * b07 ) * det;\n        out[ 2 ] = ( a10 * b10 - a11 * b08 + a13 * b06 ) * det;\n\n        out[ 3 ] = ( a02 * b10 - a01 * b11 - a03 * b09 ) * det;\n        out[ 4 ] = ( a00 * b11 - a02 * b08 + a03 * b07 ) * det;\n        out[ 5 ] = ( a01 * b08 - a00 * b10 - a03 * b06 ) * det;\n\n        out[ 6 ] = ( a31 * b05 - a32 * b04 + a33 * b03 ) * det;\n        out[ 7 ] = ( a32 * b02 - a30 * b05 - a33 * b01 ) * det;\n        out[ 8 ] = ( a30 * b04 - a31 * b02 + a33 * b00 ) * det;\n\n        return out;\n\n    },\n\n    transformVec4( out, m, v ) {\n\n        out[ 0 ] = m[ 0 ] * v[ 0 ] + m[ 4 ] * v[ 1 ] + m[ 8 ] * v[ 2 ] + m[ 12 ] * v[ 3 ];\n        out[ 1 ] = m[ 1 ] * v[ 0 ] + m[ 5 ] * v[ 1 ] + m[ 9 ] * v[ 2 ] + m[ 13 ] * v[ 3 ];\n        out[ 2 ] = m[ 2 ] * v[ 0 ] + m[ 6 ] * v[ 1 ] + m[ 10 ] * v[ 2 ] + m[ 14 ] * v[ 3 ];\n        out[ 3 ] = m[ 3 ] * v[ 0 ] + m[ 7 ] * v[ 1 ] + m[ 11 ] * v[ 2 ] + m[ 15 ] * v[ 3 ];\n\n        return out;\n\n    },\n\n    mult( out, a, b ) {\n\n        const a00 = a[ 0 ];\n        const a01 = a[ 1 ];\n        const a02 = a[ 2 ];\n        const a03 = a[ 3 ];\n        const a10 = a[ 4 ];\n        const a11 = a[ 5 ];\n        const a12 = a[ 6 ];\n        const a13 = a[ 7 ];\n        const a20 = a[ 8 ];\n        const a21 = a[ 9 ];\n        const a22 = a[ 10 ];\n        const a23 = a[ 11 ];\n        const a30 = a[ 12 ];\n        const a31 = a[ 13 ];\n        const a32 = a[ 14 ];\n        const a33 = a[ 15 ];\n\n        let b0 = b[ 0 ];\n        let b1 = b[ 1 ];\n        let b2 = b[ 2 ];\n        let b3 = b[ 3 ];\n\n        out[ 0 ] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n        out[ 1 ] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n        out[ 2 ] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n        out[ 3 ] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n        b0 = b[ 4 ]; b1 = b[ 5 ]; b2 = b[ 6 ]; b3 = b[ 7 ];\n        out[ 4 ] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n        out[ 5 ] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n        out[ 6 ] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n        out[ 7 ] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n        b0 = b[ 8 ]; b1 = b[ 9 ]; b2 = b[ 10 ]; b3 = b[ 11 ];\n        out[ 8 ] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n        out[ 9 ] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n        out[ 10 ] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n        out[ 11 ] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n        b0 = b[ 12 ]; b1 = b[ 13 ]; b2 = b[ 14 ]; b3 = b[ 15 ];\n        out[ 12 ] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n        out[ 13 ] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n        out[ 14 ] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n        out[ 15 ] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n        return out;\n\n    },\n\n    scale( out, x, y, z ) {\n\n        out[ 0 ] *= x;\n        out[ 1 ] *= x;\n        out[ 2 ] *= x;\n        out[ 3 ] *= x;\n        out[ 4 ] *= y;\n        out[ 5 ] *= y;\n        out[ 6 ] *= y;\n        out[ 7 ] *= y;\n        out[ 8 ] *= z;\n        out[ 9 ] *= z;\n        out[ 10 ] *= z;\n        out[ 11 ] *= z;\n\n        return out;\n\n    },\n\n    rotateY( out, rad ) {\n\n        const s = Math.sin( rad );\n        const c = Math.cos( rad );\n        const a00 = out[ 0 ];\n        const a01 = out[ 1 ];\n        const a02 = out[ 2 ];\n        const a03 = out[ 3 ];\n        const a20 = out[ 8 ];\n        const a21 = out[ 9 ];\n        const a22 = out[ 10 ];\n        const a23 = out[ 11 ];\n\n        out[ 0 ] = a00 * c - a20 * s;\n        out[ 1 ] = a01 * c - a21 * s;\n        out[ 2 ] = a02 * c - a22 * s;\n        out[ 3 ] = a03 * c - a23 * s;\n        out[ 8 ] = a00 * s + a20 * c;\n        out[ 9 ] = a01 * s + a21 * c;\n        out[ 10 ] = a02 * s + a22 * c;\n        out[ 11 ] = a03 * s + a23 * c;\n\n        return out;\n\n    },\n\n    rotateX( out, rad ) {\n\n        const s = Math.sin( rad );\n        const c = Math.cos( rad );\n        const a10 = out[ 4 ];\n        const a11 = out[ 5 ];\n        const a12 = out[ 6 ];\n        const a13 = out[ 7 ];\n        const a20 = out[ 8 ];\n        const a21 = out[ 9 ];\n        const a22 = out[ 10 ];\n        const a23 = out[ 11 ];\n\n        out[ 4 ] = a10 * c + a20 * s;\n        out[ 5 ] = a11 * c + a21 * s;\n        out[ 6 ] = a12 * c + a22 * s;\n        out[ 7 ] = a13 * c + a23 * s;\n        out[ 8 ] = a20 * c - a10 * s;\n        out[ 9 ] = a21 * c - a11 * s;\n        out[ 10 ] = a22 * c - a12 * s;\n        out[ 11 ] = a23 * c - a13 * s;\n\n        return out;\n\n    },\n\n    rotateZ( out, rad ) {\n\n        const s = Math.sin( rad );\n        const c = Math.cos( rad );\n        const a00 = out[ 0 ];\n        const a01 = out[ 1 ];\n        const a02 = out[ 2 ];\n        const a03 = out[ 3 ];\n        const a10 = out[ 4 ];\n        const a11 = out[ 5 ];\n        const a12 = out[ 6 ];\n        const a13 = out[ 7 ];\n\n        out[ 0 ] = a00 * c + a10 * s;\n        out[ 1 ] = a01 * c + a11 * s;\n        out[ 2 ] = a02 * c + a12 * s;\n        out[ 3 ] = a03 * c + a13 * s;\n        out[ 4 ] = a10 * c - a00 * s;\n        out[ 5 ] = a11 * c - a01 * s;\n        out[ 6 ] = a12 * c - a02 * s;\n        out[ 7 ] = a13 * c - a03 * s;\n\n        return out;\n\n    },\n\n    rotate( out, rad, axis ) {\n\n        let x = axis[ 0 ];\n        let y = axis[ 1 ];\n        let z = axis[ 2 ];\n        let len = Math.sqrt( x * x + y * y + z * z );\n\n        if ( Math.abs( len ) < 0.000001 ) return null;\n\n        len = 1 / len;\n        x *= len;\n        y *= len;\n        z *= len;\n\n        const s = Math.sin( rad );\n        const c = Math.cos( rad );\n        const t = 1 - c;\n\n        const a00 = out[ 0 ]; const a01 = out[ 1 ]; const a02 = out[ 2 ]; const a03 = out[ 3 ];\n        const a10 = out[ 4 ]; const a11 = out[ 5 ]; const a12 = out[ 6 ]; const a13 = out[ 7 ];\n        const a20 = out[ 8 ]; const a21 = out[ 9 ]; const a22 = out[ 10 ]; const a23 = out[ 11 ];\n\n        const b00 = x * x * t + c; const b01 = y * x * t + z * s; const b02 = z * x * t - y * s;\n        const b10 = x * y * t - z * s; const b11 = y * y * t + c; const b12 = z * y * t + x * s;\n        const b20 = x * z * t + y * s; const b21 = y * z * t - x * s; const b22 = z * z * t + c;\n\n        out[ 0 ] = a00 * b00 + a10 * b01 + a20 * b02;\n        out[ 1 ] = a01 * b00 + a11 * b01 + a21 * b02;\n        out[ 2 ] = a02 * b00 + a12 * b01 + a22 * b02;\n        out[ 3 ] = a03 * b00 + a13 * b01 + a23 * b02;\n        out[ 4 ] = a00 * b10 + a10 * b11 + a20 * b12;\n        out[ 5 ] = a01 * b10 + a11 * b11 + a21 * b12;\n        out[ 6 ] = a02 * b10 + a12 * b11 + a22 * b12;\n        out[ 7 ] = a03 * b10 + a13 * b11 + a23 * b12;\n        out[ 8 ] = a00 * b20 + a10 * b21 + a20 * b22;\n        out[ 9 ] = a01 * b20 + a11 * b21 + a21 * b22;\n        out[ 10 ] = a02 * b20 + a12 * b21 + a22 * b22;\n        out[ 11 ] = a03 * b20 + a13 * b21 + a23 * b22;\n\n        return out;\n\n    },\n\n    invert( out, mat ) {\n\n        if ( mat === undefined ) mat = out; // If input isn't sent, then output is also input\n\n        const a00 = mat[ 0 ];\n        const a01 = mat[ 1 ];\n        const a02 = mat[ 2 ];\n        const a03 = mat[ 3 ];\n        const a10 = mat[ 4 ];\n        const a11 = mat[ 5 ];\n        const a12 = mat[ 6 ];\n        const a13 = mat[ 7 ];\n        const a20 = mat[ 8 ];\n        const a21 = mat[ 9 ];\n        const a22 = mat[ 10 ];\n        const a23 = mat[ 11 ];\n        const a30 = mat[ 12 ];\n        const a31 = mat[ 13 ];\n        const a32 = mat[ 14 ];\n        const a33 = mat[ 15 ];\n\n        const b00 = a00 * a11 - a01 * a10;\n        const b01 = a00 * a12 - a02 * a10;\n        const b02 = a00 * a13 - a03 * a10;\n        const b03 = a01 * a12 - a02 * a11;\n        const b04 = a01 * a13 - a03 * a11;\n        const b05 = a02 * a13 - a03 * a12;\n        const b06 = a20 * a31 - a21 * a30;\n        const b07 = a20 * a32 - a22 * a30;\n        const b08 = a20 * a33 - a23 * a30;\n        const b09 = a21 * a32 - a22 * a31;\n        const b10 = a21 * a33 - a23 * a31;\n        const b11 = a22 * a33 - a23 * a32;\n\n        let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n        if ( ! det ) return false;\n\n        det = 1.0 / det;\n\n        out[ 0 ] = ( a11 * b11 - a12 * b10 + a13 * b09 ) * det;\n        out[ 1 ] = ( a02 * b10 - a01 * b11 - a03 * b09 ) * det;\n        out[ 2 ] = ( a31 * b05 - a32 * b04 + a33 * b03 ) * det;\n        out[ 3 ] = ( a22 * b04 - a21 * b05 - a23 * b03 ) * det;\n        out[ 4 ] = ( a12 * b08 - a10 * b11 - a13 * b07 ) * det;\n        out[ 5 ] = ( a00 * b11 - a02 * b08 + a03 * b07 ) * det;\n        out[ 6 ] = ( a32 * b02 - a30 * b05 - a33 * b01 ) * det;\n        out[ 7 ] = ( a20 * b05 - a22 * b02 + a23 * b01 ) * det;\n        out[ 8 ] = ( a10 * b10 - a11 * b08 + a13 * b06 ) * det;\n        out[ 9 ] = ( a01 * b08 - a00 * b10 - a03 * b06 ) * det;\n        out[ 10 ] = ( a30 * b04 - a31 * b02 + a33 * b00 ) * det;\n        out[ 11 ] = ( a21 * b02 - a20 * b04 - a23 * b00 ) * det;\n        out[ 12 ] = ( a11 * b07 - a10 * b09 - a12 * b06 ) * det;\n        out[ 13 ] = ( a00 * b09 - a01 * b07 + a02 * b06 ) * det;\n        out[ 14 ] = ( a31 * b01 - a30 * b03 - a32 * b00 ) * det;\n        out[ 15 ] = ( a20 * b03 - a21 * b01 + a22 * b00 ) * det;\n\n        return true;\n\n    },\n\n    translate( out, x, y, z ) {\n\n        out[ 12 ] = out[ 0 ] * x + out[ 4 ] * y + out[ 8 ] * z + out[ 12 ];\n        out[ 13 ] = out[ 1 ] * x + out[ 5 ] * y + out[ 9 ] * z + out[ 13 ];\n        out[ 14 ] = out[ 2 ] * x + out[ 6 ] * y + out[ 10 ] * z + out[ 14 ];\n        out[ 15 ] = out[ 3 ] * x + out[ 7 ] * y + out[ 11 ] * z + out[ 15 ];\n\n        return out;\n\n    },\n\n    lookAt( out, eye, target, up ) {\n\n        let x0;\n        let x1;\n        let x2;\n        let y0;\n        let y1;\n        let y2;\n        let z0;\n        let z1;\n        let z2;\n        let len;\n        const eyex = eye[ 0 ];\n        const eyey = eye[ 1 ];\n        const eyez = eye[ 2 ];\n        const upx = up[ 0 ];\n        const upy = up[ 1 ];\n        const upz = up[ 2 ];\n        const centerx = target[ 0 ];\n        const centery = target[ 1 ];\n        const centerz = target[ 2 ];\n        if ( Math.abs( eyex - centerx ) < 0.000001 &&\n            Math.abs( eyey - centery ) < 0.000001 &&\n            Math.abs( eyez - centerz ) < 0.000001 )\n            return this.identity( out );\n\n        z0 = eyex - centerx;\n        z1 = eyey - centery;\n        z2 = eyez - centerz;\n        len = 1 / Math.sqrt( z0 * z0 + z1 * z1 + z2 * z2 );\n        z0 *= len;\n        z1 *= len;\n        z2 *= len;\n        x0 = upy * z2 - upz * z1;\n        x1 = upz * z0 - upx * z2;\n        x2 = upx * z1 - upy * z0;\n        len = Math.sqrt( x0 * x0 + x1 * x1 + x2 * x2 );\n        if ( ! len ) {\n\n            x0 = 0;\n            x1 = 0;\n            x2 = 0;\n\n        } else {\n\n            len = 1 / len;\n            x0 *= len;\n            x1 *= len;\n            x2 *= len;\n\n        }\n        y0 = z1 * x2 - z2 * x1;\n        y1 = z2 * x0 - z0 * x2;\n        y2 = z0 * x1 - z1 * x0;\n        len = Math.sqrt( y0 * y0 + y1 * y1 + y2 * y2 );\n        if ( ! len ) {\n\n            y0 = 0;\n            y1 = 0;\n            y2 = 0;\n\n        } else {\n\n            len = 1 / len;\n            y0 *= len;\n            y1 *= len;\n            y2 *= len;\n\n        }\n        out[ 0 ] = x0;\n        out[ 1 ] = y0;\n        out[ 2 ] = z0;\n        out[ 3 ] = 0;\n        out[ 4 ] = x1;\n        out[ 5 ] = y1;\n        out[ 6 ] = z1;\n        out[ 7 ] = 0;\n        out[ 8 ] = x2;\n        out[ 9 ] = y2;\n        out[ 10 ] = z2;\n        out[ 11 ] = 0;\n        out[ 12 ] = - ( x0 * eyex + x1 * eyey + x2 * eyez );\n        out[ 13 ] = - ( y0 * eyex + y1 * eyey + y2 * eyez );\n        out[ 14 ] = - ( z0 * eyex + z1 * eyey + z2 * eyez );\n        out[ 15 ] = 1;\n\n        return out;\n\n    },\n\n    equals: ( function () {\n\n        const EPS = 0.000001;\n\n        return function equals( a, b ) {\n\n            const a0 = a[ 0 ];\n            const a1 = a[ 1 ];\n            const a2 = a[ 2 ];\n            const a3 = a[ 3 ];\n            const a4 = a[ 4 ];\n            const a5 = a[ 5 ];\n            const a6 = a[ 6 ];\n            const a7 = a[ 7 ];\n            const a8 = a[ 8 ];\n            const a9 = a[ 9 ];\n            const a10 = a[ 10 ];\n            const a11 = a[ 11 ];\n            const a12 = a[ 12 ];\n            const a13 = a[ 13 ];\n            const a14 = a[ 14 ];\n            const a15 = a[ 15 ];\n            const b0 = b[ 0 ];\n            const b1 = b[ 1 ];\n            const b2 = b[ 2 ];\n            const b3 = b[ 3 ];\n            const b4 = b[ 4 ];\n            const b5 = b[ 5 ];\n            const b6 = b[ 6 ];\n            const b7 = b[ 7 ];\n            const b8 = b[ 8 ];\n            const b9 = b[ 9 ];\n            const b10 = b[ 10 ];\n            const b11 = b[ 11 ];\n            const b12 = b[ 12 ];\n            const b13 = b[ 13 ];\n            const b14 = b[ 14 ];\n            const b15 = b[ 15 ];\n\n            return ( Math.abs( a0 - b0 ) <= EPS * Math.max( 1.0, Math.abs( a0 ), Math.abs( b0 ) ) &&\n              Math.abs( a1 - b1 ) <= EPS * Math.max( 1.0, Math.abs( a1 ), Math.abs( b1 ) ) &&\n              Math.abs( a2 - b2 ) <= EPS * Math.max( 1.0, Math.abs( a2 ), Math.abs( b2 ) ) &&\n              Math.abs( a3 - b3 ) <= EPS * Math.max( 1.0, Math.abs( a3 ), Math.abs( b3 ) ) &&\n              Math.abs( a4 - b4 ) <= EPS * Math.max( 1.0, Math.abs( a4 ), Math.abs( b4 ) ) &&\n              Math.abs( a5 - b5 ) <= EPS * Math.max( 1.0, Math.abs( a5 ), Math.abs( b5 ) ) &&\n              Math.abs( a6 - b6 ) <= EPS * Math.max( 1.0, Math.abs( a6 ), Math.abs( b6 ) ) &&\n              Math.abs( a7 - b7 ) <= EPS * Math.max( 1.0, Math.abs( a7 ), Math.abs( b7 ) ) &&\n              Math.abs( a8 - b8 ) <= EPS * Math.max( 1.0, Math.abs( a8 ), Math.abs( b8 ) ) &&\n              Math.abs( a9 - b9 ) <= EPS * Math.max( 1.0, Math.abs( a9 ), Math.abs( b9 ) ) &&\n              Math.abs( a10 - b10 ) <= EPS * Math.max( 1.0, Math.abs( a10 ), Math.abs( b10 ) ) &&\n              Math.abs( a11 - b11 ) <= EPS * Math.max( 1.0, Math.abs( a11 ), Math.abs( b11 ) ) &&\n              Math.abs( a12 - b12 ) <= EPS * Math.max( 1.0, Math.abs( a12 ), Math.abs( b12 ) ) &&\n              Math.abs( a13 - b13 ) <= EPS * Math.max( 1.0, Math.abs( a13 ), Math.abs( b13 ) ) &&\n              Math.abs( a14 - b14 ) <= EPS * Math.max( 1.0, Math.abs( a14 ), Math.abs( b14 ) ) &&\n              Math.abs( a15 - b15 ) <= EPS * Math.max( 1.0, Math.abs( a15 ), Math.abs( b15 ) ) );\n\n        };\n\n    }() ),\n\n    clone( a ) {\n\n        const out = new Float32Array( 16 );\n        out[ 0 ] = a[ 0 ];\n        out[ 1 ] = a[ 1 ];\n        out[ 2 ] = a[ 2 ];\n        out[ 3 ] = a[ 3 ];\n        out[ 4 ] = a[ 4 ];\n        out[ 5 ] = a[ 5 ];\n        out[ 6 ] = a[ 6 ];\n        out[ 7 ] = a[ 7 ];\n        out[ 8 ] = a[ 8 ];\n        out[ 9 ] = a[ 9 ];\n        out[ 10 ] = a[ 10 ];\n        out[ 11 ] = a[ 11 ];\n        out[ 12 ] = a[ 12 ];\n        out[ 13 ] = a[ 13 ];\n        out[ 14 ] = a[ 14 ];\n        out[ 15 ] = a[ 15 ];\n\n        return out;\n\n    },\n\n    copy( out, a ) {\n\n        out[ 0 ] = a[ 0 ];\n        out[ 1 ] = a[ 1 ];\n        out[ 2 ] = a[ 2 ];\n        out[ 3 ] = a[ 3 ];\n        out[ 4 ] = a[ 4 ];\n        out[ 5 ] = a[ 5 ];\n        out[ 6 ] = a[ 6 ];\n        out[ 7 ] = a[ 7 ];\n        out[ 8 ] = a[ 8 ];\n        out[ 9 ] = a[ 9 ];\n        out[ 10 ] = a[ 10 ];\n        out[ 11 ] = a[ 11 ];\n        out[ 12 ] = a[ 12 ];\n        out[ 13 ] = a[ 13 ];\n        out[ 14 ] = a[ 14 ];\n        out[ 15 ] = a[ 15 ];\n\n        return out;\n\n    },\n\n    fromQuat( out, q ) {\n\n        const x = q[ 0 ];\n        const y = q[ 1 ];\n        const z = q[ 2 ];\n        const w = q[ 3 ];\n        const x2 = x + x;\n        const y2 = y + y;\n        const z2 = z + z;\n        const xx = x * x2;\n        const yx = y * x2;\n        const yy = y * y2;\n        const zx = z * x2;\n        const zy = z * y2;\n        const zz = z * z2;\n        const wx = w * x2;\n        const wy = w * y2;\n        const wz = w * z2;\n        out[ 0 ] = 1 - yy - zz;\n        out[ 1 ] = yx + wz;\n        out[ 2 ] = zx - wy;\n        out[ 3 ] = 0;\n        out[ 4 ] = yx - wz;\n        out[ 5 ] = 1 - xx - zz;\n        out[ 6 ] = zy + wx;\n        out[ 7 ] = 0;\n        out[ 8 ] = zx + wy;\n        out[ 9 ] = zy - wx;\n        out[ 10 ] = 1 - xx - yy;\n        out[ 11 ] = 0;\n        out[ 12 ] = 0;\n        out[ 13 ] = 0;\n        out[ 14 ] = 0;\n        out[ 15 ] = 1;\n\n        return out;\n\n    },\n\n    fromRotationTranslation( out, q, v ) {\n\n        // Quaternion math\n        const x = q[ 0 ];\n        const y = q[ 1 ];\n        const z = q[ 2 ];\n        const w = q[ 3 ];\n        const x2 = x + x;\n        const y2 = y + y;\n        const z2 = z + z;\n        const xx = x * x2;\n        const xy = x * y2;\n        const xz = x * z2;\n        const yy = y * y2;\n        const yz = y * z2;\n        const zz = z * z2;\n        const wx = w * x2;\n        const wy = w * y2;\n        const wz = w * z2;\n        out[ 0 ] = 1 - ( yy + zz );\n        out[ 1 ] = xy + wz;\n        out[ 2 ] = xz - wy;\n        out[ 3 ] = 0;\n        out[ 4 ] = xy - wz;\n        out[ 5 ] = 1 - ( xx + zz );\n        out[ 6 ] = yz + wx;\n        out[ 7 ] = 0;\n        out[ 8 ] = xz + wy;\n        out[ 9 ] = yz - wx;\n        out[ 10 ] = 1 - ( xx + yy );\n        out[ 11 ] = 0;\n        out[ 12 ] = v[ 0 ];\n        out[ 13 ] = v[ 1 ];\n        out[ 14 ] = v[ 2 ];\n        out[ 15 ] = 1;\n        return out;\n\n    },\n\n    fromRotationTranslationScale( out, q, v, s ) {\n\n        const x = q[ 0 ];\n        const y = q[ 1 ];\n        const z = q[ 2 ];\n        const w = q[ 3 ];\n        const x2 = x + x;\n        const y2 = y + y;\n        const z2 = z + z;\n        const xx = x * x2;\n        const xy = x * y2;\n        const xz = x * z2;\n        const yy = y * y2;\n        const yz = y * z2;\n        const zz = z * z2;\n        const wx = w * x2;\n        const wy = w * y2;\n        const wz = w * z2;\n        const sx = s[ 0 ];\n        const sy = s[ 1 ];\n        const sz = s[ 2 ];\n        out[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n        out[ 1 ] = ( xy + wz ) * sx;\n        out[ 2 ] = ( xz - wy ) * sx;\n        out[ 3 ] = 0;\n        out[ 4 ] = ( xy - wz ) * sy;\n        out[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n        out[ 6 ] = ( yz + wx ) * sy;\n        out[ 7 ] = 0;\n        out[ 8 ] = ( xz + wy ) * sz;\n        out[ 9 ] = ( yz - wx ) * sz;\n        out[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n        out[ 11 ] = 0;\n        out[ 12 ] = v[ 0 ];\n        out[ 13 ] = v[ 1 ];\n        out[ 14 ] = v[ 2 ];\n        out[ 15 ] = 1;\n\n        return out;\n\n    },\n\n    getTranslation( out, mat ) {\n\n        out[ 0 ] = mat[ 12 ];\n        out[ 1 ] = mat[ 13 ];\n        out[ 2 ] = mat[ 14 ];\n        return out;\n\n    },\n\n    getScaling( out, mat ) {\n\n        const m11 = mat[ 0 ];\n        const m12 = mat[ 1 ];\n        const m13 = mat[ 2 ];\n        const m21 = mat[ 4 ];\n        const m22 = mat[ 5 ];\n        const m23 = mat[ 6 ];\n        const m31 = mat[ 8 ];\n        const m32 = mat[ 9 ];\n        const m33 = mat[ 10 ];\n        out[ 0 ] = Math.sqrt( m11 * m11 + m12 * m12 + m13 * m13 );\n        out[ 1 ] = Math.sqrt( m21 * m21 + m22 * m22 + m23 * m23 );\n        out[ 2 ] = Math.sqrt( m31 * m31 + m32 * m32 + m33 * m33 );\n        return out;\n\n    },\n\n    getRotation( out, mat ) {\n\n        // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n        const trace = mat[ 0 ] + mat[ 5 ] + mat[ 10 ];\n        let S = 0;\n        if ( trace > 0 ) {\n\n            S = Math.sqrt( trace + 1.0 ) * 2;\n            out[ 3 ] = 0.25 * S;\n            out[ 0 ] = ( mat[ 6 ] - mat[ 9 ] ) / S;\n            out[ 1 ] = ( mat[ 8 ] - mat[ 2 ] ) / S;\n            out[ 2 ] = ( mat[ 1 ] - mat[ 4 ] ) / S;\n\n        } else if ( ( mat[ 0 ] > mat[ 5 ] ) && ( mat[ 0 ] > mat[ 10 ] ) ) {\n\n            S = Math.sqrt( 1.0 + mat[ 0 ] - mat[ 5 ] - mat[ 10 ] ) * 2;\n            out[ 3 ] = ( mat[ 6 ] - mat[ 9 ] ) / S;\n            out[ 0 ] = 0.25 * S;\n            out[ 1 ] = ( mat[ 1 ] + mat[ 4 ] ) / S;\n            out[ 2 ] = ( mat[ 8 ] + mat[ 2 ] ) / S;\n\n        } else if ( mat[ 5 ] > mat[ 10 ] ) {\n\n            S = Math.sqrt( 1.0 + mat[ 5 ] - mat[ 0 ] - mat[ 10 ] ) * 2;\n            out[ 3 ] = ( mat[ 8 ] - mat[ 2 ] ) / S;\n            out[ 0 ] = ( mat[ 1 ] + mat[ 4 ] ) / S;\n            out[ 1 ] = 0.25 * S;\n            out[ 2 ] = ( mat[ 6 ] + mat[ 9 ] ) / S;\n\n        } else {\n\n            S = Math.sqrt( 1.0 + mat[ 10 ] - mat[ 0 ] - mat[ 5 ] ) * 2;\n            out[ 3 ] = ( mat[ 1 ] - mat[ 4 ] ) / S;\n            out[ 0 ] = ( mat[ 8 ] + mat[ 2 ] ) / S;\n            out[ 1 ] = ( mat[ 6 ] + mat[ 9 ] ) / S;\n            out[ 2 ] = 0.25 * S;\n\n        }\n        return out;\n\n    },\n\n    determinant( m ) {\n\n\n        const n11 = m[ 0 ];\n        const n12 = m[ 4 ];\n        const n13 = m[ 8 ];\n        const n14 = m[ 12 ];\n        const n21 = m[ 1 ];\n        const n22 = m[ 5 ];\n        const n23 = m[ 9 ];\n        const n24 = m[ 13 ];\n        const n31 = m[ 2 ];\n        const n32 = m[ 6 ];\n        const n33 = m[ 10 ];\n        const n34 = m[ 14 ];\n        const n41 = m[ 3 ];\n        const n42 = m[ 7 ];\n        const n43 = m[ 11 ];\n        const n44 = m[ 15 ];\n\n        // TODO: make this more efficient\n        // ( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n        return (\n            n41 * (\n                + n14 * n23 * n32\n                - n13 * n24 * n32\n                - n14 * n22 * n33\n                + n12 * n24 * n33\n                + n13 * n22 * n34\n                - n12 * n23 * n34\n            ) +\n            n42 * (\n                + n11 * n23 * n34\n                - n11 * n24 * n33\n                + n14 * n21 * n33\n                - n13 * n21 * n34\n                + n13 * n24 * n31\n                - n14 * n23 * n31\n            ) +\n            n43 * (\n                + n11 * n24 * n32\n                - n11 * n22 * n34\n                - n14 * n21 * n32\n                + n12 * n21 * n34\n                + n14 * n22 * n31\n                - n12 * n24 * n31\n            ) +\n            n44 * (\n                - n13 * n22 * n31\n                - n11 * n23 * n32\n                + n11 * n22 * n33\n                + n13 * n21 * n32\n                - n12 * n21 * n33\n                + n12 * n23 * n31\n            )\n        );\n\n    },\n\n    decompose( m, position, quaternion, scale ) {\n\n        const te = Matrix4.clone( m );\n\n        let sx = Math.sqrt( ( te[ 0 ] * te[ 0 ] ) + ( te[ 1 ] * te[ 1 ] ) + ( te[ 2 ] * te[ 2 ] ) );\n        const sy = Math.sqrt( ( te[ 4 ] * te[ 4 ] ) + ( te[ 5 ] * te[ 5 ] ) + ( te[ 6 ] * te[ 6 ] ) );\n        const sz = Math.sqrt( ( te[ 8 ] * te[ 8 ] ) + ( te[ 9 ] * te[ 9 ] ) + ( te[ 10 ] * te[ 10 ] ) );\n\n        // if determine is negative, we need to invert one scale\n        const det = Matrix4.determinant( te );\n        if ( det < 0 ) sx = - sx;\n\n        position[ 0 ] = te[ 12 ];\n        position[ 1 ] = te[ 13 ];\n        position[ 2 ] = te[ 14 ];\n\n        // scale the rotation part\n\n        const invSX = 1 / sx;\n        const invSY = 1 / sy;\n        const invSZ = 1 / sz;\n\n        te[ 0 ] *= invSX;\n        te[ 1 ] *= invSX;\n        te[ 2 ] *= invSX;\n\n        te[ 4 ] *= invSY;\n        te[ 5 ] *= invSY;\n        te[ 6 ] *= invSY;\n\n        te[ 8 ] *= invSZ;\n        te[ 9 ] *= invSZ;\n        te[ 10 ] *= invSZ;\n\n        Quaternion.fromMatrix4( quaternion, te );\n\n        scale[ 0 ] = sx;\n        scale[ 1 ] = sy;\n        scale[ 2 ] = sz;\n\n    },\n\n} );\n\nexport { Matrix4 };\n","const isArrayBuffer = window.SharedArrayBuffer\n    ? function isArrayBufferOrSharedArrayBuffer( ary ) {\n\n        return ary && ary.buffer && ( ary.buffer instanceof ArrayBuffer || ary.buffer instanceof window.SharedArrayBuffer );\n\n    } : function isArrayBuffer( ary ) {\n\n        return ary && ary.buffer && ary.buffer instanceof ArrayBuffer;\n\n    };\n\nconst BYTE = 0x1400;\nconst UNSIGNED_BYTE = 0x1401;\nconst SHORT = 0x1402;\nconst UNSIGNED_SHORT = 0x1403;\nconst INT = 0x1404;\nconst UNSIGNED_INT = 0x1405;\nconst FLOAT = 0x1406;\nconst UNSIGNED_SHORT_4_4_4_4 = 0x8033;\nconst UNSIGNED_SHORT_5_5_5_1 = 0x8034;\nconst UNSIGNED_SHORT_5_6_5 = 0x8363;\nconst HALF_FLOAT = 0x140B;\nconst UNSIGNED_INT_2_10_10_10_REV = 0x8368;\nconst UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B;\nconst UNSIGNED_INT_5_9_9_9_REV = 0x8C3E;\nconst FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD;\nconst UNSIGNED_INT_24_8 = 0x84FA;\n\nconst glTypeToTypedArray = {};\n{\n\n    const tt = glTypeToTypedArray;\n    tt[ BYTE ] = Int8Array;\n    tt[ UNSIGNED_BYTE ] = Uint8Array;\n    tt[ SHORT ] = Int16Array;\n    tt[ UNSIGNED_SHORT ] = Uint16Array;\n    tt[ INT ] = Int32Array;\n    tt[ UNSIGNED_INT ] = Uint32Array;\n    tt[ FLOAT ] = Float32Array;\n    tt[ UNSIGNED_SHORT_4_4_4_4 ] = Uint16Array;\n    tt[ UNSIGNED_SHORT_5_5_5_1 ] = Uint16Array;\n    tt[ UNSIGNED_SHORT_5_6_5 ] = Uint16Array;\n    tt[ HALF_FLOAT ] = Uint16Array;\n    tt[ UNSIGNED_INT_2_10_10_10_REV ] = Uint32Array;\n    tt[ UNSIGNED_INT_10F_11F_11F_REV ] = Uint32Array;\n    tt[ UNSIGNED_INT_5_9_9_9_REV ] = Uint32Array;\n    tt[ FLOAT_32_UNSIGNED_INT_24_8_REV ] = Uint32Array;\n    tt[ UNSIGNED_INT_24_8 ] = Uint32Array;\n\n}\n\nfunction getGLTypeFromTypedArrayType( typedArrayType ) {\n\n    switch ( typedArrayType ) {\n\n    case Int8Array:\n        return BYTE;\n    case Uint8Array:\n        return UNSIGNED_BYTE;\n    case Uint8ClampedArray:\n        return UNSIGNED_BYTE;\n    case Int16Array:\n        return SHORT;\n    case Uint16Array:\n        return UNSIGNED_SHORT;\n    case Int32Array:\n        return INT;\n    case Uint32Array:\n        return UNSIGNED_INT;\n    case Float32Array:\n        return FLOAT;\n    default:\n        throw new Error( 'unsupported typed array type' );\n\n    }\n\n}\n\nfunction getGLTypeFromTypedArray( typedArray ) {\n\n    if ( typedArray instanceof Int8Array ) return BYTE;\n    if ( typedArray instanceof Uint8Array ) return UNSIGNED_BYTE;\n    if ( typedArray instanceof Uint8ClampedArray ) return UNSIGNED_BYTE;\n    if ( typedArray instanceof Int16Array ) return SHORT;\n    if ( typedArray instanceof Uint16Array ) return UNSIGNED_SHORT;\n    if ( typedArray instanceof Int32Array ) return INT;\n    if ( typedArray instanceof Uint32Array ) return UNSIGNED_INT;\n    if ( typedArray instanceof Float32Array ) return FLOAT;\n    throw new Error( 'unsupported typed array type' );\n\n}\n\nfunction getTypedArrayTypeFromGLType( type ) {\n\n    const arrayType = glTypeToTypedArray[ type ];\n    if ( ! arrayType ) throw new Error( 'unkonw gl type' );\n    return arrayType;\n\n}\n\nfunction getTypedArray( array, Type = Float32Array ) {\n\n    if ( isArrayBuffer( array ) )\n        return array;\n    return new Type( array );\n\n}\n\nexport {\n    isArrayBuffer,\n    getTypedArray,\n    getGLTypeFromTypedArray,\n    getGLTypeFromTypedArrayType,\n    getTypedArrayTypeFromGLType,\n};\n","import { Vector3 } from '../math/Vector3';\nimport { Quaternion } from '../math/Quaternion';\nimport { Matrix4 } from '../math/Matrix4';\nimport { isArrayBuffer } from '../renderer/typedArray';\n\nfunction Transform() {\n\n    this._position = new Vector3( 0, 0, 0 );\n    this._scale = new Vector3( 1, 1, 1 );\n    this._rotation = new Vector3( 0, 0, 0 );\n    this._quaternion = new Quaternion();\n    this.matrix = new Matrix4();\n    this.normMat = new Float32Array( 9 );\n    this.worldMatrix = new Matrix4();\n\n    this.forward = new Float32Array( 4 );\n    this.up = new Float32Array( 4 );\n    this.right = new Float32Array( 4 );\n\n    this._needUpdateMatrix = false;\n    this.needUpdateWorldMatrix = true;\n\n}\n\nObject.defineProperties( Transform.prototype, {\n\n    position: {\n\n        get() {\n\n            return this._position.getArray().slice();\n\n        },\n\n        set( v ) {\n\n            this.setPosition( v );\n\n        },\n\n    },\n\n    scale: {\n\n        get() {\n\n            return this._scale.getArray().slice();\n\n        },\n\n        set( v ) {\n\n            this.setScale( v );\n\n        },\n\n    },\n\n    rotation: {\n\n        get() {\n\n            return this._rotation.getArray().slice();\n\n        },\n\n        set( v ) {\n\n            this.setRotation( v );\n\n        },\n\n    },\n\n    quaternion: {\n\n        get() {\n\n            return this._quaternion.getArray().slice();\n\n        },\n\n        set( v ) {\n\n            this.setQuaternion( v );\n\n        },\n\n    },\n\n} );\n\nObject.assign( Transform.prototype, {\n\n    updateMatrix() {\n\n        if ( this._needUpdateMatrix ) {\n\n            this.matrix.fromTRS( this._position.raw, this._quaternion.raw, this._scale.raw );\n            this._needUpdateMatrix = false;\n\n        }\n\n        return this;\n\n    },\n\n    updateNormalMatrix() {\n\n        Matrix4.normalMat3( this.normMat, this.worldMatrix.raw );\n        return this;\n\n    },\n\n    updateDirection() {\n\n        Matrix4.transformVec4( this.forward, this.worldMatrix.raw, [ 0, 0, 1, 0 ] );\n        Matrix4.transformVec4( this.up, this.worldMatrix.raw, [ 0, 1, 0, 0 ] );\n        Matrix4.transformVec4( this.right, this.worldMatrix.raw, [ 1, 0, 0, 0 ] );\n        return this;\n\n    },\n\n    copyToWorldMatrix() {\n\n        Matrix4.copy( this.worldMatrix.raw, this.matrix.raw );\n        return this;\n\n    },\n\n    getMatrix() {\n\n        return this.matrix.raw;\n\n    },\n\n    getWorldMatrix() {\n\n        return this.worldMatrix.raw;\n\n    },\n\n    getNormalMatrix() {\n\n        return this.normMat;\n\n    },\n\n    reset() {\n\n        this._position.set( 0, 0, 0 );\n        this._scale.set( 1, 1, 1 );\n        this._rotation.set( 0, 0, 0 );\n        this._quaternion.set( 0, 0, 0, 1 );\n\n    },\n\n    updateEuler: ( function () {\n\n        const mat4 = new Matrix4();\n\n        return function updateEular() {\n\n            mat4.reset().applyQuaternion( this._quaternion );\n            this._rotation.setFromRotationMatrix( mat4.raw );\n\n        };\n\n    }() ),\n\n    updateQuaternion() {\n\n        this._quaternion.setFromEuler( ...this.rotation );\n\n    },\n\n    setScale( ...args ) {\n\n        if ( args.length === 1 ) {\n\n            if ( args[ 0 ] instanceof Vector3 )\n                return this.setScale( ...args[ 0 ].getArray() );\n\n            if ( ( Array.isArray( args[ 0 ] ) || isArrayBuffer( args[ 0 ] ) ) && args[ 0 ].length === 3 )\n                return this.setScale( ...args[ 0 ] );\n\n        } else if ( args.length === 3 ) {\n\n            this._scale.set( ...args );\n            this._needUpdateMatrix = true;\n            this.needUpdateWorldMatrix = true;\n\n        }\n\n        return this;\n\n    },\n\n    setPosition( ...args ) {\n\n        if ( args.length === 1 ) {\n\n            if ( args[ 0 ] instanceof Vector3 )\n                return this.setPosition( ...args[ 0 ].getArray() );\n\n            if ( ( Array.isArray( args[ 0 ] ) || isArrayBuffer( args[ 0 ] ) ) && args[ 0 ].length === 3 )\n                return this.setPosition( ...args[ 0 ] );\n\n        } else if ( args.length === 3 ) {\n\n            this._position.set( ...args );\n            this._needUpdateMatrix = true;\n            this.needUpdateWorldMatrix = true;\n\n        }\n\n        return this;\n\n    },\n\n    setRotation( ...args ) {\n\n        if ( args.length === 1 ) {\n\n            if ( args[ 0 ] instanceof Vector3 )\n                return this.setRotation( ...args[ 0 ].getArray() );\n\n            if ( ( Array.isArray( args[ 0 ] ) || isArrayBuffer( args[ 0 ] ) ) && args[ 0 ].length === 3 )\n                return this.setRotation( ...args[ 0 ] );\n\n        } else if ( args.length === 3 ) {\n\n            this._rotation.set( ...args );\n            this.updateQuaternion();\n            this._needUpdateMatrix = true;\n            this.needUpdateWorldMatrix = true;\n\n        }\n\n        return this;\n\n    },\n\n    setQuaternion( ...args ) {\n\n        if ( args.length === 1 ) {\n\n            if ( args[ 0 ] instanceof Quaternion )\n                return this.setQuaternion( ...( args[ 0 ].getArray() ) );\n\n            if ( ( Array.isArray( args[ 0 ] ) || isArrayBuffer( args[ 0 ] ) ) && args[ 0 ].length === 4 )\n                return this.setQuaternion( ...args[ 0 ] );\n\n        } else if ( args.length === 4 ) {\n\n            this._quaternion.set( ...args );\n            this.updateEuler();\n            this._needUpdateMatrix = true;\n            this.needUpdateWorldMatrix = true;\n\n        }\n\n        return this;\n\n    },\n\n    getVec3Position() {\n\n        return this._position;\n\n    },\n\n    clone() {\n\n        const transform = new Transform();\n        transform.position = this.position;\n        transform.quaternion = this.quaternion;\n        transform.scale = this.scale;\n        return transform;\n\n    },\n\n} );\n\nexport { Transform };\n","function isWebGL2( gl ) {\n\n    return !! gl.texStorage2D;\n\n}\n\nconst glEnumToString = ( function () {\n\n    const haveEnumsForType = {};\n    const enums = {};\n\n    function addEnums( gl ) {\n\n        const type = gl.constructor.name;\n        if ( ! haveEnumsForType[ type ] ) {\n\n            /* eslint-disable */\n            for ( const key in gl )\n                if ( typeof gl[ key ] === 'number' ) {\n\n                    const existing = enums[ gl[ key ] ];\n                    enums[ gl[ key ] ] = existing ? `${existing} | ${key}` : key;\n\n                }\n            /* eslint-enable */\n            haveEnumsForType[ type ] = true;\n\n        }\n\n    }\n\n    return function ( gl, value ) {\n\n        addEnums( gl );\n        return enums[ value ] || ( `0x${value.toString( 16 )}` );\n\n    };\n\n}() );\n\nexport { isWebGL2, glEnumToString };\n","import { isWebGL2 } from './utils';\nimport * as Constant from './constant';\n\nfunction getHTMLElementSrc( id ) {\n\n    const ele = document.getElementById( id );\n\n    if ( ! ele || ele.textContent === '' )\n        throw new Error( `${id} shader element does not exist or have text.` );\n\n    const idx = ele.textContent.indexOf( '#version 300 es' );\n    return ele.textContent.slice( idx );\n\n}\n\nfunction addLineNum( str ) {\n\n    const lines = str.split( '\\n' );\n    const limitLength = ( lines.length + 1 ).toString().length + 6;\n    let prefix;\n    return lines.map( ( line, index ) => {\n\n        prefix = `0:${index + 1}`;\n        if ( prefix.length >= limitLength )\n            return prefix.substring( 0, limitLength ) + line;\n\n        for ( let i = 0; i < limitLength - prefix.length; i ++ )\n            prefix += ' ';\n\n        return prefix + line;\n\n    } ).join( '\\n' );\n\n}\n\nfunction createShader( gl, src, type ) {\n\n    const shader = gl.createShader( type );\n    gl.shaderSource( shader, src );\n    gl.compileShader( shader );\n\n    if ( ! gl.getShaderParameter( shader, gl.COMPILE_STATUS ) )\n        throw new Error( `Error compiling shader: \\n${addLineNum( src )} \\n\\n${gl.getShaderInfoLog( shader )}` );\n\n    return shader;\n\n}\n\nfunction createProgram( gl, vs, fs, opts = {} ) {\n\n    let vShader;\n    let fShader;\n\n    if ( typeof vs === 'string' && vs.length < 20 ) {\n\n        const src = getHTMLElementSrc( vs );\n        vShader = createShader( gl, src, gl.VERTEX_SHADER );\n\n    } else if ( typeof vs === 'string' )\n        vShader = createShader( gl, vs, gl.VERTEX_SHADER );\n\n    if ( typeof fs === 'string' && fs.length < 20 ) {\n\n        const src = getHTMLElementSrc( fs );\n        fShader = createShader( gl, src, gl.FRAGMENT_SHADER );\n\n    } else if ( typeof fs === 'string' )\n        fShader = createShader( gl, fs, gl.FRAGMENT_SHADER );\n\n    const prog = gl.createProgram();\n    gl.attachShader( prog, vShader );\n    gl.attachShader( prog, fShader );\n\n    gl.bindAttribLocation( prog, Constant.ATTRIB_POSITION_LOC, Constant.ATTRIB_POSITION_NAME );\n    gl.bindAttribLocation( prog, Constant.ATTRIB_NORMAL_LOC, Constant.ATTRIB_NORMAL_NAME );\n    gl.bindAttribLocation( prog, Constant.ATTRIB_UV_LOC, Constant.ATTRIB_UV_NAME );\n    gl.bindAttribLocation( prog, Constant.ATTRIB_BARYCENTRIC_LOC, Constant.ATTRIB_BARYCENTRIC_NAME );\n\n    if ( opts.transformFeedbackVaryings ) {\n\n        let varyings = opts.transformFeedbackVaryings;\n        if ( ! Array.isArray( varyings ) )\n            varyings = Object.keys( varyings );\n        gl.transformFeedbackVaryings( prog, varyings, opts.transformFeedbackMode || gl.SEPARATE_ATTRIBS );\n\n    }\n\n    gl.linkProgram( prog );\n\n    if ( ! gl.getProgramParameter( prog, gl.LINK_STATUS ) )\n        throw new Error( `Error createing shader program.\\n\\n${gl.getProgramInfoLog( prog )}` );\n\n    if ( opts.validateProgram === undefined || opts.validateProgram ) {\n\n        gl.validateProgram( prog );\n        if ( ! gl.getProgramParameter( prog, gl.VALIDATE_STATUS ) )\n            throw new Error( `Error validating shader program.\\n\\n${gl.getProgramInfoLog( prog )}` );\n\n    }\n\n    gl.detachShader( prog, vShader );\n    gl.detachShader( prog, fShader );\n    gl.deleteShader( vShader );\n    gl.deleteShader( fShader );\n\n    return prog;\n\n}\n\n\nconst FLOAT = 0x1406;\nconst FLOAT_VEC2 = 0x8B50;\nconst FLOAT_VEC3 = 0x8B51;\nconst FLOAT_VEC4 = 0x8B52;\nconst INT = 0x1404;\nconst INT_VEC2 = 0x8B53;\nconst INT_VEC3 = 0x8B54;\nconst INT_VEC4 = 0x8B55;\nconst BOOL = 0x8B56;\nconst BOOL_VEC2 = 0x8B57;\nconst BOOL_VEC3 = 0x8B58;\nconst BOOL_VEC4 = 0x8B59;\nconst FLOAT_MAT2 = 0x8B5A;\nconst FLOAT_MAT3 = 0x8B5B;\nconst FLOAT_MAT4 = 0x8B5C;\nconst SAMPLER_2D = 0x8B5E;\nconst SAMPLER_CUBE = 0x8B60;\nconst SAMPLER_3D = 0x8B5F;\nconst SAMPLER_2D_SHADOW = 0x8B62;\nconst FLOAT_MAT2x3 = 0x8B65; // eslint-disable-line\nconst FLOAT_MAT2x4 = 0x8B66; // eslint-disable-line\nconst FLOAT_MAT3x2 = 0x8B67; // eslint-disable-line\nconst FLOAT_MAT3x4 = 0x8B68; // eslint-disable-line\nconst FLOAT_MAT4x2 = 0x8B69; // eslint-disable-line\nconst FLOAT_MAT4x3 = 0x8B6A; // eslint-disable-line\nconst SAMPLER_2D_ARRAY = 0x8DC1;\nconst SAMPLER_2D_ARRAY_SHADOW = 0x8DC4;\nconst SAMPLER_CUBE_SHADOW = 0x8DC5;\nconst UNSIGNED_INT = 0x1405;\nconst UNSIGNED_INT_VEC2 = 0x8DC6;\nconst UNSIGNED_INT_VEC3 = 0x8DC7;\nconst UNSIGNED_INT_VEC4 = 0x8DC8;\nconst INT_SAMPLER_2D = 0x8DCA;\nconst INT_SAMPLER_3D = 0x8DCB;\nconst INT_SAMPLER_CUBE = 0x8DCC;\nconst INT_SAMPLER_2D_ARRAY = 0x8DCF;\nconst UNSIGNED_INT_SAMPLER_2D = 0x8DD2;\nconst UNSIGNED_INT_SAMPLER_3D = 0x8DD3;\nconst UNSIGNED_INT_SAMPLER_CUBE = 0x8DD4;\nconst UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8DD7;\n\nconst TEXTURE_2D = 0x0DE1;\nconst TEXTURE_CUBE_MAP = 0x8513;\nconst TEXTURE_3D = 0x806F;\nconst TEXTURE_2D_ARRAY = 0x8C1A;\n\n\nconst typeMap = {};\n\nfunction getBindPointForSamplerType( gl, type ) {\n\n    return typeMap[ type ].bindPoint;\n\n}\n\nfunction floatSetter( gl, location ) {\n\n    return function ( v ) {\n\n        gl.uniform1f( location, v );\n\n    };\n\n}\n\nfunction floatArraySetter( gl, location ) {\n\n    return function ( v ) {\n\n        gl.uniform1fv( location, v );\n\n    };\n\n}\n\nfunction floatVec2Setter( gl, location ) {\n\n    return function ( v ) {\n\n        gl.uniform2fv( location, v );\n\n    };\n\n}\n\nfunction floatVec3Setter( gl, location ) {\n\n    return function ( v ) {\n\n        gl.uniform3fv( location, v );\n\n    };\n\n}\n\nfunction floatVec4Setter( gl, location ) {\n\n    return function ( v ) {\n\n        gl.uniform4fv( location, v );\n\n    };\n\n}\n\nfunction intSetter( gl, location ) {\n\n    return function ( v ) {\n\n        gl.uniform1i( location, v );\n\n    };\n\n}\n\nfunction intArraySetter( gl, location ) {\n\n    return function ( v ) {\n\n        gl.uniform1iv( location, v );\n\n    };\n\n}\n\nfunction intVec2Setter( gl, location ) {\n\n    return function ( v ) {\n\n        gl.uniform2iv( location, v );\n\n    };\n\n}\n\nfunction intVec3Setter( gl, location ) {\n\n    return function ( v ) {\n\n        gl.uniform3iv( location, v );\n\n    };\n\n}\n\nfunction intVec4Setter( gl, location ) {\n\n    return function ( v ) {\n\n        gl.uniform4iv( location, v );\n\n    };\n\n}\n\nfunction uintSetter( gl, location ) {\n\n    return function ( v ) {\n\n        gl.uniform1ui( location, v );\n\n    };\n\n}\n\nfunction uintArraySetter( gl, location ) {\n\n    return function ( v ) {\n\n        gl.uniform1uiv( location, v );\n\n    };\n\n}\n\nfunction uintVec2Setter( gl, location ) {\n\n    return function ( v ) {\n\n        gl.uniform2uiv( location, v );\n\n    };\n\n}\n\nfunction uintVec3Setter( gl, location ) {\n\n    return function ( v ) {\n\n        gl.uniform3uiv( location, v );\n\n    };\n\n}\n\nfunction uintVec4Setter( gl, location ) {\n\n    return function ( v ) {\n\n        gl.uniform4uiv( location, v );\n\n    };\n\n}\n\nfunction floatMat2Setter( gl, location ) {\n\n    return function ( v ) {\n\n        gl.uniformMatrix2fv( location, false, v );\n\n    };\n\n}\n\nfunction floatMat3Setter( gl, location ) {\n\n    return function ( v ) {\n\n        gl.uniformMatrix3fv( location, false, v );\n\n    };\n\n}\n\nfunction floatMat4Setter( gl, location ) {\n\n    return function ( v ) {\n\n        gl.uniformMatrix4fv( location, false, v );\n\n    };\n\n}\n\nfunction floatMat23Setter( gl, location ) {\n\n    return function ( v ) {\n\n        gl.uniformMatrix2x3fv( location, false, v );\n\n    };\n\n}\n\nfunction floatMat32Setter( gl, location ) {\n\n    return function ( v ) {\n\n        gl.uniformMatrix3x2fv( location, false, v );\n\n    };\n\n}\n\nfunction floatMat24Setter( gl, location ) {\n\n    return function ( v ) {\n\n        gl.uniformMatrix2x4fv( location, false, v );\n\n    };\n\n}\n\nfunction floatMat42Setter( gl, location ) {\n\n    return function ( v ) {\n\n        gl.uniformMatrix4x2fv( location, false, v );\n\n    };\n\n}\n\nfunction floatMat34Setter( gl, location ) {\n\n    return function ( v ) {\n\n        gl.uniformMatrix3x4fv( location, false, v );\n\n    };\n\n}\n\nfunction floatMat43Setter( gl, location ) {\n\n    return function ( v ) {\n\n        gl.uniformMatrix4x3fv( location, false, v );\n\n    };\n\n}\n\nfunction samplerSetter( gl, type, unit, location ) {\n\n    const bindPoint = getBindPointForSamplerType( gl, type );\n    return isWebGL2( gl ) ? function ( textureOrPair ) {\n\n        let texture;\n        let sampler;\n        if ( textureOrPair instanceof WebGLTexture ) {\n\n            texture = textureOrPair;\n            sampler = null;\n\n        } else {\n\n            texture = textureOrPair.texture;\n            sampler = textureOrPair.sampler;\n\n        }\n        gl.uniform1i( location, unit );\n        gl.activeTexture( gl.TEXTURE0 + unit );\n        gl.bindTexture( bindPoint, texture );\n        gl.bindSampler( unit, sampler );\n\n    } : function ( texture ) {\n\n        gl.uniform1i( location, unit );\n        gl.activeTexture( gl.TEXTURE0 + unit );\n        gl.bindTexture( bindPoint, texture );\n\n    };\n\n}\n\nfunction samplerArraySetter( gl, type, unit, location, size ) {\n\n    const bindPoint = getBindPointForSamplerType( gl, type );\n    const units = new Int32Array( size );\n    for ( let ii = 0; ii < size; ++ ii )\n        units[ ii ] = unit + ii;\n\n\n    return isWebGL2( gl ) ? function ( textures ) {\n\n        gl.uniform1iv( location, units );\n        textures.forEach( ( textureOrPair, index ) => {\n\n            gl.activeTexture( gl.TEXTURE0 + units[ index ] );\n            let texture;\n            let sampler;\n            if ( textureOrPair instanceof WebGLTexture ) {\n\n                texture = textureOrPair;\n                sampler = null;\n\n            } else {\n\n                texture = textureOrPair.texture;\n                sampler = textureOrPair.sampler;\n\n            }\n            gl.bindSampler( unit, sampler );\n            gl.bindTexture( bindPoint, texture );\n\n        } );\n\n    } : function ( textures ) {\n\n        gl.uniform1iv( location, units );\n        textures.forEach( ( texture, index ) => {\n\n            gl.activeTexture( gl.TEXTURE0 + units[ index ] );\n            gl.bindTexture( bindPoint, texture );\n\n        } );\n\n    };\n\n}\n\ntypeMap[ FLOAT ] = {\n    Type: Float32Array, size: 4, setter: floatSetter, arraySetter: floatArraySetter,\n};\ntypeMap[ FLOAT_VEC2 ] = { Type: Float32Array, size: 8, setter: floatVec2Setter };\ntypeMap[ FLOAT_VEC3 ] = { Type: Float32Array, size: 12, setter: floatVec3Setter };\ntypeMap[ FLOAT_VEC4 ] = { Type: Float32Array, size: 16, setter: floatVec4Setter };\ntypeMap[ INT ] = {\n    Type: Int32Array, size: 4, setter: intSetter, arraySetter: intArraySetter,\n};\ntypeMap[ INT_VEC2 ] = { Type: Int32Array, size: 8, setter: intVec2Setter };\ntypeMap[ INT_VEC3 ] = { Type: Int32Array, size: 12, setter: intVec3Setter };\ntypeMap[ INT_VEC4 ] = { Type: Int32Array, size: 16, setter: intVec4Setter };\ntypeMap[ UNSIGNED_INT ] = {\n    Type: Uint32Array, size: 4, setter: uintSetter, arraySetter: uintArraySetter,\n};\ntypeMap[ UNSIGNED_INT_VEC2 ] = { Type: Uint32Array, size: 8, setter: uintVec2Setter };\ntypeMap[ UNSIGNED_INT_VEC3 ] = { Type: Uint32Array, size: 12, setter: uintVec3Setter };\ntypeMap[ UNSIGNED_INT_VEC4 ] = { Type: Uint32Array, size: 16, setter: uintVec4Setter };\ntypeMap[ BOOL ] = {\n    Type: Uint32Array, size: 4, setter: intSetter, arraySetter: intArraySetter,\n};\ntypeMap[ BOOL_VEC2 ] = { Type: Uint32Array, size: 8, setter: intVec2Setter };\ntypeMap[ BOOL_VEC3 ] = { Type: Uint32Array, size: 12, setter: intVec3Setter };\ntypeMap[ BOOL_VEC4 ] = { Type: Uint32Array, size: 16, setter: intVec4Setter };\ntypeMap[ FLOAT_MAT2 ] = { Type: Float32Array, size: 16, setter: floatMat2Setter };\ntypeMap[ FLOAT_MAT3 ] = { Type: Float32Array, size: 36, setter: floatMat3Setter };\ntypeMap[ FLOAT_MAT4 ] = { Type: Float32Array, size: 64, setter: floatMat4Setter };\ntypeMap[ FLOAT_MAT2x3 ] = { Type: Float32Array, size: 24, setter: floatMat23Setter };\ntypeMap[ FLOAT_MAT2x4 ] = { Type: Float32Array, size: 32, setter: floatMat24Setter };\ntypeMap[ FLOAT_MAT3x2 ] = { Type: Float32Array, size: 24, setter: floatMat32Setter };\ntypeMap[ FLOAT_MAT3x4 ] = { Type: Float32Array, size: 48, setter: floatMat34Setter };\ntypeMap[ FLOAT_MAT4x2 ] = { Type: Float32Array, size: 32, setter: floatMat42Setter };\ntypeMap[ FLOAT_MAT4x3 ] = { Type: Float32Array, size: 48, setter: floatMat43Setter };\ntypeMap[ SAMPLER_2D ] = {\n    Type: null, size: 0, setter: samplerSetter, arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D,\n};\ntypeMap[ SAMPLER_CUBE ] = {\n    Type: null, size: 0, setter: samplerSetter, arraySetter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP,\n};\ntypeMap[ SAMPLER_3D ] = {\n    Type: null, size: 0, setter: samplerSetter, arraySetter: samplerArraySetter, bindPoint: TEXTURE_3D,\n};\ntypeMap[ SAMPLER_2D_SHADOW ] = {\n    Type: null, size: 0, setter: samplerSetter, arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D,\n};\ntypeMap[ SAMPLER_2D_ARRAY ] = {\n    Type: null, size: 0, setter: samplerSetter, arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY,\n};\ntypeMap[ SAMPLER_2D_ARRAY_SHADOW ] = {\n    Type: null, size: 0, setter: samplerSetter, arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY,\n};\ntypeMap[ SAMPLER_CUBE_SHADOW ] = {\n    Type: null, size: 0, setter: samplerSetter, arraySetter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP,\n};\ntypeMap[ INT_SAMPLER_2D ] = {\n    Type: null, size: 0, setter: samplerSetter, arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D,\n};\ntypeMap[ INT_SAMPLER_3D ] = {\n    Type: null, size: 0, setter: samplerSetter, arraySetter: samplerArraySetter, bindPoint: TEXTURE_3D,\n};\ntypeMap[ INT_SAMPLER_CUBE ] = {\n    Type: null, size: 0, setter: samplerSetter, arraySetter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP,\n};\ntypeMap[ INT_SAMPLER_2D_ARRAY ] = {\n    Type: null, size: 0, setter: samplerSetter, arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY,\n};\ntypeMap[ UNSIGNED_INT_SAMPLER_2D ] = {\n    Type: null, size: 0, setter: samplerSetter, arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D,\n};\ntypeMap[ UNSIGNED_INT_SAMPLER_3D ] = {\n    Type: null, size: 0, setter: samplerSetter, arraySetter: samplerArraySetter, bindPoint: TEXTURE_3D,\n};\ntypeMap[ UNSIGNED_INT_SAMPLER_CUBE ] = {\n    Type: null, size: 0, setter: samplerSetter, arraySetter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP,\n};\ntypeMap[ UNSIGNED_INT_SAMPLER_2D_ARRAY ] = {\n    Type: null, size: 0, setter: samplerSetter, arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY,\n};\n\nfunction floatAttribSetter( gl, index ) {\n\n    return function ( b ) {\n\n        gl.bindBuffer( gl.ARRAY_BUFFER, b.buffer );\n        gl.enableVertexAttribArray( index );\n        gl.vertexAttribPointer( index, b.numComponents || b.size, b.type || gl.FLOAT, b.normalize || false, b.stride || 0, b.offset || 0 );\n\n        if ( b.divisor !== undefined )\n            gl.vertexAttribDivisor( index, b.divisor );\n\n    };\n\n}\n\nfunction intAttribSetter( gl, index ) {\n\n    return function ( b ) {\n\n        gl.bindBuffer( gl.ARRAY_BUFFER, b.buffer );\n        gl.enableVertexAttribArray( index );\n        gl.vertexAttribIPointer( index, b.numComponents || b.size, b.type || gl.INT, b.stride || 0, b.offset || 0 );\n\n        if ( b.divisor !== undefined )\n            gl.vertexAttribDivisor( index, b.divisor );\n\n    };\n\n}\n\nfunction matAttribSetter( gl, index, typeInfo ) {\n\n    const defaultSize = typeInfo.size;\n    const count = typeInfo.count;\n\n    return function ( b ) {\n\n        gl.bindBuffer( gl.ARRAY_BUFFER, b.buffer );\n        const numComponents = b.size || b.numComponents || defaultSize;\n        const size = numComponents / count;\n        const type = b.type || gl.FLOAT;\n        const typeInfoNew = typeMap[ type ];\n        const stride = typeInfoNew.size * numComponents;\n        const normalize = b.normalize || false;\n        const offset = b.offset || 0;\n        const rowOffset = stride / count;\n        for ( let i = 0; i < count; ++ i ) {\n\n            gl.enableVertexAttribArray( index + i );\n            gl.vertexAttribPointer( index + i, size, type, normalize, stride, offset + ( rowOffset * i ) );\n\n            if ( b.divisor !== undefined )\n                gl.vertexAttribDivisor( index + i, b.divisor );\n\n        }\n\n    };\n\n}\n\nconst attrTypeMap = {};\nattrTypeMap[ FLOAT ] = { size: 4, setter: floatAttribSetter };\nattrTypeMap[ FLOAT_VEC2 ] = { size: 8, setter: floatAttribSetter };\nattrTypeMap[ FLOAT_VEC3 ] = { size: 12, setter: floatAttribSetter };\nattrTypeMap[ FLOAT_VEC4 ] = { size: 16, setter: floatAttribSetter };\nattrTypeMap[ INT ] = { size: 4, setter: intAttribSetter };\nattrTypeMap[ INT_VEC2 ] = { size: 8, setter: intAttribSetter };\nattrTypeMap[ INT_VEC3 ] = { size: 12, setter: intAttribSetter };\nattrTypeMap[ INT_VEC4 ] = { size: 16, setter: intAttribSetter };\nattrTypeMap[ UNSIGNED_INT ] = { size: 4, setter: intAttribSetter };\nattrTypeMap[ UNSIGNED_INT_VEC2 ] = { size: 8, setter: intAttribSetter };\nattrTypeMap[ UNSIGNED_INT_VEC3 ] = { size: 12, setter: intAttribSetter };\nattrTypeMap[ UNSIGNED_INT_VEC4 ] = { size: 16, setter: intAttribSetter };\nattrTypeMap[ BOOL ] = { size: 4, setter: intAttribSetter };\nattrTypeMap[ BOOL_VEC2 ] = { size: 8, setter: intAttribSetter };\nattrTypeMap[ BOOL_VEC3 ] = { size: 12, setter: intAttribSetter };\nattrTypeMap[ BOOL_VEC4 ] = { size: 16, setter: intAttribSetter };\nattrTypeMap[ FLOAT_MAT2 ] = { size: 4, setter: matAttribSetter, count: 2 };\nattrTypeMap[ FLOAT_MAT3 ] = { size: 9, setter: matAttribSetter, count: 3 };\nattrTypeMap[ FLOAT_MAT4 ] = { size: 16, setter: matAttribSetter, count: 4 };\n\nfunction isBuiltIn( info ) {\n\n    const name = info.name;\n    return name.startsWith( 'gl_' ) || name.startsWith( 'webgl_' );\n\n}\n\nfunction createAttributesSetters( gl, program ) {\n\n    const attribSetters = {};\n\n    const numAttribs = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n    for ( let i = 0; i < numAttribs; i ++ ) {\n\n        const attribInfo = gl.getActiveAttrib( program, i );\n        if ( isBuiltIn( attribInfo ) )\n            continue; // eslint-disable-line\n        const index = gl.getAttribLocation( program, attribInfo.name );\n        const typeInfo = attrTypeMap[ attribInfo.type ];\n        const setter = typeInfo.setter( gl, index, typeInfo );\n        setter.location = index;\n        attribSetters[ attribInfo.name ] = setter;\n\n    }\n\n    return attribSetters;\n\n}\n\nfunction setAttributes( setters, buffers ) {\n\n    Object.keys( buffers ).forEach( ( attrib ) => {\n\n        const setter = setters[ attrib ];\n        if ( setter )\n            setter( buffers[ attrib ] );\n\n    } );\n\n}\n\nfunction createUniformSetters( gl, program ) {\n\n    let textureUnit = 0;\n\n    function createUnifromSetter( uniformInfo ) {\n\n        const location = gl.getUniformLocation( program, uniformInfo.name );\n        const isArray = ( uniformInfo.size > 1 && uniformInfo.name.substr( - 3 ) === '[0]' );\n        const type = uniformInfo.type;\n        const typeInfo = typeMap[ type ];\n        if ( ! typeInfo )\n            throw new Error( `unknown type: 0x${type.toString( 16 )}` );\n        let setter;\n        if ( typeInfo.bindPoint ) {\n\n            const uint = textureUnit;\n            textureUnit += uniformInfo.size;\n            if ( isArray )\n                setter = typeInfo.arraySetter( gl, type, uint, location, uniformInfo.size );\n            else\n                setter = typeInfo.setter( gl, type, uint, location, uniformInfo.size );\n\n        } else if ( typeInfo.arraySetter && isArray )\n            setter = typeInfo.arraySetter( gl, location );\n        else\n            setter = typeInfo.setter( gl, location );\n\n        setter.location = location;\n        return setter;\n\n    }\n\n    const uniformSetters = {};\n    const numUnifroms = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n    for ( let i = 0; i < numUnifroms; i ++ ) {\n\n        const uniformInfo = gl.getActiveUniform( program, i );\n        if ( isBuiltIn( uniformInfo ) )\n            continue; // eslint-disable-line\n        let name = uniformInfo.name;\n        if ( name.substr( - 3 ) === '[0]' )\n            name = name.substr( 0, name.length - 3 );\n\n        const setter = createUnifromSetter( uniformInfo );\n        uniformSetters[ name ] = setter;\n\n    }\n\n    const keyMap = {};\n    uniformSetters.keyMap = keyMap;\n    Object.keys( uniformSetters ).forEach( ( key ) => {\n\n        if ( key.indexOf( Constant.UNIFORM_PREFIX ) === 0 )\n            keyMap[ key.replace( Constant.UNIFORM_PREFIX, '' ) ] = key;\n\n    } );\n\n    return uniformSetters;\n\n}\n\nfunction setUniforms( setters, ...unifroms ) {\n\n    const numArgs = unifroms.length;\n    for ( let i = 0; i < numArgs; i ++ ) {\n\n        const vals = unifroms[ i ];\n        if ( Array.isArray( vals ) ) {\n\n            const numVals = vals.length;\n            for ( let j = 0; j < numVals; j ++ )\n                setUniforms( setters, vals[ j ] );\n\n        } else\n            Object.keys( vals ).forEach( ( name ) => {\n\n                let setter = setters[ name ];\n                if ( setter === undefined && Object.prototype.hasOwnProperty.call( setters.keyMap, name ) )\n                    setter = setters[ setters.keyMap[ name ] ];\n\n                if ( setter )\n                    setter( vals[ name ] );\n\n            } );\n\n    }\n\n}\n\nfunction createUniformBlockSpec( gl, program ) {\n\n    const numUnifroms = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n    const uniformData = [];\n    const uniformIndices = [];\n\n    for ( let i = 0; i < numUnifroms; i ++ ) {\n\n        uniformIndices.push( i );\n        uniformData.push( {} );\n        const uniformInfo = gl.getActiveUniform( program, i );\n        if ( isBuiltIn( uniformInfo ) )\n            break;\n        uniformData[ i ].name = uniformInfo.name;\n\n    }\n\n    [\n        [ 'UNIFORM_TYPE', 'type' ],\n        [ 'UNIFORM_SIZE', 'size' ],\n        [ 'UNIFORM_BLOCK_INDEX', 'blockIndex' ],\n        [ 'UNIFORM_OFFSET', 'offset' ],\n    ].forEach( ( pair ) => {\n\n        const gname = pair[ 0 ];\n        const key = pair[ 1 ];\n        gl.getActiveUniforms( program, uniformIndices, gl[ gname ] ).forEach( ( value, idx ) => {\n\n            uniformData[ idx ][ key ] = value;\n\n        } );\n\n    } );\n\n    const blockSpecs = {};\n\n    const numUniformBlock = gl.getProgramParameter( program, gl.ACTIVE_UNIFORM_BLOCKS );\n    for ( let i = 0; i < numUniformBlock; i ++ ) {\n\n        const name = gl.getActiveUniformBlockName( program, i );\n        const blockSpec = {\n            index: i,\n            usedByVertexShader: gl.getActiveUniformBlockParameter( program, i, gl.UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER ),\n            usedByFragmentShader: gl.getActiveUniformBlockParameter( program, i, gl.UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER ),\n            size: gl.getActiveUniformBlockParameter( program, i, gl.UNIFORM_BLOCK_DATA_SIZE ),\n            uniformIndices: gl.getActiveUniformBlockParameter( program, i, gl.UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES ),\n        };\n\n        blockSpec.used = blockSpec.usedByVertexShader || blockSpec.usedByFragmentShader;\n        blockSpecs[ name ] = blockSpec;\n\n    }\n\n    return {\n        blockSpecs,\n        uniformData,\n    };\n\n}\n\nconst arraySuffixRE = /\\[\\d+\\]\\.$/;\n\nfunction createUniformBlockInfo( gl, program, uniformBlockSpec, blockName ) {\n\n    const blockSpecs = uniformBlockSpec.blockSpecs;\n    const uniformData = uniformBlockSpec.uniformData;\n    const blockSpec = blockSpecs[ blockName ];\n    if ( ! blockSpec ) {\n\n        console.warn( `no uniform block object named: ${blockName}` );\n        return {\n            name: blockName,\n            uniforms: {},\n        };\n\n    }\n\n    const array = new ArrayBuffer( blockSpec.size );\n    const buffer = gl.createBuffer();\n    const uniformBufferIndex = blockSpec.index;\n    gl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n    gl.uniformBlockBinding( program, blockSpec.index, uniformBufferIndex );\n\n    let prefix = `${blockName}.`;\n    if ( arraySuffixRE.test( prefix ) )\n        prefix = prefix.replace( arraySuffixRE, '.' );\n\n    const uniforms = {};\n    blockSpec.uniformIndices.forEach( ( uniformidx ) => {\n\n        const data = uniformData[ uniformidx ];\n        const typeInfo = typeMap[ data.type ];\n        const Type = typeInfo.Type;\n        const length = data.size * typeInfo.size;\n        let name = data.name;\n        if ( name.substr( 0, prefix.length ) === prefix )\n            name = name.substr( prefix.length );\n        uniforms[ name ] = new Type( array, data.offset, length / Type.BYTES_PER_ELEMENT );\n\n    } );\n\n    return {\n        name: blockName,\n        array,\n        typedArray: new Float32Array( array ),\n        buffer,\n        uniforms,\n    };\n\n}\n\nfunction createUniformBlockInfos( gl, program, uniformBlockSpec ) {\n\n    const uboInfos = {};\n    Object.keys( uniformBlockSpec.blockSpecs ).forEach( ( blockName ) => {\n\n        uboInfos[ blockName ] = createUniformBlockInfo( gl, program, uniformBlockSpec, blockName );\n\n    } );\n\n    return uboInfos;\n\n}\n\nfunction bindUniformBlock( gl, uniformBlockSpec, uniformBlcokInfo ) {\n\n    const blockSpec = uniformBlockSpec.blockSpecs[ uniformBlcokInfo.name ];\n    if ( blockSpec ) {\n\n        const bufferBindIndex = blockSpec.index;\n        gl.bindBufferRange( gl.UNIFORM_BUFFER, bufferBindIndex, uniformBlcokInfo.buffer, uniformBlcokInfo.offset || 0, uniformBlcokInfo.array.byteLength );\n\n        return true;\n\n    }\n    return false;\n\n}\n\nfunction setUniformBlock( gl, uniformBlockSpec, uniformBlockInfo ) {\n\n    if ( bindUniformBlock( gl, uniformBlockSpec, uniformBlockInfo ) )\n        gl.bufferData( gl.UNIFORM_BUFFER, uniformBlockInfo.array, gl.DYNAMIC_DRAW );\n\n}\n\nfunction setBlockUniforms( uniformBlockInfo, values ) {\n\n    const uniforms = uniformBlockInfo.uniforms;\n    let changed = false;\n    Object.keys( values ).forEach( ( name ) => {\n\n        const array = uniforms[ name ];\n\n        if ( array ) {\n\n            const value = values[ name ];\n            if ( value.length )\n                array.set( value );\n            else\n                array[ 0 ] = value;\n\n            changed = true;\n\n        }\n\n    } );\n\n    return changed;\n\n}\n\nfunction setBlockUniformsForProgram( gl, uniformBlockSpec, uniformBlockInfos, values ) {\n\n    Object.keys( uniformBlockInfos ).forEach( ( blockName ) => {\n\n        if ( setBlockUniforms( uniformBlockInfos[ blockName ], values ) )\n            setUniformBlock( gl, uniformBlockSpec, uniformBlockInfos[ blockName ] );\n        else\n            bindUniformBlock( gl, uniformBlockSpec, uniformBlockInfos[ blockName ] );\n\n    } );\n\n}\n\nfunction createTransformFeedbackInfo( gl, program ) {\n\n    const info = {};\n    const numVaryings = gl.getProgramParameter( program, gl.TRANSFORM_FEEDBACK_VARYINGS );\n    for ( let i = 0; i < numVaryings; i ++ ) {\n\n        const varying = gl.getTransformFeedbackVarying( program, i );\n        info[ varying.name ] = {\n            index: i,\n            type: varying.type,\n            size: varying.size,\n        };\n\n    }\n\n    return info;\n\n}\n\nfunction bindTransformFeedbackInfo( gl, transformfeedbaclnfo, bufferInfo ) {\n\n    if ( bufferInfo.attribs )\n        bufferInfo = bufferInfo.attribs; // eslint-disable-line\n\n    Object.keys( bufferInfo ).forEach( ( name ) => {\n\n        const varying = transformfeedbaclnfo[ name ];\n        if ( varying ) {\n\n            const buf = bufferInfo[ name ];\n            if ( buf.offset )\n                gl.bindBufferRange( gl.TRANSFORM_FEEDBACK_BUFFER, varying.index, buf.buffer, buf.offset, buf.size );\n            else\n                gl.bindBufferBase( gl.TRANSFORM_FEEDBACK_BUFFER, varying.index, buf.buffer );\n\n        }\n\n    } );\n\n}\n\nfunction unbindTransformFeedbackInfo( gl, transformfeedbaclnfo, bufferInfo ) {\n\n    if ( bufferInfo.attribs )\n        bufferInfo = bufferInfo.attribs; // eslint-disable-line\n\n    Object.keys( bufferInfo ).forEach( ( name ) => {\n\n        const varying = transformfeedbaclnfo[ name ];\n        if ( varying )\n            gl.bindBufferBase( gl.TRANSFORM_FEEDBACK_BUFFER, varying.index, null );\n\n    } );\n\n}\n\nfunction createTransformFeedback( gl, program, transformfeedbaclnfo, bufferInfo ) {\n\n    const tf = gl.createTransformFeedback();\n    gl.bindTransformFeedback( gl.TRANSFORM_FEEDBACK, tf );\n    gl.useProgram( program );\n    bindTransformFeedbackInfo( gl, transformfeedbaclnfo, bufferInfo );\n    gl.bindTransformFeedback( gl.TRANSFORM_FEEDBACK, null );\n    unbindTransformFeedbackInfo( gl, transformfeedbaclnfo, bufferInfo );\n\n    return tf;\n\n}\n\nexport {\n    createProgram,\n    createAttributesSetters,\n    setAttributes,\n    createUniformSetters,\n    setUniforms,\n\n    createUniformBlockSpec,\n    createUniformBlockInfo,\n    createUniformBlockInfos,\n    setUniformBlock,\n    setBlockUniforms,\n    setBlockUniformsForProgram,\n\n    createTransformFeedbackInfo,\n    createTransformFeedback,\n};\n","import { isArrayBuffer, getGLTypeFromTypedArray, getGLTypeFromTypedArrayType } from './typedArray';\n\nfunction isIndices( name ) {\n\n    return name === 'index' || name === 'indices';\n\n}\n\nfunction getArray( array ) {\n\n    return array.length ? array : array.data;\n\n}\n\nfunction getTypedArray( array, name ) {\n\n    if ( isArrayBuffer( array ) ) return array;\n\n    if ( isIndices( name ) ) return new Uint16Array( array );\n\n    return new Float32Array( array );\n\n}\n\nconst colorRE = /color|colour/i;\nconst textureRE = /uv|coord/i;\n\nfunction guessNumComponentsFromName( name, length ) {\n\n    let numComponents;\n    if ( colorRE.test( name ) ) numComponents = 4;\n    else if ( textureRE.test( name ) ) numComponents = 2;\n    else numComponents = 3;\n\n    if ( length % numComponents > 0 )\n        throw new Error( `Can not guess numComponents for attribute ${name}.` );\n\n    return numComponents;\n\n}\n\nfunction getNumComponents( array, name ) {\n\n    return array.numComponents || array.size || guessNumComponentsFromName( name, getArray( array ).length );\n\n}\n\nfunction createBufferFromTypedArray( gl, typedArray, type = gl.ARRAY_BUFFER, drawType = gl.STATIC_DRAW ) {\n\n    if ( typedArray instanceof WebGLBuffer )\n        return typedArray;\n\n    const buffer = gl.createBuffer();\n    gl.bindBuffer( type, buffer );\n    gl.bufferData( type, typedArray, drawType );\n    return buffer;\n\n}\n\nconst positionNames = [ 'position', 'positions', 'a_position' ];\n\nfunction getNumElementsFromNonIndicedArrays( arrays ) {\n\n    let key;\n    let i;\n    for ( i = 0; i < positionNames.length; i ++ )\n        if ( positionNames[ i ] in arrays ) {\n\n            key = positionNames[ i ];\n            break;\n\n        }\n\n    if ( i === positionNames.length ) [ key ] = Object.keys( arrays );\n    const array = arrays[ key ];\n    const dataArray = getArray( array );\n    return dataArray.length / getNumComponents( array, key );\n\n}\n\nfunction getBytesPerValueForGLType( gl, type ) {\n\n    if (type === gl.BYTE)           return 1;  // eslint-disable-line\n    if (type === gl.UNSIGNED_BYTE)  return 1;  // eslint-disable-line\n    if (type === gl.SHORT)          return 2;  // eslint-disable-line\n    if (type === gl.UNSIGNED_SHORT) return 2;  // eslint-disable-line\n    if (type === gl.INT)            return 4;  // eslint-disable-line\n    if (type === gl.UNSIGNED_INT)   return 4;  // eslint-disable-line\n    if (type === gl.FLOAT)          return 4;  // eslint-disable-line\n    return 0;\n\n}\n\nfunction getNumElementsFromAttribs( gl, attribs ) {\n\n    let key;\n    let i;\n    for ( i = 0; i < positionNames.length; i ++ )\n        if ( positionNames[ i ] in attribs ) {\n\n            key = positionNames[ i ];\n            break;\n\n        }\n\n    if ( i === positionNames.length ) [ key ] = Object.keys( attribs );\n    const attrib = attribs[ key ];\n    gl.bindBuffer( gl.ARRAY_BUFFER, attrib.buffer );\n    const numBytes = gl.getBufferParameter( gl.ARRAY_BUFFER, gl.BUFFER_SIZE );\n    gl.bindBuffer( gl.ARRAY_BUFFER, null );\n\n    let numElements;\n    if ( attrib.stride !== 0 )\n        numElements = Math.floor( ( numBytes - attrib.offset ) / attrib.stride ); // need consider padding end\n    else {\n\n        const bytesPerValue = getBytesPerValueForGLType( gl, attrib.type );\n        const totalElements = ( numBytes - attrib.offset ) / bytesPerValue;\n        const numComponents = attrib.numComponents || attrib.size;\n        numElements = totalElements / numComponents;\n        if ( numElements % 1 !== 0 )\n            throw new Error( `numComponent ${numComponents} not correct for length ${totalElements}` );\n\n    }\n\n    return numElements;\n\n}\n\nfunction createBufferFromArray( gl, array, name ) {\n\n    const type = name === 'indices' ? gl.ELEMENT_ARRAY_BUFFER : gl.ARRAY_BUFFER;\n    const typedArray = getTypedArray( getArray( array ), name );\n    return createBufferFromTypedArray( gl, typedArray, type, array.drawType );\n\n}\n\nfunction createBuffersFromArrays( gl, arrays ) {\n\n    const buffers = {};\n\n    Object.keys( arrays ).forEach( ( key ) => {\n\n        buffers[ key ] = createBufferFromArray( gl, arrays[ key ], key );\n\n    } );\n\n    if ( arrays.indices )\n        buffers.numElements = arrays.indices.length;\n    else\n        buffers.numElements = getNumElementsFromNonIndicedArrays( arrays );\n\n    return buffers;\n\n}\n\nfunction createAttribsFromArrays( gl, arrays ) {\n\n    const attribs = {};\n\n    Object.keys( arrays ).forEach( ( key ) => {\n\n        if ( ! isIndices( key ) ) {\n\n            const array = arrays[ key ];\n            const attribName = array.name || array.attrib || array.attribName || key;\n            const normalization = array.normalize !== undefined ? array.normalize : false;\n            let buffer;\n            let type;\n            let numComponents;\n            if ( typeof array === 'number' || typeof array.data === 'number' ) {\n\n                const numEle = array.data || array;\n                const arrayType = array.type || Float32Array;\n                const numBytes = numEle * arrayType.BYTES_PER_ELEMENT;\n                type = getGLTypeFromTypedArrayType( arrayType );\n                numComponents = array.numComponents || array.size || guessNumComponentsFromName( key, numEle );\n                buffer = gl.createBuffer();\n                gl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n                gl.bufferData( gl.ARRAY_BUFFER, numBytes, array.drawType || gl.STATIC_DRAW );\n\n            } else {\n\n                const typedArray = getTypedArray( getArray( array ), key );\n                buffer = array.buffer || createBufferFromTypedArray( gl, typedArray, gl.ARRAY_BUFFER, array.drawType );\n                type = getGLTypeFromTypedArray( typedArray );\n                numComponents = getNumComponents( array, key );\n                array.numComponents = numComponents;\n\n            }\n\n            attribs[ attribName ] = {\n                buffer,\n                numComponents,\n                type,\n                normalize: normalization,\n                stride: array.stride || 0,\n                offset: array.offset || 0,\n                divisor: typeof array.divisor === 'undefined' ? undefined : array.divisor,\n                drawType: array.drawType || gl.STATIC_DRAW,\n            };\n\n        }\n\n    } );\n\n    return attribs;\n\n}\n\nfunction createBufferInfoFromArrays( gl, arrays ) {\n\n    const bufferInfo = {\n        attribs: createAttribsFromArrays( gl, arrays ),\n    };\n\n    const { indices } = arrays;\n    if ( indices ) {\n\n        const newIndices = getTypedArray( getArray( indices ), 'indices' );\n        bufferInfo.indices = createBufferFromTypedArray( gl, newIndices, gl.ELEMENT_ARRAY_BUFFER );\n        bufferInfo.numElements = newIndices.length;\n        bufferInfo.elementType = getGLTypeFromTypedArray( newIndices );\n\n    } else\n        bufferInfo.numElements = getNumElementsFromAttribs( gl, bufferInfo.attribs );\n\n    return bufferInfo;\n\n}\n\nfunction setTypedArrayToBuffer( gl, buffer, typedArray, drawType = gl.DYNAMIC_DRAW ) {\n\n    gl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n    gl.bufferData( gl.ARRAY_BUFFER, typedArray, drawType );\n\n}\n\nexport { createBuffersFromArrays, createBufferInfoFromArrays, isIndices, setTypedArrayToBuffer, getNumComponents, createBufferFromArray };\n","function Matrix3() {\n\n    this.raw = Matrix3.identity();\n\n}\n\nObject.assign( Matrix3, {\n\n    identity() {\n\n        const a = new Float32Array( 9 );\n        a[ 0 ] = 1;\n        a[ 4 ] = 1;\n        a[ 8 ] = 1;\n\n        return a;\n\n    },\n\n    equals: ( function () {\n\n        const EPS = 0.000001;\n\n        return function equals( a, b ) {\n\n            const a0 = a[ 0 ];\n            const a1 = a[ 1 ];\n            const a2 = a[ 2 ];\n            const a3 = a[ 3 ];\n            const a4 = a[ 4 ];\n            const a5 = a[ 5 ];\n            const a6 = a[ 6 ];\n            const a7 = a[ 7 ];\n            const a8 = a[ 8 ];\n\n            const b0 = b[ 0 ];\n            const b1 = b[ 1 ];\n            const b2 = b[ 2 ];\n            const b3 = b[ 3 ];\n            const b4 = b[ 4 ];\n            const b5 = b[ 5 ];\n            const b6 = b[ 6 ];\n            const b7 = b[ 7 ];\n            const b8 = b[ 8 ];\n\n            return ( Math.abs( a0 - b0 ) <= EPS * Math.max( 1.0, Math.abs( a0 ), Math.abs( b0 ) ) &&\n              Math.abs( a1 - b1 ) <= EPS * Math.max( 1.0, Math.abs( a1 ), Math.abs( b1 ) ) &&\n              Math.abs( a2 - b2 ) <= EPS * Math.max( 1.0, Math.abs( a2 ), Math.abs( b2 ) ) &&\n              Math.abs( a3 - b3 ) <= EPS * Math.max( 1.0, Math.abs( a3 ), Math.abs( b3 ) ) &&\n              Math.abs( a4 - b4 ) <= EPS * Math.max( 1.0, Math.abs( a4 ), Math.abs( b4 ) ) &&\n              Math.abs( a5 - b5 ) <= EPS * Math.max( 1.0, Math.abs( a5 ), Math.abs( b5 ) ) &&\n              Math.abs( a6 - b6 ) <= EPS * Math.max( 1.0, Math.abs( a6 ), Math.abs( b6 ) ) &&\n              Math.abs( a7 - b7 ) <= EPS * Math.max( 1.0, Math.abs( a7 ), Math.abs( b7 ) ) &&\n              Math.abs( a8 - b8 ) <= EPS * Math.max( 1.0, Math.abs( a8 ), Math.abs( b8 ) ) );\n\n        };\n\n    }() ),\n\n    clone( a ) {\n\n        const out = new Float32Array( 9 );\n        out[ 0 ] = a[ 0 ];\n        out[ 1 ] = a[ 1 ];\n        out[ 2 ] = a[ 2 ];\n        out[ 3 ] = a[ 3 ];\n        out[ 4 ] = a[ 4 ];\n        out[ 5 ] = a[ 5 ];\n        out[ 6 ] = a[ 6 ];\n        out[ 7 ] = a[ 7 ];\n        out[ 8 ] = a[ 8 ];\n\n        return out;\n\n    },\n\n} );\n\nexport { Matrix3 };\n","import { createProgram, createUniformSetters, setUniforms, createAttributesSetters, createUniformBlockSpec, createUniformBlockInfos, setBlockUniformsForProgram } from '../renderer/program';\nimport * as Constant from '../renderer/constant';\nimport { PMath } from '../math/Math';\nimport { Matrix3 } from '../math/Matrix3';\nimport { Matrix4 } from '../math/Matrix4';\n\nfunction Shader( gl, vs, fs, opts ) {\n\n    this.cullFace = true;\n    this.blend = false;\n    this.depth = true;\n    this.sampleBlend = false;\n    this.shaders = [ vs, fs ];\n    this.program = null;\n    this.programs = [];\n    this.programMap = [];\n    this.gl = gl;\n    this.opts = opts;\n    this.camera = null;\n    this.currentUniformObj = {};\n    this.uniformObj = {};\n    this.programInfos = [];\n    this.uniformObjs = [];\n    this._programUpdated = false;\n\n    this.setDefines();\n\n}\n\nfunction equalSign( a, b ) {\n\n    return a === b;\n\n}\n\nObject.assign( Shader.prototype, {\n\n    activate() {\n\n        if ( Shader.currentProgram !== this.program ) {\n\n            this.gl.useProgram( this.program );\n            Shader.currentProgram = this.program;\n\n        }\n        return this;\n\n    },\n\n    deactivate() {\n\n        this.gl.useProgram( null );\n        Shader.currentProgram = null;\n        return this;\n\n    },\n\n    setUniformObjProp( prop, value, equalsFun = equalSign ) {\n\n        if ( this.currentUniformObj[ prop ] === undefined || ! equalsFun( this.currentUniformObj[ prop ], value ) ) {\n\n            this.uniformObj[ prop ] = value;\n            this.currentUniformObj[ prop ] = value;\n\n            if ( equalsFun === Matrix4.equals )\n                this.currentUniformObj[ prop ] = Matrix4.clone( value );\n            else if ( equalsFun === Matrix3.equals )\n                this.currentUniformObj[ prop ] = Matrix3.clone( value );\n            else if ( Array.isArray( value ) )\n                this.currentUniformObj[ prop ] = value.slice();\n            else if ( equalsFun === PMath.arrayEquals )\n                this.currentUniformObj[ prop ] = PMath.arrayClone( value );\n\n        }\n\n    },\n\n    setUniformObj( obj ) {\n\n        Object.keys( obj ).forEach( ( prop ) => {\n\n            if ( obj[ prop ].length === 16 && typeof obj[ prop ][ 0 ] === 'number' )\n                this.setUniformObjProp( prop, obj[ prop ], Matrix4.equals );\n            else if ( obj[ prop ].length === 9 && typeof obj[ prop ][ 0 ] === 'number' )\n                this.setUniformObjProp( prop, obj[ prop ], Matrix3.equals );\n            else if ( obj[ prop ].length && typeof obj[ prop ][ 0 ] === 'number' )\n                this.setUniformObjProp( prop, obj[ prop ], PMath.arrayEquals );\n            else\n                this.setUniformObjProp( prop, obj[ prop ] );\n\n        } );\n        return this;\n\n    },\n\n    setUniforms( uniforms ) {\n\n        setUniforms( this.uniformSetters, uniforms );\n        return this;\n\n    },\n\n    setBlockUniforms( uniforms ) {\n\n        setBlockUniformsForProgram( this.gl, this.uniformBlockSpec, this.uniformBlockInfos, uniforms );\n        return this;\n\n    },\n\n    setProjMatrix( mat4Array ) {\n\n        this.setUniformObjProp( Constant.UNIFORM_PROJ_MAT_NAME, mat4Array, Matrix4.equals );\n        return this;\n\n    },\n\n    setViewMatrix( mat4Array ) {\n\n        this.setUniformObjProp( Constant.UNIFORM_VIEW_MAT_NAME, mat4Array, Matrix4.equals );\n        return this;\n\n    },\n\n    setWorldMatrix( mat4Array ) {\n\n        this.setUniformObjProp( Constant.UNIFORM_WORLD_MAT_NAME, mat4Array, Matrix4.equals );\n        return this;\n\n    },\n\n    setTexture( tex ) {\n\n        this.setUniformObj( { texture: tex } );\n        return this;\n\n    },\n\n    setCamera( camera ) {\n\n        this.camera = camera;\n        return this;\n\n    },\n\n    updateCamera() {\n\n        if ( ! this.camera ) return this;\n\n        if ( this._needCamPos )\n            this.setUniformObjProp( Constant.UNIFORM_CAMPOS, this.camera.position, PMath.arrayEquals );\n\n        this.setProjMatrix( this.camera.projMat );\n        this.setViewMatrix( this.camera.viewMat );\n        return this;\n\n    },\n\n    dispose() {\n\n        if ( this.gl.getParameter( this.gl.CURRENT_PROGRAM ) === this.program )\n            this.gl.useProgram( null );\n\n        this.gl.deleteProgram( this.program );\n\n    },\n\n    preRender() {\n\n        if ( this._programUpdated ) {\n\n            this.uniformObj = this.currentUniformObj;\n            this._programUpdated = false;\n\n        } else if ( Shader.currentProgram !== this.program )\n            Object.keys( this.currentUniformObj ).forEach( ( prop ) => {\n\n                if ( this.currentUniformObj[ prop ] instanceof WebGLTexture )\n                    this.uniformObj[ prop ] = this.currentUniformObj[ prop ];\n\n            } );\n\n        this.activate();\n        this.updateCamera();\n\n        if ( this._needMVPMat || this._needVPMat ) {\n\n            this.currentUniformObj.temp = Matrix4.mult( Matrix4.identity(), this.currentUniformObj[ Constant.UNIFORM_PROJ_MAT_NAME ], this.currentUniformObj[ Constant.UNIFORM_VIEW_MAT_NAME ] );\n            if ( this._needVPMat ) this.setUniformObjProp( Constant.UNIFORM_VP_MAT_NAME, this.currentUniformObj.temp, Matrix4.equals );\n            if ( this._needMVPMat ) {\n\n                this.currentUniformObj.temp = Matrix4.mult( this.currentUniformObj.temp, this.currentUniformObj.temp, this.currentUniformObj[ Constant.UNIFORM_WORLD_MAT_NAME ] );\n                this.setUniformObjProp( Constant.UNIFORM_MVP_MAT_NAME, this.currentUniformObj.temp, Matrix4.equals );\n\n            }\n\n        }\n\n\n        this.setUniforms( this.uniformObj );\n        this.setBlockUniforms( this.uniformObj );\n        this.uniformObj = {};\n\n        return this;\n\n    },\n\n    renderModel( model ) {\n\n        if ( Shader.cullFace !== ( this.cullFace && model.cullFace ) ) {\n\n            this.gl[( ( this.cullFace && model.cullFace ) ? 'enable' : 'disable' )]( this.gl.CULL_FACE );\n            Shader.cullFace = ( this.cullFace && model.cullFace );\n\n        }\n\n        if ( Shader.blend !== ( this.blend || model.blend ) ) {\n\n            this.gl[( ( this.blend || model.blend ) ? 'enable' : 'disable' )]( this.gl.BLEND );\n            Shader.blend = ( this.blend || model.blend );\n\n        }\n\n        if ( Shader.depth !== ( this.depth && model.depth ) ) {\n\n            this.gl.depthMask( ( this.depth && model.depth ) );\n            Shader.depth = ( this.depth && model.depth );\n\n        }\n\n        if ( Shader.sampleBlend !== ( this.sampleBlend || model.sampleBlend ) ) {\n\n            this.gl[( ( this.sampleBlend || model.sampleBlend ) ? 'enable' : 'disable' )]( this.gl.SAMPLE_ALPHA_TO_COVERAGE );\n            Shader.sampleBlend = ( this.sampleBlend || model.sampleBlend );\n\n        }\n\n        model.preRender( this.gl, this._customAttrib ? this : undefined );\n        this.setUniformObj( model.uniformObj );\n        this.setWorldMatrix( model.transform.getWorldMatrix() );\n        if ( this._needNormMat )\n            this.setUniformObjProp( Constant.UNIFORM_NORMAL_MAT_NAME, model.normMat, Matrix3.equals );\n\n        this.preRender(); // set uniforms\n\n        this.gl.bindVertexArray( model.mesh.vao );\n\n        const bufferInfo = model.mesh.bufferInfo;\n        const instanceCount = model.instanceCount;\n        if ( bufferInfo.indices || bufferInfo.elementType )\n            if ( typeof instanceCount === 'number' )\n                this.gl.drawElementsInstanced( model.drawMode, bufferInfo.numElements, bufferInfo.elementType === undefined ? this.gl.UNSIGNED_SHORT : bufferInfo.elementType, model.offset, instanceCount );\n            else\n                this.gl.drawElements( model.drawMode, bufferInfo.numElements, bufferInfo.elementType === undefined ? this.gl.UNSIGNED_SHORT : bufferInfo.elementType, model.offset ); // eslint-disable-line\n        else\n        /* eslint-disable */ // eslint bug\n            if ( typeof instanceCount === 'number' )\n                this.gl.drawArraysInstanced( model.drawMode, model.offset, bufferInfo.numElements, instanceCount );\n            else\n                this.gl.drawArrays( model.drawMode, model.offset, bufferInfo.numElements );\n        /* eslint-enable */\n        this.gl.bindVertexArray( null );\n\n        return this;\n\n    },\n\n    setDefines( ...defines ) {\n\n        if ( defines.length > 0 ) {\n\n            let index = - 1;\n            const currentProgNum = this.programMap.length;\n            for ( let i = 0; i < currentProgNum; i ++ ) {\n\n                const defs = this.programMap[ i ];\n                let equals = false;\n\n                if ( defs.length === defines.length ) {\n\n                    equals = true;\n                    for ( let j = 0; j < defines.length; j ++ )\n                        if ( defs.indexOf( defines[ j ] ) < 0 ) {\n\n                            equals = false;\n                            break;\n\n                        }\n\n                }\n\n                if ( equals ) {\n\n                    index = i;\n                    break;\n\n                }\n\n            }\n\n            if ( index < 0 ) {\n\n                this.currentShaders = Shader.injectDefines( this.shaders, ...defines );\n                this.programs[ currentProgNum ] = createProgram( this.gl, ...this.currentShaders, this.opts );\n                this.program = this.programs[ currentProgNum ];\n                this.programMap[ currentProgNum ] = defines;\n                this.updateProgram( currentProgNum );\n                return this;\n\n            }\n\n            if ( this.program === this.programs[ index ] )\n                return this;\n\n            this.program = this.programs[ index ];\n            this.updateProgram( index );\n            return this;\n\n        }\n\n        if ( this.programMap.length > 0 ) {\n\n            if ( this.program === this.programs[ 0 ] )\n                return this;\n\n            this.program = this.programs[ 0 ];\n            this.updateProgram( 0 );\n            return this;\n\n        }\n\n        this.currentShaders = this.shaders;\n        this.programs[ 0 ] = createProgram( this.gl, ...this.shaders, this.opts );\n        this.program = this.programs[ 0 ];\n        this.programMap[ 0 ] = [];\n        this.updateProgram( 0 );\n        return this;\n\n    },\n\n    updateProgram( index = - 1 ) {\n\n        if ( index > - 1 && index < this.programInfos.length ) {\n\n            this.attribSetters = this.programInfos[ index ].attribSetters;\n            this.uniformSetters = this.programInfos[ index ].uniformSetters;\n            this.uniformBlockSpec = this.programInfos[ index ].uniformBlockSpec;\n            this.uniformBlockInfos = this.programInfos[ index ].uniformBlockInfos;\n            this.currentShaders = this.programInfos[ index ].shaders;\n            this._needMVPMat = this.programInfos[ index ]._needMVPMat;\n            this._needVPMat = this.programInfos[ index ]._needVPMat;\n            this._needCamPos = this.programInfos[ index ]._needCamPos;\n            this._needNormMat = this.programInfos[ index ]._needNormMat;\n            this._customAttrib = this.programInfos[ index ]._customAttrib;\n\n        } else {\n\n            this.gl.useProgram( this.program );\n            this.attribSetters = createAttributesSetters( this.gl, this.program );\n            this.uniformSetters = createUniformSetters( this.gl, this.program );\n            this.uniformBlockSpec = createUniformBlockSpec( this.gl, this.program );\n            this.uniformBlockInfos = createUniformBlockInfos( this.gl, this.program, this.uniformBlockSpec );\n            this._needMVPMat = Object.prototype.hasOwnProperty.call( this.uniformSetters, Constant.UNIFORM_MVP_MAT_NAME );\n            this._needVPMat = Object.prototype.hasOwnProperty.call( this.uniformSetters, Constant.UNIFORM_VP_MAT_NAME );\n            this._needCamPos = Object.prototype.hasOwnProperty.call( this.uniformSetters, Constant.UNIFORM_CAMPOS );\n            this._needNormMat = Object.prototype.hasOwnProperty.call( this.uniformSetters, Constant.UNIFORM_NORMAL_MAT_NAME );\n            this._customAttrib = Object.keys( this.attribSetters ).filter( attrib => [ Constant.ATTRIB_POSITION_NAME, Constant.ATTRIB_UV_NAME, Constant.ATTRIB_NORMAL_NAME, Constant.ATTRIB_BARYCENTRIC_NAME ].indexOf( attrib ) < 0 ).length > 0;\n            this.programInfos[ index ] = {\n                attribSetters: this.attribSetters,\n                uniformSetters: this.uniformSetters,\n                uniformBlockSpec: this.uniformBlockSpec,\n                uniformBlockInfos: this.uniformBlockInfos,\n                shaders: this.currentShaders,\n                _needMVPMat: this._needMVPMat,\n                _needVPMat: this._needVPMat,\n                _needCamPos: this._needCamPos,\n                _needNormMat: this._needNormMat,\n                _customAttrib: this._customAttrib,\n            };\n            this.uniformObjs[ index ] = Object.assign( {}, this.currentUniformObj );\n\n        }\n\n        Shader.currentProgram = null;\n        this._programUpdated = true;\n        this.currentUniformObj = this.uniformObjs[ index ];\n\n    },\n\n} );\n\nfunction insertToString( string, position, value ) {\n\n    return [ string.slice( 0, position ), value, string.slice( position ) ].join( '' );\n\n}\n\nObject.assign( Shader, {\n\n    currentProgram: null,\n    cullFace: true,\n    blend: false,\n    depth: true,\n    sampleBlend: false,\n\n    injectDefines( shader, ...defines ) {\n\n        if ( Array.isArray( shader ) )\n            return shader.map( shadersrc => Shader.injectDefines( shadersrc, ...defines ) );\n\n        const index = shader.indexOf( '\\n' ) + 1;\n        let newShader = shader;\n\n        let define;\n        for ( let i = 0; i < defines.length; i ++ ) {\n\n            define = `#define ${defines[ i ]}\\n`;\n            if ( shader.indexOf( define ) < 0 )\n                newShader = insertToString( newShader, index, define );\n\n        }\n\n        return newShader;\n\n    },\n\n    removeDefines( shader, ...defines ) {\n\n        let newShader = shader;\n\n        let define;\n        for ( let i = 0; i < defines.length; i ++ ) {\n\n            define = `#define ${defines[ i ]}\\n`;\n            if ( shader.indexOf( define ) > 0 )\n                newShader = newShader.replace( define, '' );\n\n        }\n\n        return newShader;\n\n    },\n\n} );\n\nexport { Shader };\n","import { Shader } from './Shader';\nimport vs from './shadersrc/commonVAO.vs.glsl';\nimport fs from './shadersrc/commonVAO.fs.glsl';\n\nfunction CommonVAOShader( gl ) {\n\n    Shader.call( this, gl, CommonVAOShader.vs, CommonVAOShader.fs );\n\n    this.deactivate();\n\n}\n\nCommonVAOShader.prototype = Object.assign( Object.create( Shader.prototype ), {\n\n    constructor: CommonVAOShader,\n\n} );\n\nObject.assign( CommonVAOShader, {\n\n    vs,\n    fs,\n\n} );\n\nexport { CommonVAOShader };\n","import { Transform } from './Transform';\nimport { createVertexArray } from '../renderer/vertexArray';\nimport { createBufferInfoFromArrays } from '../renderer/attributes';\nimport { CommonVAOShader } from '../shader/CommonVAOShader';\nimport * as Constant from '../renderer/constant';\n\nconst getDefaultShader = ( function () {\n\n    let commonVAOShader;\n\n    return function getDefaultShader( gl ) { // eslint-disable-line\n\n        if ( ! commonVAOShader )\n            commonVAOShader = new CommonVAOShader( gl );\n\n        return commonVAOShader;\n\n    };\n\n}() );\n\nfunction Model( mesh ) {\n\n    this.mesh = mesh;\n    this.enablePick = true;\n    this.transform = new Transform();\n    this.node = null;\n    this._uniformObj = {};\n\n}\n\nObject.defineProperties( Model.prototype, {\n\n    isModel: {\n\n        get() {\n\n            return true;\n\n        },\n\n    },\n\n    name: {\n\n        get() {\n\n            return this._name || this.mesh.name;\n\n        },\n\n        set( value ) {\n\n            this._name = value;\n\n        },\n\n    },\n\n    normMat: {\n\n        get() {\n\n            return this.transform.normMat;\n\n        },\n\n    },\n\n    matrix: {\n\n        get() {\n\n            return this.transform.matrix.raw;\n\n        },\n\n    },\n\n    positionInfo: {\n\n        get() {\n\n            return this.mesh.attribArrays[ Constant.ATTRIB_POSITION_NAME ];\n\n        },\n\n    },\n\n    uvInfo: {\n\n        get() {\n\n            return this.mesh.attribArrays[ Constant.ATTRIB_UV_NAME ];\n\n        },\n\n    },\n\n    normalInfo: {\n\n        get() {\n\n            return this.mesh.attribArrays[ Constant.ATTRIB_NORMAL_NAME ];\n\n        },\n\n    },\n\n    uniformObj: {\n\n        get() {\n\n            return this._uniformObj;\n\n        },\n\n    },\n\n    position: {\n\n        get() {\n\n            return this.transform.position;\n\n        },\n\n        set( array ) {\n\n            this.setPosition( array );\n\n        },\n    },\n\n    scale: {\n\n        get() {\n\n            return this.transform.scale;\n\n        },\n\n        set( array ) {\n\n            this.setScale( array );\n\n        },\n\n    },\n\n    rotation: {\n\n        get() {\n\n            return this.transform.rotation;\n\n        },\n\n        set( array ) {\n\n            this.setRotation( array );\n\n        },\n\n    },\n\n    quaternion: {\n\n        get() {\n\n            return this.transform.quaternion;\n\n        },\n\n        set( arrayQuat ) {\n\n            this.setQuaternion( arrayQuat );\n\n        },\n\n    },\n\n    drawMode: {\n\n        get() {\n\n            if ( this._drawMode !== undefined )\n                return this._drawMode;\n            return this.mesh.drawMode;\n\n        },\n\n        set( v ) {\n\n            this._drawMode = v;\n\n        },\n\n    },\n\n    cullFace: {\n\n        get() {\n\n            if ( this._cullFace !== undefined )\n                return this._cullFace;\n            return this.mesh.cullFace;\n\n        },\n\n        set( v ) {\n\n            this._cullFace = v;\n\n        },\n\n    },\n\n    blend: {\n\n        get() {\n\n            if ( this._blend !== undefined )\n                return this._blend;\n            return this.mesh.blend;\n\n        },\n\n        set( v ) {\n\n            this._blend = v;\n\n        },\n\n    },\n\n    depth: {\n\n        get() {\n\n            if ( this._depth !== undefined )\n                return this._depth;\n            return this.mesh.depth;\n\n        },\n        set( v ) {\n\n            this._depth = v;\n\n        },\n\n    },\n\n    sampleBlend: {\n\n        get() {\n\n            if ( this._sampleBlend !== undefined )\n                return this._sampleBlend;\n            return this.mesh.sampleBlend;\n\n        },\n\n        set( v ) {\n\n            this._sampleBlend = v;\n\n        },\n\n    },\n\n    instanceCount: {\n\n        get() {\n\n            if ( this._instanceCount !== undefined )\n                return this._instanceCount;\n            return this.mesh.instanceCount;\n\n        },\n\n        set( v ) {\n\n            this._instanceCount = v;\n\n        },\n\n    },\n\n    offset: {\n\n        get() {\n\n            if ( this._offset !== undefined )\n                return this._offset;\n            return this.mesh.offset;\n\n        },\n\n        set( v ) {\n\n            this._offset = v;\n\n        },\n\n    },\n\n    updateVao: {\n\n        get() {\n\n            return this.mesh._updateVao;\n\n        },\n\n        set( v ) {\n\n            this.mesh._updateVao = !! v;\n\n        },\n\n    },\n\n} );\n\nObject.assign( Model.prototype, {\n\n    setScale( ...args ) {\n\n        if ( args[ 0 ] instanceof Transform )\n            return this.setScale( ...( args[ 0 ].scale ) );\n\n        this.transform.setScale( ...args );\n        return this;\n\n    },\n\n    setPosition( ...args ) {\n\n        if ( args[ 0 ] instanceof Transform )\n            return this.setPosition( ...( args[ 0 ].position.getArray() ) );\n\n        this.transform.setPosition( ...args );\n        return this;\n\n    },\n\n    setRotation( ...args ) {\n\n        if ( args[ 0 ] instanceof Transform )\n            return this.setRotation( ...( args[ 0 ].rotation.getArray() ) );\n\n        this.transform.setRotation( ...args );\n        return this;\n\n    },\n\n    setQuaternion( ...args ) {\n\n        if ( args[ 0 ] instanceof Transform )\n            return this.setQuaternion( ...( args[ 0 ].quaternion.getArray() ) );\n\n        this.transform.setQuaternion( ...args );\n        return this;\n\n    },\n\n    setTransform( transform ) {\n\n        this.transform = transform;\n        return this;\n\n    },\n\n    preRender( gl, shader = getDefaultShader( gl ) ) {\n\n        this.createBufferInfo( gl ).createVAO( gl, shader );\n        return this;\n\n    },\n\n    createVAO( gl, shader = getDefaultShader( gl ) ) {\n\n        if ( this.mesh._updateVao && this.mesh.vao ) {\n\n            gl.deleteVertexArray( this.mesh.vao );\n            this.mesh._updateVao = false;\n            this.mesh.vao = null;\n\n        }\n\n        if ( ! this.mesh.vao )\n            this.mesh.vao = createVertexArray( gl, this.mesh.bufferInfo, shader.program, shader.attribSetters );\n\n        return this;\n\n    },\n\n    createBufferInfo( gl ) {\n\n        if ( ! this.mesh.bufferInfo ) {\n\n            this.mesh.bufferInfo = createBufferInfoFromArrays( gl, this.mesh.attribArrays );\n            this.bufferInfo = this.mesh.bufferInfo;\n\n        }\n        return this;\n\n    },\n\n    setUniformObj( obj ) {\n\n        Object.assign( this._uniformObj, obj );\n        return this;\n\n    },\n\n} );\n\nexport { Model };\n","import { Vector3 } from './Vector3';\nimport { PMath } from './Math';\n\n// https://github.com/mourner/simplify-js/blob/3d/simplify.js\n\nfunction getSquareDistance( p1, p2 ) {\n\n    const dx = p1.x - p2.x;\n    const dy = p1.y - p2.y;\n    const dz = p1.z - p2.z;\n\n    return dx * dx + dy * dy + dz * dz;\n\n}\n\nfunction getSquareSegmentDistance( p, p1, p2 ) {\n\n    let x = p1.x;\n    let y = p1.y;\n    let z = p1.z;\n\n    let dx = p2.x - x;\n    let dy = p2.y - y;\n    let dz = p2.z - z;\n\n    if ( dx !== 0 || dy !== 0 || dz !== 0 ) {\n\n        const t = ( ( p.x - x ) * dx + ( p.y - y ) * dy + ( p.z - z ) * dz ) /\n                ( dx * dx + dy * dy + dz * dz );\n\n        if ( t > 1 ) {\n\n            x = p2.x;\n            y = p2.y;\n            z = p2.z;\n\n        } else if ( t > 0 ) {\n\n            x += dx * t;\n            y += dy * t;\n            z += dz * t;\n\n        }\n\n    }\n\n    dx = p.x - x;\n    dy = p.y - y;\n    dz = p.z - z;\n\n    return dx * dx + dy * dy + dz * dz;\n\n}\n\nfunction simplifyRadialDistance( points, sqTolerance ) {\n\n    let prevPoint = points[ 0 ];\n    const newPoints = [ prevPoint ];\n    let point;\n\n    for ( let i = 1, len = points.length; i < len; i ++ ) {\n\n        point = points[ i ];\n\n        if ( getSquareDistance( point, prevPoint ) > sqTolerance ) {\n\n            newPoints.push( point );\n            prevPoint = point;\n\n        }\n\n    }\n\n    if ( prevPoint !== point )\n        newPoints.push( point );\n\n\n    return newPoints;\n\n}\n\nfunction simplifyDouglasPeucker( points, sqTolerance ) {\n\n    const len = points.length;\n    const MarkerArray = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\n    const markers = new MarkerArray( len );\n\n    let first = 0;\n    let last = len - 1;\n\n    const stack = [];\n    const newPoints = [];\n\n    let i;\n    let maxSqDist;\n    let sqDist;\n    let index;\n\n    markers[ first ] = markers[ last ] = 1; // eslint-disable-line\n\n    while ( last ) {\n\n        maxSqDist = 0;\n\n        for ( i = first + 1; i < last; i ++ ) {\n\n            sqDist = getSquareSegmentDistance( points[ i ], points[ first ], points[ last ] );\n\n            if ( sqDist > maxSqDist ) {\n\n                index = i;\n                maxSqDist = sqDist;\n\n            }\n\n        }\n\n        if ( maxSqDist > sqTolerance ) {\n\n            markers[ index ] = 1;\n            stack.push( first, index, index, last );\n\n        }\n\n        last = stack.pop();\n        first = stack.pop();\n\n    }\n\n    for ( i = 0; i < len; i ++ )\n        if ( markers[ i ] )\n            newPoints.push( points[ i ] );\n\n    return newPoints;\n\n}\n\nfunction simplify( points, tolerance, highestQuality ) {\n\n    const sqTolerance = tolerance !== undefined ? tolerance * tolerance : 1;\n\n    points = highestQuality ? points : simplifyRadialDistance( points, sqTolerance ); // eslint-disable-line\n    points = simplifyDouglasPeucker( points, sqTolerance ); // eslint-disable-line\n\n    return points;\n\n}\n\nconst BezierCurve = {\n\n    getPoint( p0, p1, p2, p3, t, out = new Vector3() ) {\n\n        t = PMath.clamp( t, 0, 1 ); // eslint-disable-line\n        const invt = 1 - t;\n\n        out.x = invt * invt * invt * p0.x + // eslint-disable-line\n                3 * invt * invt * t * p1.x +\n                3 * invt * t * t * p2.x +\n                t * t * t * p3.x;\n\n        out.y = invt * invt * invt * p0.y + // eslint-disable-line\n                3 * invt * invt * t * p1.y +\n                3 * invt * t * t * p2.y +\n                t * t * t * p3.y;\n\n        out.z = invt * invt * invt * p0.z + // eslint-disable-line\n                3 * invt * invt * t * p1.z +\n                3 * invt * t * t * p2.z +\n                t * t * t * p3.z;\n\n        return out;\n\n    },\n\n    getPoints( p0, p1, p2, p3, tolerance, numPoints = 100, highlyMinify = true ) {\n\n        const points = [];\n        for ( let i = 0; i < numPoints; i ++ ) {\n\n            const t = i / ( numPoints - 1 );\n            points.push( BezierCurve.getPoint( p0, p1, p2, p3, t ) );\n\n        }\n\n        return tolerance ? simplify( points, tolerance, highlyMinify ) : points;\n\n    },\n\n    simplify,\n\n};\n\nexport { BezierCurve };\n","import * as Constant from '../renderer/constant';\nimport { Model } from '../model/Model';\nimport { getTypedArray } from '../renderer/typedArray';\nimport { getNumComponents } from '../renderer/attributes';\nimport { BezierCurve } from '../math/BezierCurve';\n\nfunction Mesh( name, attribArrays = {}, options ) {\n\n    Object.keys( attribArrays ).forEach( ( prop ) => {\n\n        if ( prop !== 'indices' ) {\n\n            attribArrays[ prop ].data = getTypedArray( attribArrays[ prop ].data ); //eslint-disable-line\n            attribArrays[ prop ].numComponents = getNumComponents( attribArrays[ prop ], prop );//eslint-disable-line\n\n        }\n\n\n    } );\n\n    Object.assign( this, {\n        name,\n        attribArrays,\n        _bufferInfo: null,\n        drawMode: Constant.TRIANGLES,\n        cullFace: true,\n        blend: false,\n        depth: true,\n        sampleBlend: false,\n        instanceCount: undefined,\n        offset: 0,\n    }, options );\n\n}\n\nObject.defineProperties( Mesh.prototype, {\n\n    isMesh: {\n\n        get() {\n\n            return true;\n\n        },\n\n    },\n\n    bufferInfo: {\n\n        get() {\n\n            return this._bufferInfo;\n\n        },\n\n        set( v ) {\n\n            this._bufferInfo = v;\n            this._updateVao = true;\n\n        },\n\n    },\n\n} );\n\nObject.assign( Mesh.prototype, {\n\n    updateBufferInfo( obj ) {\n\n        if ( this._bufferInfo ) {\n\n            let updated = false;\n            Object.keys( this._bufferInfo ).forEach( ( key ) => {\n\n                if ( obj[ key ] ) {\n\n                    this._bufferInfo[ key ] = obj[ key ];\n                    updated = true;\n\n                }\n\n                if ( key === 'attribs' )\n                    Object.keys( this._bufferInfo.attribs ).forEach( ( attrib ) => {\n\n                        if ( obj[ attrib ] ) {\n\n                            this._bufferInfo.attribs[ attrib ] = obj[ attrib ];\n                            updated = true;\n\n                        }\n\n                    } );\n\n\n            } );\n\n            if ( updated ) this._updateVao = true;\n\n        }\n\n    },\n\n} );\n\nconst GridAxis = {};\n\nObject.assign( GridAxis, {\n\n    createModel( name, size, div ) {\n\n        return new Model( GridAxis.createMesh( name, size, div ) );\n\n    },\n\n    createMesh( name = 'GridAxis', size = 10, div = 20 ) {\n\n        const vertices = [];\n        const color = [];\n        const step = size / div;\n        const half = size / 2;\n\n        let p;\n        for ( let i = 0; i <= div; i ++ ) {\n\n            p = - half + ( i * step );\n            vertices.push( p );\n            vertices.push( 0 );\n            vertices.push( half );\n            color.push( 0 );\n\n            vertices.push( p );\n            vertices.push( 0 );\n            vertices.push( - half );\n            color.push( 0 );\n\n            vertices.push( - half );\n            vertices.push( 0 );\n            vertices.push( p );\n            color.push( 0 );\n\n            vertices.push( half );\n            vertices.push( 0 );\n            vertices.push( p );\n            color.push( 0 );\n\n        }\n\n        vertices.push( - half );\n        vertices.push( 0 );\n        vertices.push( 0 );\n        color.push( 1 );\n\n        vertices.push( half );\n        vertices.push( 0 );\n        vertices.push( 0 );\n        color.push( 1 );\n\n        vertices.push( 0 );\n        vertices.push( - half );\n        vertices.push( 0 );\n        color.push( 2 );\n\n        vertices.push( 0 );\n        vertices.push( half );\n        vertices.push( 0 );\n        color.push( 2 );\n\n        vertices.push( 0 );\n        vertices.push( 0 );\n        vertices.push( - half );\n        color.push( 3 );\n\n        vertices.push( 0 );\n        vertices.push( 0 );\n        vertices.push( half );\n        color.push( 3 );\n\n        const attribArrays = {\n            a_color: { data: color, numComponents: 1 },\n        };\n        attribArrays[ Constant.ATTRIB_POSITION_NAME ] = { data: vertices };\n\n        return new Mesh( name, attribArrays, { drawMode: Constant.LINES } );\n\n    },\n\n} );\n\nconst Quad = {};\n\nObject.assign( Quad, {\n\n    createModel( name, size, x, y ) {\n\n        return new Model( Quad.createMesh( name, size, x, y ) );\n\n    },\n\n    createMesh( name = 'Quad', size, x, y ) {\n\n        const attribArrays = Quad.createVertices( size, x, y );\n        return new Mesh( name, attribArrays, {\n            cullFace: false,\n        } );\n\n    },\n\n    createVertices( size = 1, x = 0, y = 0 ) {\n\n        const helfSize = size / 2;\n        const vertices = [\n            x + - 1 * helfSize, y + 1 * helfSize,\n            x + - 1 * helfSize, y + - 1 * helfSize,\n            x + 1 * helfSize, y + - 1 * helfSize,\n            x + 1 * helfSize, y + 1 * helfSize,\n        ];\n        const uv = [ 0, 0, 0, 1, 1, 1, 1, 0 ];\n        const normal = [\n            0, 0, 1,\n            0, 0, 1,\n            0, 0, 1,\n            0, 0, 1,\n        ];\n        const indices = [ 0, 1, 3, 1, 2, 3 ];\n\n        const attribArrays = {\n            indices: { data: indices },\n        };\n        attribArrays[ Constant.ATTRIB_POSITION_NAME ] = { data: vertices, numComponents: 2 };\n        attribArrays[ Constant.ATTRIB_UV_NAME ] = { data: uv };\n        attribArrays[ Constant.ATTRIB_NORMAL_NAME ] = { data: normal };\n\n        return attribArrays;\n\n    },\n\n} );\n\nconst Cube = {};\n\nObject.assign( Cube, {\n\n    createModel( name, width, height, depth, x, y, z ) {\n\n        return new Model( Cube.createMesh( name, width, height, depth, x, y, z ) );\n\n    },\n\n    createMesh( name = 'Cube', width, height, depth, x, y, z ) {\n\n        const attribArrays = Cube.createVertices( width, height, depth, x, y, z );\n        return new Mesh( name, attribArrays, { cullFace: false } );\n\n    },\n\n    createVertices( width = 1, height = 1, depth = 1, x = 0, y = 0, z = 0 ) {\n\n        const w = width * 0.5;\n        const h = height * 0.5;\n        const d = depth * 0.5;\n\n        const x0 = x - w;\n        const x1 = x + w;\n        const y0 = y - h;\n        const y1 = y + h;\n        const z0 = z - d;\n        const z1 = z + d;\n\n        const vertices = [\n            x0, y1, z1, 0, // 0 Front\n            x0, y0, z1, 0, // 1\n            x1, y0, z1, 0, // 2\n            x1, y1, z1, 0, // 3\n\n            x1, y1, z0, 1, // 4 Back\n            x1, y0, z0, 1, // 5\n            x0, y0, z0, 1, // 6\n            x0, y1, z0, 1, // 7\n\n            x0, y1, z0, 2, // 7 Left\n            x0, y0, z0, 2, // 6\n            x0, y0, z1, 2, // 1\n            x0, y1, z1, 2, // 0\n\n            x0, y0, z1, 3, // 1 Bottom\n            x0, y0, z0, 3, // 6\n            x1, y0, z0, 3, // 5\n            x1, y0, z1, 3, // 2\n\n            x1, y1, z1, 4, // 3 Right\n            x1, y0, z1, 4, // 2\n            x1, y0, z0, 4, // 5\n            x1, y1, z0, 4, // 4\n\n            x0, y1, z0, 5, // 7 Top\n            x0, y1, z1, 5, // 0\n            x1, y1, z1, 5, // 3\n            x1, y1, z0, 5, // 4\n        ];\n\n        const indices = [];\n        for ( let i = 0; i < vertices.length / 4; i += 4 )\n            indices.push( i, i + 1, i + 3, i + 1, i + 2, i + 3 );\n\n        const uv = [];\n        for ( let i = 0; i < 6; i ++ )\n            uv.push( 0, 0, 0, 1, 1, 1, 1, 0 );\n\n        const normal = [\n            0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, // Front\n            0, 0, - 1, 0, 0, - 1, 0, 0, - 1, 0, 0, - 1, // Back\n            - 1, 0, 0, - 1, 0, 0, - 1, 0, 0, - 1, 0, 0, // Left\n            0, - 1, 0, 0, - 1, 0, 0, - 1, 0, 0, - 1, 0, // Bottom\n            1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, // Right\n            0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, // Top\n        ];\n\n        const attribArrays = {\n            indices: { data: indices },\n        };\n        attribArrays[ Constant.ATTRIB_POSITION_NAME ] = { data: vertices, numComponents: 4 };\n        attribArrays[ Constant.ATTRIB_UV_NAME ] = { data: uv };\n        attribArrays[ Constant.ATTRIB_NORMAL_NAME ] = { data: normal };\n\n        return attribArrays;\n\n    },\n\n} );\n\nconst Sphere = {};\n\nObject.assign( Sphere, {\n\n    createModel( name, radius, subdivAixs, subdivHeight, startLon, endLon, startLat, endLat ) {\n\n        return new Model( Sphere.createMesh( name, radius, subdivAixs, subdivHeight, startLon, endLon, startLat, endLat ) );\n\n    },\n\n    createMesh( name = 'sphere', radius, subdivAixs, subdivHeight, startLon, endLon, startLat, endLat ) {\n\n        const attribArrays = Sphere.createVertices( radius, subdivAixs, subdivHeight, startLon, endLon, startLat, endLat );\n        return new Mesh( name, attribArrays );\n\n    },\n\n    createVertices( radius = 0.5, subdivAixs = 16, subdivHeight = 8, startLon = 0, endLon = Math.PI * 2, startLat = 0, endLat = Math.PI ) {\n\n        const latRange = endLat - startLat;\n        const lonRange = endLon - startLon;\n\n        const positions = [];\n        const normals = [];\n        const uvs = [];\n\n        for ( let y = 0; y <= subdivHeight; y ++ )\n            for ( let x = 0; x <= subdivAixs; x ++ ) {\n\n                const u = x / subdivAixs;\n                const v = y / subdivHeight;\n                const phi = lonRange * u + startLon;\n                const theta = latRange * v + startLat;\n                const sinTheta = Math.sin( theta );\n                const cosTheta = Math.cos( theta );\n                const sinPhi = Math.sin( phi );\n                const cosPhi = Math.cos( phi );\n                const ux = - cosPhi * sinTheta;\n                const uy = cosTheta;\n                const uz = sinPhi * sinTheta;\n                positions.push( radius * ux, radius * uy, radius * uz );\n                normals.push( ux, uy, uz );\n                uvs.push( u, 1 - v );\n\n            }\n\n        const numVertAround = subdivAixs + 1;\n        const indices = [];\n        for ( let x = 0; x < subdivAixs; x ++ )\n            for ( let y = 0; y < subdivHeight; y ++ ) {\n\n                const a = ( y + 0 ) * numVertAround + x + 1;\n                const b = ( y + 0 ) * numVertAround + x;\n                const c = ( y + 1 ) * numVertAround + x;\n                const d = ( y + 1 ) * numVertAround + x + 1;\n\n                if ( y !== 0 || startLat > 0 ) indices.push( a, b, d );\n                if ( y !== subdivHeight - 1 || endLat < Math.PI ) indices.push( b, c, d );\n\n            }\n\n        const attribArrays = {\n            indices: { data: indices },\n        };\n        attribArrays[ Constant.ATTRIB_POSITION_NAME ] = { data: positions };\n        attribArrays[ Constant.ATTRIB_UV_NAME ] = { data: uvs };\n        attribArrays[ Constant.ATTRIB_NORMAL_NAME ] = { data: normals };\n\n        return attribArrays;\n\n    },\n\n} );\n\nfunction deIndexAttribs( modelMesh ) {\n\n    const mesh = modelMesh.mesh || modelMesh;\n    const attribArrays = mesh.attribArrays;\n    const indices = attribArrays.indices.data;\n    const drawMode = mesh.drawMode;\n    if ( ! indices ) return;\n\n    if ( drawMode === Constant.TRIANGLES ) {\n\n        Object.keys( attribArrays ).forEach( ( name ) => {\n\n            if ( name === 'indices' ) return;\n\n            const data = attribArrays[ name ].data;\n            const numComponents = attribArrays[ name ].numComponents;\n            const tempAry = [];\n            for ( let i = 0; i < indices.length; i ++ )\n                for ( let j = 0; j < numComponents; j ++ )\n                    tempAry.push( data[ indices[ i ] * numComponents + j ] );\n\n            attribArrays[ name ].data = tempAry;\n\n        } );\n\n        delete attribArrays.indices;\n        delete mesh.bufferInfo;\n        delete mesh.vao;\n\n    }\n\n}\n\nfunction addBarycentricAttrib( modelMesh, removeEdge = false ) {\n\n    const mesh = modelMesh.mesh || modelMesh;\n    const indices = mesh.attribArrays.indices.data;\n    const Q = removeEdge ? 1 : 0;\n\n    if ( mesh.drawMode === Constant.TRIANGLES ) {\n\n        if ( mesh.attribArrays.indices )\n            deIndexAttribs( modelMesh );\n\n        const numVert = mesh.attribArrays[ Constant.ATTRIB_POSITION_NAME ].data.length / mesh.attribArrays[ Constant.ATTRIB_POSITION_NAME ].numComponents;\n        const barycentrics = [];\n        let lastVerts = [];\n        let curVerts = [];\n        let map = [];\n        for ( let i = 0; i < numVert / 3; i ++ ) {\n\n            curVerts = [ indices[ i * 3 + 0 ], indices[ i * 3 + 1 ], indices[ i * 3 + 2 ] ];\n            map = curVerts.map( vert => lastVerts.indexOf( vert ) ); // eslint-disable-line\n            if ( map[ 0 ] === 1 && map[ 2 ] === 2 ) { // abd bcd\n\n                barycentrics.push(\n                    0, 1, 0,\n                    0, 0, 1,\n                    1, 0, Q,\n                );\n                lastVerts = [];\n\n            } else {\n\n                barycentrics.push(\n                    0, 0, 1,\n                    0, 1, 0,\n                    1, 0, Q,\n                );\n                lastVerts = curVerts;\n\n            }\n\n\n        }\n\n        mesh.attribArrays[ Constant.ATTRIB_BARYCENTRIC_NAME ] = { data: barycentrics, numComponents: 3 };\n\n        delete mesh.bufferInfo;\n        delete mesh.vao;\n\n    }\n\n}\n\nconst Curve = {\n\n    createModel( name, points, tolerence, numPoints, highlyMinify ) {\n\n        return new Model( Curve.createMesh( name, points, tolerence, numPoints, highlyMinify ) );\n\n    },\n\n    createMesh( name = 'curve', points, tolerence, numPoints, highlyMinify ) {\n\n        let bpoints = [];\n        for ( let i = 0; i < Math.floor( ( points.length - 1 ) / 3 ); i ++ ) {\n\n            bpoints.pop();\n            bpoints = bpoints.concat( BezierCurve.getPoints( points[ i * 3 + 0 ], points[ i * 3 + 1 ], points[ i * 3 + 2 ], points[ i * 3 + 3 ], tolerence, numPoints, highlyMinify ) );\n\n        }\n        bpoints = bpoints.map( vec3 => vec3.getArray() );\n        const vertices = bpoints.reduce( ( a, b ) => a.concat( b ) );\n\n        const attribArrays = {};\n        attribArrays[ Constant.ATTRIB_POSITION_NAME ] = { data: vertices };\n\n        return new Mesh( name, attribArrays, { drawMode: Constant.LINE_STRIP } );\n\n    },\n\n};\n\nexport { Mesh, GridAxis, Quad, Cube, Sphere, deIndexAttribs, addBarycentricAttrib, Curve };\n","import { Shader } from './Shader';\nimport vs from './shadersrc/gridaxis.vs.glsl';\nimport fs from './shadersrc/gridaxis.fs.glsl';\n\nfunction GridAxisShader( gl, camera ) {\n\n    Shader.call( this, gl, GridAxisShader.vs, GridAxisShader.fs );\n\n    this.setCamera( camera );\n    this.setUniformObj( { u_colors: [ 0.5, 0.5, 0.5, 1, 0, 0, 0, 1, 0, 0, 0, 1 ] } );\n\n    this.deactivate();\n\n}\n\nGridAxisShader.prototype = Object.assign( Object.create( Shader.prototype ), {\n    constructor: GridAxisShader,\n} );\n\nObject.assign( GridAxisShader, {\n\n    vs,\n    fs,\n\n} );\n\nexport { GridAxisShader };\n","import { Shader } from './Shader';\nimport vs from './shadersrc/singleTexture.vs.glsl';\nimport fs from './shadersrc/singleTexture.fs.glsl';\n\nfunction FlatTextureShader( gl, camera, texture ) {\n\n    Shader.call( this, gl, FlatTextureShader.vs, FlatTextureShader.fs );\n\n    this.setCamera( camera );\n    this.setUniformObj( { u_texture: texture } );\n\n    this.deactivate();\n\n}\n\nFlatTextureShader.prototype = Object.assign( Object.create( Shader.prototype ), {\n\n    constructor: FlatTextureShader,\n\n} );\n\nObject.assign( FlatTextureShader, {\n\n    vs,\n    fs,\n\n} );\n\nexport { FlatTextureShader };\n","import { Shader } from './Shader';\nimport vs from './shadersrc/skybox.vs.glsl';\nimport fs from './shadersrc/skybox.fs.glsl';\n\nfunction DynamicSkyboxShader( gl, camera, dayTex, nightTex = dayTex, rate = 0.5 ) {\n\n    Shader.call( this, gl, DynamicSkyboxShader.vs, DynamicSkyboxShader.fs );\n\n    this.setCamera( camera );\n    this.setUniformObj( { u_dayTex: dayTex, u_nightTex: nightTex, u_rate: rate } );\n\n    this.deactivate();\n\n}\n\nDynamicSkyboxShader.prototype = Object.assign( Object.create( Shader.prototype ), {\n\n    constructor: DynamicSkyboxShader,\n\n    setRate( r ) {\n\n        this.setUniformObj( { u_rate: r } );\n        return this;\n\n    },\n\n    setTexture( dayTex, nightTex = dayTex ) {\n\n        this.setUniformObj( { u_dayTex: dayTex, u_nightTex: nightTex } );\n        return this;\n\n    },\n\n    updateCamera() {\n\n        this.setProjMatrix( this.camera.projMat );\n        this.setViewMatrix( this.camera.getOrientMatrix() );\n        return this;\n\n    },\n\n} );\n\nObject.assign( DynamicSkyboxShader, {\n\n    vs,\n    fs,\n\n} );\n\nexport { DynamicSkyboxShader };\n","import { Shader } from './Shader';\nimport vs from './shadersrc/phongLightSimple.vs.glsl';\nimport fs from './shadersrc/phongLightSimple.fs.glsl';\n\nfunction PointlightShader( gl, camera ) {\n\n    Shader.call( this, gl, PointlightShader.vs, PointlightShader.fs );\n\n    this.setCamera( camera );\n\n    this.setUniformObj( {\n        position: [ 10, 10, 10 ],\n        color: [ 1.0, 1.0, 1.0 ],\n        ambientColor: [ 0.07, 0.07, 0.07 ],\n        shiness: 20.0,\n        diffuseFactor: 0.3,\n        specularFactor: 0.1,\n        isFlat: false,\n        isBlinn: true,\n        isGamma: true,\n    } );\n\n    this.deactivate();\n\n}\n\nPointlightShader.prototype = Object.assign( Object.create( Shader.prototype ), {\n\n    constructor: PointlightShader,\n\n} );\n\nObject.assign( PointlightShader, {\n\n    vs,\n    fs,\n\n} );\n\nexport { PointlightShader };\n","import { Shader } from './Shader';\nimport vs from './shadersrc/colorPoint.vs.glsl';\nimport fs from './shadersrc/colorPoint.fs.glsl';\n\nfunction ColorPointShader( gl, camera, pointSize = 5.0, color = [ 255 / 255, 105 / 255, 180 / 255, 125 / 255 ] ) {\n\n    Shader.call( this, gl, ColorPointShader.vs, ColorPointShader.fs );\n\n    this.setCamera( camera );\n    this.setPointSize( pointSize );\n\n    this.setColor( color );\n\n    this.deactivate();\n\n}\n\nColorPointShader.prototype = Object.assign( Object.create( Shader.prototype ), {\n\n    constructor: ColorPointShader,\n\n    setColor( color ) {\n\n        this.setUniformObj( { u_color: color } );\n\n        if ( color[ 3 ] !== 1 )\n            this.blend = true;\n        else\n            this.blend = false;\n\n        return this;\n\n    },\n\n    setPointSize( size ) {\n\n        this.setUniformObj( { u_pSize: size } );\n        return this;\n\n    },\n\n} );\n\nObject.assign( ColorPointShader, {\n\n    vs,\n    fs,\n\n} );\n\nexport { ColorPointShader };\n","import { Shader } from './Shader';\nimport vs from './shadersrc/phongLight.vs.glsl';\nimport fs from './shadersrc/phongLight.fs.glsl';\n\nfunction PhongLightShader( gl, camera ) {\n\n    Shader.call( this, gl, PhongLightShader.vs, PhongLightShader.fs );\n\n    this.setCamera( camera );\n\n    this.setUniformObj( {\n        position: [ 10, 10, 10 ],\n        color: [ 1.0, 1.0, 1.0 ],\n        ambientColor: [ 0.15, 0.15, 0.15 ],\n        falloff: 0.15,\n        radius: 5.0,\n        shiness: 20.0,\n        specularFactor: 0.1,\n        roughness: 0.5,\n        albedo: 0.85,\n        isFlat: false,\n        isGamma: true,\n    } );\n\n    this.deactivate();\n\n}\n\nPhongLightShader.prototype = Object.assign( Object.create( Shader.prototype ), {\n\n    constructor: PhongLightShader,\n\n} );\n\nObject.assign( PhongLightShader, {\n\n    vs,\n    fs,\n\n} );\n\nexport { PhongLightShader };\n","import { Shader } from './Shader';\nimport vs from './shadersrc/colorpick.vs.glsl';\nimport fs from './shadersrc/colorpick.fs.glsl';\n\nfunction ColorpickShader( gl, camera ) {\n\n    Shader.call( this, gl, ColorpickShader.vs, ColorpickShader.fs );\n\n    this.setCamera( camera );\n    this.setColor( [ 0.0, 0.0, 0.0 ] );\n\n    this.deactivate();\n\n}\n\nColorpickShader.prototype = Object.assign( Object.create( Shader.prototype ), {\n\n    constructor: ColorpickShader,\n\n    setColor( color ) {\n\n        this.setUniformObj( { u_color: color } );\n        return this;\n\n    },\n\n} );\n\nObject.assign( ColorpickShader, {\n\n    vs,\n    fs,\n\n} );\n\nexport { ColorpickShader };\n","import { Shader } from './Shader';\nimport vs from './shadersrc/wireframe.vs.glsl';\nimport fs from './shadersrc/wireframe.fs.glsl';\n\nfunction WireframeShader( gl, camera ) {\n\n    Shader.call( this, gl, WireframeShader.vs, WireframeShader.fs );\n    this.sampleBlend = true;\n    this.setCamera( camera );\n    this.setUniformObj( {\n        thickness: 0.5,\n        screenWidth: true,\n        stroke: [ 0 / 255, 157 / 255, 118 / 255, 1.0 ],\n        fill: [ 255 / 255, 147 / 255, 172 / 255, 0.0 ],\n        backStroke: [ 0 / 255, 88 / 255, 83 / 255, 1.0 ],\n        feather: 1.0,\n        colorBack: false,\n        noiseSmall: false,\n        noiseBig: false,\n        squeeze: false,\n        squeezeEndpoint: 0.5,\n        squeezeMiddle: 1.0,\n        dash: false,\n        dashRepeats: 10,\n        dashLength: 0.5,\n        dashOverlap: true,\n        dashAnimate: false,\n        dualStroke: false,\n        secondThickness: 0.2,\n    } );\n    this.deactivate();\n\n}\n\nWireframeShader.prototype = Object.assign( Object.create( Shader.prototype ), {\n\n    constructor: WireframeShader,\n\n    preRender() {\n\n        if ( this.currentUniformObj.stroke[ 3 ] < 1.0 || this.currentUniformObj.fill[ 3 ] < 1.0 ) {\n\n            this.sampleBlend = true;\n            this.cullFace = false;\n\n        } else {\n\n            this.sampleBlend = false;\n            this.cullFace = true;\n\n        }\n\n        Shader.prototype.preRender.call( this );\n\n    },\n\n} );\n\nObject.assign( WireframeShader, {\n\n    vs,\n    fs,\n\n} );\n\nexport { WireframeShader };\n","import { Shader } from './Shader';\nimport vs from './shadersrc/meshline.vs.glsl';\nimport fs from './shadersrc/meshline.fs.glsl';\n\nfunction MeshLineShader( gl, camera ) {\n\n    Shader.call( this, gl, MeshLineShader.vs, MeshLineShader.fs );\n\n    this.setCamera( camera );\n\n    this.setUniformObj( {\n        linewidth: 1.0,\n        color: [ 255 / 255, 105 / 255, 180 / 255, 255 / 255 ],\n        screenSize: true,\n        tile: 0.3,\n    } );\n\n    this.blend = true;\n    this.depth = false;\n\n    this.deactivate();\n\n}\n\nMeshLineShader.prototype = Object.assign( Object.create( Shader.prototype ), {\n\n    constructor: MeshLineShader,\n\n    preRender() {\n\n        this.setUniformObj( {\n            resolution: [ this.gl.drawingBufferWidth, this.gl.drawingBufferHeight ],\n            near: this.camera.near,\n            far: this.camera.far,\n        } );\n\n        Shader.prototype.preRender.call( this );\n\n    },\n\n} );\n\nObject.assign( MeshLineShader, {\n\n    vs,\n    fs,\n\n} );\n\nexport { MeshLineShader };\n","import { Shader } from './Shader';\nimport { createTransformFeedbackInfo, createTransformFeedback } from '../renderer/program';\nimport { createBufferInfoFromArrays } from '../renderer/attributes';\n\nfunction TransformShader( gl, vs, fs, transformFeedbackVaryings, transformFeedbackMode ) {\n\n    Shader.call( this, gl, vs, fs, { transformFeedbackVaryings, transformFeedbackMode } );\n\n    this.transformfeedbackInfo = createTransformFeedbackInfo( gl, this.program );\n    this._customAttrib = true;\n    this.deactivate();\n\n}\n\nTransformShader.prototype = Object.assign( Object.create( Shader.prototype ), {\n\n    constructor: TransformShader,\n\n    createBufferInfo( attribArrays ) {\n\n        Object.keys( attribArrays ).forEach( ( prop ) => {\n\n            const options = attribArrays[ prop ];\n            if ( typeof options === 'number' )\n                attribArrays[ prop ] = { data: options, drawType: this.gl.STREAM_COPY }; // eslint-disable-line\n            else if ( typeof options.drawType === 'undefined' )\n                attribArrays[ prop ].drawType = this.gl.STREAM_COPY; // eslint-disable-line\n\n        } );\n        return createBufferInfoFromArrays( this.gl, attribArrays );\n\n    },\n\n    createTransformFeedback( bufferInfo ) {\n\n        return createTransformFeedback( this.gl, this.program, this.transformfeedbackInfo, bufferInfo );\n\n    },\n\n    transform( transformFeedback, model ) {\n\n        this.gl.enable( this.gl.RASTERIZER_DISCARD );\n\n        this.activate();\n        this.gl.bindTransformFeedback( this.gl.TRANSFORM_FEEDBACK, transformFeedback );\n        this.gl.beginTransformFeedback( model.mesh.drawMode );\n        Shader.prototype.renderModel.call( this, model );\n        this.gl.endTransformFeedback();\n        this.gl.bindTransformFeedback( this.gl.TRANSFORM_FEEDBACK, null );\n\n        this.gl.disable( this.gl.RASTERIZER_DISCARD );\n\n        return this;\n\n    },\n\n} );\n\nexport { TransformShader };\n","import { Shader } from './Shader';\nimport vs from './shadersrc/gltf.vs.glsl';\nimport fs from './shadersrc/gltf.fs.glsl';\nimport { PMath } from '../math/Math';\n\nfunction GLTFShader( gl, camera ) {\n\n    Shader.call( this, gl, GLTFShader.vs, GLTFShader.fs, { validateProgram: false } );\n\n    this.setCamera( camera );\n    this.deactivate();\n    this._maxVertexAttribs = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\n}\n\nfunction getMorphTargetDefine( num ) {\n\n    return `MORPH_TARGET_NUM ${num}`;\n\n}\nconst MorphTargetNumPrefix = 'MORPH_TARGET_NUM ';\nconst HasMorphPositionDefine = 'HAS_MORPH_POSITION';\nconst HasMorphNormalDefine = 'HAS_MORPH_NORMAL';\nconst HasMorphTangentDefine = 'HAS_MORPH_TANGENT';\nconst MORPH_POSITION_PREFIX = 'a_morphPositions_';\nconst MORPH_NORMAL_PREFIX = 'a_morphNromals_';\nconst MORPH_TANGENT_PREFIX = 'a_morphTangents_';\nconst MORPH_WEIGHT_UNIFORM = 'u_morphWeights';\n\nGLTFShader.prototype = Object.assign( Object.create( Shader.prototype ), {\n\n    constructor: GLTFShader,\n\n    makeSafe( model ) {\n\n        if ( ! model.makeSafeGLTF ) {\n\n            const attribs = Object.keys( model.mesh.attribArrays );\n            if ( attribs.length > this._maxVertexAttribs ) {\n\n                const attribNum = attribs.length;\n                const defines = model.defines;\n                const morphInfo = {};\n                let morphAttribCount = 0;\n                if ( defines.indexOf( HasMorphPositionDefine ) > - 1 ) {\n\n                    morphAttribCount ++;\n                    morphInfo.morphPosition = true;\n\n                }\n                if ( defines.indexOf( HasMorphNormalDefine ) > - 1 ) {\n\n                    morphAttribCount ++;\n                    morphInfo.morphNormal = true;\n\n                }\n                if ( defines.indexOf( HasMorphTangentDefine ) > - 1 ) {\n\n                    morphAttribCount ++;\n                    morphInfo.morphTangent = true;\n\n                }\n\n                const morphDefine = ( defines.filter( define => define.startsWith( MorphTargetNumPrefix ) ) )[ 0 ];\n                defines.splice( defines.indexOf( morphDefine ), 1 );\n                const originCount = Number( morphDefine.slice( MorphTargetNumPrefix.length ) );\n\n                let morphCount = originCount;\n                let activerAttribNum = attribNum;\n                while ( activerAttribNum > this._maxVertexAttribs ) {\n\n                    morphCount --;\n                    activerAttribNum -= morphAttribCount;\n\n                }\n\n                if ( morphCount > 0 ) {\n\n                    defines.push( getMorphTargetDefine( morphCount ) );\n                    morphInfo.morphTargetNum = morphCount;\n                    morphInfo.originCount = originCount;\n\n                    morphInfo.originPositionArrays = [];\n                    morphInfo.originNormalArrays = [];\n                    morphInfo.originTangentArrays = [];\n                    for ( let i = 0; i < originCount; i ++ ) {\n\n                        if ( morphInfo.morphPosition )\n                            morphInfo.originPositionArrays.push( model.mesh.attribArrays[ MORPH_POSITION_PREFIX + i ] );\n                        if ( morphInfo.morphNormal )\n                            morphInfo.originNormalArrays.push( model.mesh.attribArrays[ MORPH_NORMAL_PREFIX + i ] );\n                        if ( morphInfo.morphTangent )\n                            morphInfo.originTangentArrays.push( model.mesh.attribArrays[ MORPH_TANGENT_PREFIX + i ] );\n\n                    }\n                    if ( morphInfo.originPositionArrays.length < 1 ) delete morphInfo.originPositionArrays;\n                    if ( morphInfo.originNormalArrays.length < 1 ) delete morphInfo.originNormalArrays;\n                    if ( morphInfo.originTangentArrays.length < 1 ) delete morphInfo.originTangentArrays;\n\n                    if ( ! model.bufferInfo ) model.createBufferInfo( this.gl );\n\n                    morphInfo.originPositionBufferInfo = [];\n                    morphInfo.originNormalBufferInfo = [];\n                    morphInfo.originTangentBufferInfo = [];\n                    const bufferInfo = model.mesh.bufferInfo.attribs;\n                    for ( let i = 0; i < morphInfo.originCount; i ++ ) {\n\n                        if ( morphInfo.morphPosition )\n                            morphInfo.originPositionBufferInfo.push( bufferInfo[ MORPH_POSITION_PREFIX + i ] );\n                        if ( morphInfo.morphNormal )\n                            morphInfo.originNormalBufferInfo.push( bufferInfo[ MORPH_NORMAL_PREFIX + i ] );\n                        if ( morphInfo.morphTangent )\n                            morphInfo.originTangentBufferInfo.push( bufferInfo[ MORPH_TANGENT_PREFIX + i ] );\n\n                    }\n                    if ( morphInfo.originPositionBufferInfo.length < 1 ) delete morphInfo.originPositionBufferInfo;\n                    if ( morphInfo.originNormalBufferInfo.length < 1 ) delete morphInfo.originNormalBufferInfo;\n                    if ( morphInfo.originTangentBufferInfo.length < 1 ) delete morphInfo.originTangentBufferInfo;\n\n\n                    model.morphInfo = morphInfo; // eslint-disable-line\n\n                }\n\n                console.warn( `model '${model.name}' use ${morphCount} morph targets instead of origin's ${originCount} morph targets, so animate maybe get strange behaver.` );\n\n            }\n\n            model.makeSafeGLTF = true; // eslint-disable-line\n\n        }\n\n        return this;\n\n    },\n\n    resortMorph: ( function () {\n\n        function compareWeight( a, b ) {\n\n            return b.weight - a.weight;\n\n        }\n\n        function compareNum( a, b ) {\n\n            return b - a;\n\n        }\n\n        return function resortMorph( model ) {\n\n            if ( model.morphInfo ) {\n\n                const morphInfo = model.morphInfo;\n                const bufferInfo = {};\n                const {\n                    lastWeight, morphTargetNum, originPositionBufferInfo, originNormalBufferInfo, originTangentBufferInfo,\n                } = morphInfo;\n                const currentWeight = model.uniformObj[ MORPH_WEIGHT_UNIFORM ];\n\n                if ( ! lastWeight || ! PMath.arrayEquals( currentWeight, lastWeight ) ) {\n\n                    morphInfo.lastWeight = currentWeight.slice();\n                    const newWeights = currentWeight.slice().sort( compareNum );\n                    const uniformObj = {};\n                    uniformObj[ MORPH_WEIGHT_UNIFORM ] = newWeights;\n                    model.setUniformObj( uniformObj );\n\n                    const weights = [];\n                    for ( let i = 0; i < currentWeight.length; i ++ ) // in case weight equals\n                        weights[ i ] = { weight: currentWeight[ i ] };\n                    const sort = weights.slice().sort( compareWeight );\n                    const origin = sort.map( w => weights.indexOf( w ) );\n                    for ( let i = 0; i < morphTargetNum; i ++ ) {\n\n                        if ( originPositionBufferInfo )\n                            bufferInfo[ MORPH_POSITION_PREFIX + i ] = originPositionBufferInfo[ origin[ i ] ];\n                        if ( originNormalBufferInfo )\n                            bufferInfo[ MORPH_NORMAL_PREFIX + i ] = originNormalBufferInfo[ origin[ i ] ];\n                        if ( originTangentBufferInfo )\n                            bufferInfo[ MORPH_TANGENT_PREFIX + i ] = originTangentBufferInfo[ origin[ i ] ];\n\n                    }\n                    model.mesh.updateBufferInfo( bufferInfo );\n\n                }\n\n            }\n\n            return this;\n\n        };\n\n    }() ),\n\n    renderModel( model ) {\n\n        if ( model.defines ) this.makeSafe( model ).resortMorph( model ).setDefines( ...model.defines );\n        return Shader.prototype.renderModel.call( this, model );\n\n    },\n\n} );\n\nObject.assign( GLTFShader, {\n\n    vs,\n    fs,\n\n} );\n\nexport { GLTFShader };\n","import { Model } from './Model';\nimport { Mesh } from './Primatives';\nimport * as Constant from '../renderer/constant';\nimport { createBufferFromArray } from '../renderer/attributes';\n\nfunction MeshLineModel( meshModel, widthCallback, name ) {\n\n    const mesh = meshModel.mesh || meshModel;\n    let array;\n    if ( mesh && mesh.attribArrays && mesh.attribArrays[ Constant.ATTRIB_POSITION_NAME ] ) {\n\n        if ( mesh.attribArrays[ Constant.ATTRIB_POSITION_NAME ].numComponents !== 3 ) {\n\n            console.error( `MeshLine need 3 dimensions points array, but received ${mesh.attribArrays[ Constant.ATTRIB_POSITION_NAME ].numComponents} dimensions array.` );\n            return null;\n\n        }\n        array = mesh.attribArrays[ Constant.ATTRIB_POSITION_NAME ].data;\n\n    } else if ( Array.isArray( mesh ) ) {\n\n        if ( mesh.length % 3 !== 0 ) {\n\n            console.error( 'MeshLine need 3 dimensions points array, but received array\\'s length divided by 3 not 0.' );\n            return null;\n\n        }\n        array = mesh;\n\n    } else {\n\n        console.error( `MeshLine need 3 dimensions points array, but received Object ${meshModel}` );\n        return null;\n\n    }\n\n    this.widthCallback = widthCallback;\n    const meshc = this.process( array, name || ( mesh.name && `${mesh.name}_Meshline` ) || 'MeshLine' );\n\n    Model.call( this, meshc );\n\n}\n\nMeshLineModel.prototype = Object.assign( Object.create( Model.prototype ), {\n\n    constructor: MeshLineModel,\n\n    comparePos( idx1, idx2 ) {\n\n        const ai = idx1 * 6;\n        const bi = idx2 * 6;\n        return ( this.positions[ ai ] === this.positions[ bi ] && this.positions[ ai + 1 ] === this.positions[ bi + 1 ] && this.positions[ ai + 2 ] === this.positions[ bi + 2 ] );\n\n    },\n\n    copyPos( idx ) {\n\n        const ai = idx * 6;\n        return [ this.positions[ ai ], this.positions[ ai + 1 ], this.positions[ ai + 2 ] ];\n\n    },\n\n    process( array, name ) {\n\n        this.positions = [];\n        this.conters = [];\n\n        for ( let i = 0; i < array.length; i += 3 ) {\n\n            const c = i / ( array.length - 3 );\n            this.positions.push( array[ i ], array[ i + 1 ], array[ i + 2 ] );\n            this.positions.push( array[ i ], array[ i + 1 ], array[ i + 2 ] );\n            this.conters.push( c );\n            this.conters.push( c );\n\n        }\n\n        const l = this.positions.length / 6;\n\n        this.previous = [];\n        this.next = [];\n        this.side = [];\n        this.width = [];\n        this.indices = [];\n        this.uv = [];\n\n        for ( let i = 0; i < l; i ++ ) {\n\n            this.side.push( 1 );\n            this.side.push( - 1 );\n\n        }\n\n        let w;\n        for ( let i = 0; i < l; i ++ ) {\n\n            if ( this.widthCallback ) w = this.widthCallback( i / l - 1 );\n            else w = 1;\n            this.width.push( w );\n            this.width.push( w );\n\n        }\n\n        for ( let i = 0; i < l; i ++ ) {\n\n            this.uv.push( i / ( l - 1 ), 0 );\n            this.uv.push( i / ( l - 1 ), 1 );\n\n        }\n\n        let v;\n        if ( this.comparePos( 0, l - 1 ) )\n            v = this.copyPos( l - 2 );\n        else\n            v = this.copyPos( 0 );\n\n        this.previous.push( v[ 0 ], v[ 1 ], v[ 2 ] );\n        this.previous.push( v[ 0 ], v[ 1 ], v[ 2 ] );\n\n        for ( let i = 0; i < l - 1; i ++ ) {\n\n            v = this.copyPos( i );\n            this.previous.push( v[ 0 ], v[ 1 ], v[ 2 ] );\n            this.previous.push( v[ 0 ], v[ 1 ], v[ 2 ] );\n\n        }\n\n        for ( let i = 1; i < l; i ++ ) {\n\n            v = this.copyPos( i );\n            this.next.push( v[ 0 ], v[ 1 ], v[ 2 ] );\n            this.next.push( v[ 0 ], v[ 1 ], v[ 2 ] );\n\n        }\n\n        if ( this.comparePos( l - 1, 0 ) )\n            v = this.copyPos( 1 );\n        else\n            v = this.copyPos( l - 1 );\n\n        this.next.push( v[ 0 ], v[ 1 ], v[ 2 ] );\n        this.next.push( v[ 0 ], v[ 1 ], v[ 2 ] );\n\n        for ( let i = 0; i < l - 1; i ++ ) {\n\n            const n = i * 2;\n            this.indices.push( n, n + 1, n + 2 );\n            this.indices.push( n + 1, n + 3, n + 2 );\n\n        }\n\n        this.positionArray = [];\n        this.positionArray.push( this.previous[ 0 ], this.previous[ 1 ], this.previous[ 2 ], 0, this.previous[ 0 ], this.previous[ 1 ], this.previous[ 2 ], 0 );\n        for ( let i = 0; i < this.positions.length / 3; i ++ )\n            this.positionArray.push( this.positions[ i * 3 ], this.positions[ i * 3 + 1 ], this.positions[ i * 3 + 2 ], this.side[ i ] );\n\n        this.positionArray.push( this.next[ this.next.length - 3 ], this.next[ this.next.length - 2 ], this.next[ this.next.length - 1 ], 0, this.next[ this.next.length - 3 ], this.next[ this.next.length - 2 ], this.next[ this.next.length - 1 ], 0 );\n\n        const attribArrays = {\n            indices: { data: this.indices },\n            a_previous: { data: this.previous, numComponents: 3, stride: 4 * Float32Array.BYTES_PER_ELEMENT },\n            a_next: {\n                data: this.next, numComponents: 3, offset: 16 * Float32Array.BYTES_PER_ELEMENT, stride: 4 * Float32Array.BYTES_PER_ELEMENT,\n            },\n            a_side: {\n                data: this.side, numComponents: 1, offset: 11 * Float32Array.BYTES_PER_ELEMENT, stride: 4 * Float32Array.BYTES_PER_ELEMENT,\n            },\n            a_width: { data: this.width, numComponents: 1 },\n            a_counters: { data: this.conters, numComponents: 1 },\n        };\n        attribArrays[ Constant.ATTRIB_POSITION_NAME ] = { data: this.positions, offset: 8 * Float32Array.BYTES_PER_ELEMENT, stride: 4 * Float32Array.BYTES_PER_ELEMENT };\n        attribArrays[ Constant.ATTRIB_UV_NAME ] = { data: this.uv };\n\n        return new Mesh( name, attribArrays );\n\n    },\n\n    createBufferInfo( gl ) {\n\n        if ( ! this.mesh.bufferInfo ) {\n\n            const positionBuffer = createBufferFromArray( gl, this.positionArray, 'position' );\n            this.mesh.attribArrays[ Constant.ATTRIB_POSITION_NAME ].buffer = positionBuffer;\n            this.mesh.attribArrays.a_previous.buffer = positionBuffer;\n            this.mesh.attribArrays.a_next.buffer = positionBuffer;\n            this.mesh.attribArrays.a_side.buffer = positionBuffer;\n\n        }\n\n        Model.prototype.createBufferInfo.call( this, gl );\n        return this;\n\n    },\n\n} );\n\nexport { MeshLineModel };\n","import { isArrayBuffer, getGLTypeFromTypedArray, getTypedArrayTypeFromGLType } from './typedArray';\nimport { isWebGL2, glEnumToString } from './utils';\n\nconst defaults = {\n    textureColor: new Uint8Array( [ 255, 105, 180, 255 ] ),\n    textureOptions: {},\n};\n\n/* PixelFormat */\nconst ALPHA = 0x1906;\nconst RGB = 0x1907;\nconst RGBA = 0x1908;\nconst LUMINANCE = 0x1909;\nconst LUMINANCE_ALPHA = 0x190A;\nconst DEPTH_COMPONENT = 0x1902;\nconst DEPTH_STENCIL = 0x84F9;\n\nconst R8 = 0x8229;\nconst R8_SNORM = 0x8F94;\nconst R16F = 0x822D;\nconst R32F = 0x822E;\nconst R8UI = 0x8232;\nconst R8I = 0x8231;\nconst RG16UI = 0x823A;\nconst RG16I = 0x8239;\nconst RG32UI = 0x823C;\nconst RG32I = 0x823B;\nconst RG8 = 0x822B;\nconst RG8_SNORM = 0x8F95;\nconst RG16F = 0x822F;\nconst RG32F = 0x8230;\nconst RG8UI = 0x8238;\nconst RG8I = 0x8237;\nconst R16UI = 0x8234;\nconst R16I = 0x8233;\nconst R32UI = 0x8236;\nconst R32I = 0x8235;\nconst RGB8 = 0x8051;\nconst SRGB8 = 0x8C41;\nconst RGB565 = 0x8D62;\nconst RGB8_SNORM = 0x8F96;\nconst R11F_G11F_B10F = 0x8C3A;\nconst RGB9_E5 = 0x8C3D;\nconst RGB16F = 0x881B;\nconst RGB32F = 0x8815;\nconst RGB8UI = 0x8D7D;\nconst RGB8I = 0x8D8F;\nconst RGB16UI = 0x8D77;\nconst RGB16I = 0x8D89;\nconst RGB32UI = 0x8D71;\nconst RGB32I = 0x8D83;\nconst RGBA8 = 0x8058;\nconst SRGB8_ALPHA8 = 0x8C43;\nconst RGBA8_SNORM = 0x8F97;\nconst RGB5_A1 = 0x8057;\nconst RGBA4 = 0x8056;\nconst RGB10_A2 = 0x8059;\nconst RGBA16F = 0x881A;\nconst RGBA32F = 0x8814;\nconst RGBA8UI = 0x8D7C;\nconst RGBA8I = 0x8D8E;\nconst RGB10_A2UI = 0x906F;\nconst RGBA16UI = 0x8D76;\nconst RGBA16I = 0x8D88;\nconst RGBA32I = 0x8D82;\nconst RGBA32UI = 0x8D70;\n\nconst DEPTH_COMPONENT16 = 0x81A5;\nconst DEPTH_COMPONENT24 = 0x81A6;\nconst DEPTH_COMPONENT32F = 0x8CAC;\nconst DEPTH32F_STENCIL8 = 0x8CAD;\nconst DEPTH24_STENCIL8 = 0x88F0;\n\n/* DataType */\nconst BYTE = 0x1400;\nconst UNSIGNED_BYTE = 0x1401;\nconst SHORT = 0x1402;\nconst UNSIGNED_SHORT = 0x1403;\nconst INT = 0x1404;\nconst UNSIGNED_INT = 0x1405;\nconst FLOAT = 0x1406;\nconst UNSIGNED_SHORT_4_4_4_4 = 0x8033;\nconst UNSIGNED_SHORT_5_5_5_1 = 0x8034;\nconst UNSIGNED_SHORT_5_6_5 = 0x8363;\nconst HALF_FLOAT = 0x140B;\nconst HALF_FLOAT_OES = 0x8D61; // Thanks Khronos for making this different >:(\nconst UNSIGNED_INT_2_10_10_10_REV = 0x8368;\nconst UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B;\nconst UNSIGNED_INT_5_9_9_9_REV = 0x8C3E;\nconst FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD;\nconst UNSIGNED_INT_24_8 = 0x84FA;\n\nconst RG = 0x8227;\nconst RG_INTEGER = 0x8228;\nconst RED = 0x1903;\nconst RED_INTEGER = 0x8D94;\nconst RGB_INTEGER = 0x8D98;\nconst RGBA_INTEGER = 0x8D99;\n\nconst textureInternalFormatInfo = {};\n{\n\n    // NOTE: these properties need unique names so we can let Uglify mangle the name.\n    const t = textureInternalFormatInfo;\n    // unsized formats\n    t[ ALPHA ] = {\n        textureFormat: ALPHA, colorRenderable: true, textureFilterable: true, bytesPerElement: [ 1, 2, 2, 4 ], type: [ UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT ],\n    };\n    t[ LUMINANCE ] = {\n        textureFormat: LUMINANCE, colorRenderable: true, textureFilterable: true, bytesPerElement: [ 1, 2, 2, 4 ], type: [ UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT ],\n    };\n    t[ LUMINANCE_ALPHA ] = {\n        textureFormat: LUMINANCE_ALPHA, colorRenderable: true, textureFilterable: true, bytesPerElement: [ 2, 4, 4, 8 ], type: [ UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT ],\n    };\n    t[ RGB ] = {\n        textureFormat: RGB, colorRenderable: true, textureFilterable: true, bytesPerElement: [ 3, 6, 6, 12, 2 ], type: [ UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT, UNSIGNED_SHORT_5_6_5 ],\n    };\n    t[ RGBA ] = {\n        textureFormat: RGBA, colorRenderable: true, textureFilterable: true, bytesPerElement: [ 4, 8, 8, 16, 2, 2 ], type: [ UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT, UNSIGNED_SHORT_4_4_4_4, UNSIGNED_SHORT_5_5_5_1 ],\n    };\n\n    // sized formats\n    t[ R8 ] = {\n        textureFormat: RED, colorRenderable: true, textureFilterable: true, bytesPerElement: 1, type: UNSIGNED_BYTE,\n    };\n    t[ R8_SNORM ] = {\n        textureFormat: RED, colorRenderable: false, textureFilterable: true, bytesPerElement: 1, type: BYTE,\n    };\n    t[ R16F ] = {\n        textureFormat: RED, colorRenderable: false, textureFilterable: true, bytesPerElement: [ 4, 2 ], type: [ FLOAT, HALF_FLOAT ],\n    };\n    t[ R32F ] = {\n        textureFormat: RED, colorRenderable: false, textureFilterable: false, bytesPerElement: 4, type: FLOAT,\n    };\n    t[ R8UI ] = {\n        textureFormat: RED_INTEGER, colorRenderable: true, textureFilterable: false, bytesPerElement: 1, type: UNSIGNED_BYTE,\n    };\n    t[ R8I ] = {\n        textureFormat: RED_INTEGER, colorRenderable: true, textureFilterable: false, bytesPerElement: 1, type: BYTE,\n    };\n    t[ R16UI ] = {\n        textureFormat: RED_INTEGER, colorRenderable: true, textureFilterable: false, bytesPerElement: 2, type: UNSIGNED_SHORT,\n    };\n    t[ R16I ] = {\n        textureFormat: RED_INTEGER, colorRenderable: true, textureFilterable: false, bytesPerElement: 2, type: SHORT,\n    };\n    t[ R32UI ] = {\n        textureFormat: RED_INTEGER, colorRenderable: true, textureFilterable: false, bytesPerElement: 4, type: UNSIGNED_INT,\n    };\n    t[ R32I ] = {\n        textureFormat: RED_INTEGER, colorRenderable: true, textureFilterable: false, bytesPerElement: 4, type: INT,\n    };\n    t[ RG8 ] = {\n        textureFormat: RG, colorRenderable: true, textureFilterable: true, bytesPerElement: 2, type: UNSIGNED_BYTE,\n    };\n    t[ RG8_SNORM ] = {\n        textureFormat: RG, colorRenderable: false, textureFilterable: true, bytesPerElement: 2, type: BYTE,\n    };\n    t[ RG16F ] = {\n        textureFormat: RG, colorRenderable: false, textureFilterable: true, bytesPerElement: [ 8, 4 ], type: [ FLOAT, HALF_FLOAT ],\n    };\n    t[ RG32F ] = {\n        textureFormat: RG, colorRenderable: false, textureFilterable: false, bytesPerElement: 8, type: FLOAT,\n    };\n    t[ RG8UI ] = {\n        textureFormat: RG_INTEGER, colorRenderable: true, textureFilterable: false, bytesPerElement: 2, type: UNSIGNED_BYTE,\n    };\n    t[ RG8I ] = {\n        textureFormat: RG_INTEGER, colorRenderable: true, textureFilterable: false, bytesPerElement: 2, type: BYTE,\n    };\n    t[ RG16UI ] = {\n        textureFormat: RG_INTEGER, colorRenderable: true, textureFilterable: false, bytesPerElement: 4, type: UNSIGNED_SHORT,\n    };\n    t[ RG16I ] = {\n        textureFormat: RG_INTEGER, colorRenderable: true, textureFilterable: false, bytesPerElement: 4, type: SHORT,\n    };\n    t[ RG32UI ] = {\n        textureFormat: RG_INTEGER, colorRenderable: true, textureFilterable: false, bytesPerElement: 8, type: UNSIGNED_INT,\n    };\n    t[ RG32I ] = {\n        textureFormat: RG_INTEGER, colorRenderable: true, textureFilterable: false, bytesPerElement: 8, type: INT,\n    };\n    t[ RGB8 ] = {\n        textureFormat: RGB, colorRenderable: true, textureFilterable: true, bytesPerElement: 3, type: UNSIGNED_BYTE,\n    };\n    t[ SRGB8 ] = {\n        textureFormat: RGB, colorRenderable: false, textureFilterable: true, bytesPerElement: 3, type: UNSIGNED_BYTE,\n    };\n    t[ RGB565 ] = {\n        textureFormat: RGB, colorRenderable: true, textureFilterable: true, bytesPerElement: [ 3, 2 ], type: [ UNSIGNED_BYTE, UNSIGNED_SHORT_5_6_5 ],\n    };\n    t[ RGB8_SNORM ] = {\n        textureFormat: RGB, colorRenderable: false, textureFilterable: true, bytesPerElement: 3, type: BYTE,\n    };\n    t[ R11F_G11F_B10F ] = {\n        textureFormat: RGB, colorRenderable: false, textureFilterable: true, bytesPerElement: [ 12, 6, 4 ], type: [ FLOAT, HALF_FLOAT, UNSIGNED_INT_10F_11F_11F_REV ],\n    };\n    t[ RGB9_E5 ] = {\n        textureFormat: RGB, colorRenderable: false, textureFilterable: true, bytesPerElement: [ 12, 6, 4 ], type: [ FLOAT, HALF_FLOAT, UNSIGNED_INT_5_9_9_9_REV ],\n    };\n    t[ RGB16F ] = {\n        textureFormat: RGB, colorRenderable: false, textureFilterable: true, bytesPerElement: [ 12, 6 ], type: [ FLOAT, HALF_FLOAT ],\n    };\n    t[ RGB32F ] = {\n        textureFormat: RGB, colorRenderable: false, textureFilterable: false, bytesPerElement: 12, type: FLOAT,\n    };\n    t[ RGB8UI ] = {\n        textureFormat: RGB_INTEGER, colorRenderable: false, textureFilterable: false, bytesPerElement: 3, type: UNSIGNED_BYTE,\n    };\n    t[ RGB8I ] = {\n        textureFormat: RGB_INTEGER, colorRenderable: false, textureFilterable: false, bytesPerElement: 3, type: BYTE,\n    };\n    t[ RGB16UI ] = {\n        textureFormat: RGB_INTEGER, colorRenderable: false, textureFilterable: false, bytesPerElement: 6, type: UNSIGNED_SHORT,\n    };\n    t[ RGB16I ] = {\n        textureFormat: RGB_INTEGER, colorRenderable: false, textureFilterable: false, bytesPerElement: 6, type: SHORT,\n    };\n    t[ RGB32UI ] = {\n        textureFormat: RGB_INTEGER, colorRenderable: false, textureFilterable: false, bytesPerElement: 12, type: UNSIGNED_INT,\n    };\n    t[ RGB32I ] = {\n        textureFormat: RGB_INTEGER, colorRenderable: false, textureFilterable: false, bytesPerElement: 12, type: INT,\n    };\n    t[ RGBA8 ] = {\n        textureFormat: RGBA, colorRenderable: true, textureFilterable: true, bytesPerElement: 4, type: UNSIGNED_BYTE,\n    };\n    t[ SRGB8_ALPHA8 ] = {\n        textureFormat: RGBA, colorRenderable: true, textureFilterable: true, bytesPerElement: 4, type: UNSIGNED_BYTE,\n    };\n    t[ RGBA8_SNORM ] = {\n        textureFormat: RGBA, colorRenderable: false, textureFilterable: true, bytesPerElement: 4, type: BYTE,\n    };\n    t[ RGB5_A1 ] = {\n        textureFormat: RGBA, colorRenderable: true, textureFilterable: true, bytesPerElement: [ 4, 2, 4 ], type: [ UNSIGNED_BYTE, UNSIGNED_SHORT_5_5_5_1, UNSIGNED_INT_2_10_10_10_REV ],\n    };\n    t[ RGBA4 ] = {\n        textureFormat: RGBA, colorRenderable: true, textureFilterable: true, bytesPerElement: [ 4, 2 ], type: [ UNSIGNED_BYTE, UNSIGNED_SHORT_4_4_4_4 ],\n    };\n    t[ RGB10_A2 ] = {\n        textureFormat: RGBA, colorRenderable: true, textureFilterable: true, bytesPerElement: 4, type: UNSIGNED_INT_2_10_10_10_REV,\n    };\n    t[ RGBA16F ] = {\n        textureFormat: RGBA, colorRenderable: false, textureFilterable: true, bytesPerElement: [ 16, 8 ], type: [ FLOAT, HALF_FLOAT ],\n    };\n    t[ RGBA32F ] = {\n        textureFormat: RGBA, colorRenderable: false, textureFilterable: false, bytesPerElement: 16, type: FLOAT,\n    };\n    t[ RGBA8UI ] = {\n        textureFormat: RGBA_INTEGER, colorRenderable: true, textureFilterable: false, bytesPerElement: 4, type: UNSIGNED_BYTE,\n    };\n    t[ RGBA8I ] = {\n        textureFormat: RGBA_INTEGER, colorRenderable: true, textureFilterable: false, bytesPerElement: 4, type: BYTE,\n    };\n    t[ RGB10_A2UI ] = {\n        textureFormat: RGBA_INTEGER, colorRenderable: true, textureFilterable: false, bytesPerElement: 4, type: UNSIGNED_INT_2_10_10_10_REV,\n    };\n    t[ RGBA16UI ] = {\n        textureFormat: RGBA_INTEGER, colorRenderable: true, textureFilterable: false, bytesPerElement: 8, type: UNSIGNED_SHORT,\n    };\n    t[ RGBA16I ] = {\n        textureFormat: RGBA_INTEGER, colorRenderable: true, textureFilterable: false, bytesPerElement: 8, type: SHORT,\n    };\n    t[ RGBA32I ] = {\n        textureFormat: RGBA_INTEGER, colorRenderable: true, textureFilterable: false, bytesPerElement: 16, type: INT,\n    };\n    t[ RGBA32UI ] = {\n        textureFormat: RGBA_INTEGER, colorRenderable: true, textureFilterable: false, bytesPerElement: 16, type: UNSIGNED_INT,\n    };\n    // Sized Internal\n    t[ DEPTH_COMPONENT16 ] = {\n        textureFormat: DEPTH_COMPONENT, colorRenderable: true, textureFilterable: false, bytesPerElement: [ 2, 4 ], type: [ UNSIGNED_SHORT, UNSIGNED_INT ],\n    };\n    t[ DEPTH_COMPONENT24 ] = {\n        textureFormat: DEPTH_COMPONENT, colorRenderable: true, textureFilterable: false, bytesPerElement: 4, type: UNSIGNED_INT,\n    };\n    t[ DEPTH_COMPONENT32F ] = {\n        textureFormat: DEPTH_COMPONENT, colorRenderable: true, textureFilterable: false, bytesPerElement: 4, type: FLOAT,\n    };\n    t[ DEPTH24_STENCIL8 ] = {\n        textureFormat: DEPTH_STENCIL, colorRenderable: true, textureFilterable: false, bytesPerElement: 4, type: UNSIGNED_INT_24_8,\n    };\n    t[ DEPTH32F_STENCIL8 ] = {\n        textureFormat: DEPTH_STENCIL, colorRenderable: true, textureFilterable: false, bytesPerElement: 4, type: FLOAT_32_UNSIGNED_INT_24_8_REV,\n    };\n\n    Object.keys( t ).forEach( ( internalFormat ) => {\n\n        const info = t[ internalFormat ];\n        info.bytesPerElementMap = {};\n        if ( Array.isArray( info.bytesPerElement ) )\n            info.bytesPerElement.forEach( ( bytesPerElement, ndx ) => {\n\n                const type = info.type[ ndx ];\n                info.bytesPerElementMap[ type ] = bytesPerElement;\n\n            } );\n        else {\n\n            const { type } = info;\n            info.bytesPerElementMap[ type ] = info.bytesPerElement;\n\n        }\n\n    } );\n\n}\n\nfunction empty() {\n}\n\nfunction getFormatAndTypeFromInternalFormat( internalFromat ) {\n\n    const info = textureInternalFormatInfo[ internalFromat ];\n\n    if ( ! info )\n        throw new Error( 'unknown internal format' );\n\n\n    return {\n        format: info.textureFormat,\n        type: Array.isArray( info.type ) ? info.type[ 0 ] : info.type,\n    };\n\n}\n\nfunction make1Pixel( color ) {\n\n    const colorUsed = color || defaults.textureColor;\n    if ( isArrayBuffer( colorUsed ) ) return colorUsed;\n    return new Uint8Array( [ colorUsed[ 0 ], colorUsed[ 1 ], colorUsed[ 2 ], colorUsed[ 3 ] ] );\n\n}\n\nfunction setTextureTo1PixelColor( gl, tex, options ) {\n\n    const opts = options || defaults.textureOptions;\n    const target = opts.target || gl.TEXTURE_2D;\n    gl.bindTexture( target, tex );\n    if ( opts.color === false ) return;\n\n    const color = make1Pixel( options.color );\n    if ( target === gl.TEXTURE_CUBE_MAP )\n        for ( let i = 0; i < 6; i ++ )\n            gl.texImage2D( gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, color );\n    else if ( target === gl.TEXTURE_3D || target === gl.TEXTURE_2D_ARRAY )\n        gl.texImage3D( target, 0, gl.RGBA, 1, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, color );\n    else\n        gl.texImage2D( target, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, color );\n\n}\n\nconst getDefaultCrossOrigin = ( function () {\n\n    const expression = /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)?/gi; // eslint-disable-line\n    const regex = new RegExp( expression );\n\n    return function getDefaultCrossOrigin( url ) { // eslint-disable-line\n\n        if ( url.match( regex ) && ( new URL( url ) ).origin !== window.location.origin )\n            return 'anonymous';\n\n        return undefined;\n\n    };\n\n}() );\n\nfunction loadImage( url, crossOrigin, callback ) {\n\n    const cb = callback || empty;\n    let img = new Image();\n    const cors = crossOrigin !== undefined ? crossOrigin : getDefaultCrossOrigin( url );\n    if ( cors !== undefined )\n        img.crossOrigin = cors;\n\n\n    function clearEventHandlers() {\n\n        img.removeEventListener( 'error', onError ); // eslint-disable-line\n        img.removeEventListener( 'load', onLoad ); // eslint-disable-line\n        img = null;\n\n    }\n\n    function onError() {\n\n        const msg = `couldn't load image: ${url}`;\n        cb( msg, img );\n        clearEventHandlers();\n\n    }\n\n    function onLoad() {\n\n        cb( null, img );\n        clearEventHandlers();\n\n    }\n\n    img.addEventListener( 'error', onError );\n    img.addEventListener( 'load', onLoad );\n    img.src = url;\n    return img;\n\n}\n\nconst lastPackState = {};\n\nfunction savePatcState( gl, options ) {\n\n    if ( options.colorspaceConversion !== undefined ) {\n\n        lastPackState.colorspaceConversion = gl.getParameter( gl.UNPACK_COLORSPACE_CONVERSION_WEBGL );\n        gl.pixelStorei( gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, options.colorspaceConversion );\n\n    }\n    if ( options.premultiplyAlpha !== undefined ) {\n\n        lastPackState.premultiplyAlpha = gl.getParameter( gl.UNPACH_PREMULTIPLY_ALPHA_WEBGL );\n        gl.pixelStorei( gl.UNPACH_PREMULTIPLY_ALPHA_WEBGL, options.premultiplyAlpha );\n\n    }\n    if ( options.flipY !== undefined ) {\n\n        lastPackState.flipY = gl.getParameter( gl.UNPACK_FLIP_Y_WEBGL );\n        gl.pixelStorei( gl.UNPACK_FLIP_Y_WEBGL, options.flipY );\n\n    }\n\n}\n\nfunction restorePackState( gl, options ) {\n\n    if ( options.colorspaceConversion !== undefined )\n        gl.pixelStorei( gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, lastPackState.colorspaceConversion );\n    if ( options.premultiplyAlpha !== undefined )\n        gl.pixelStorei( gl.UNPACH_PREMULTIPLY_ALPHA_WEBGL, lastPackState.premultiplyAlpha );\n    if ( options.flipY !== undefined )\n        gl.pixelStorei( gl.UNPACK_FLIP_Y_WEBGL, lastPackState.flipY );\n\n}\n\nfunction getCubeFacesOrder( gl, options ) {\n\n    const opts = options || {};\n    return opts.cubeFaceOrder || [\n        gl.TEXTURE_CUBE_MAP_POSITIVE_X,\n        gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\n        gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\n        gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\n        gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\n        gl.TEXTURE_CUBE_MAP_NEGATIVE_Z,\n    ];\n\n}\n\nfunction getCubeFacesWithIdx( gl, options ) {\n\n    const faces = getCubeFacesOrder( gl, options );\n\n    const facesWithIdx = faces.map( ( face, idx ) => ( { face, idx } ) );\n\n    facesWithIdx.sort( ( a, b ) => ( a.face - b.face ) );\n\n    return facesWithIdx;\n\n}\n\nfunction shouldAutoSetTextureFiltering( options ) {\n\n    return options.auto === true || ( options.auto === undefined && options.level === undefined );\n\n}\n\nfunction isPowerOf2( value ) {\n\n    return ( value & ( value - 1 ) ) === 0;\n\n}\n\nfunction canGenerateMipmap( gl, width, height, internalFormat ) {\n\n    if ( ! isWebGL2( gl ) )\n        return isPowerOf2( width ) && isPowerOf2( height );\n\n    const info = textureInternalFormatInfo[ internalFormat ];\n    if ( ! info )\n        throw new Error( 'unknown internal format' );\n    return info.colorRenderable && info.textureFilterable;\n\n}\n\nfunction canFilter( internalFormat ) {\n\n    const info = textureInternalFormatInfo[ internalFormat ];\n    if ( ! info )\n        throw new Error( 'unknow internal format' );\n\n    return info.textureFilterable;\n\n}\n\nfunction setTextureFiltering( gl, tex, options, widthP, heightP, internalFormatP, typeP ) {\n\n    const opts = options || defaults.textureOptions;\n    const internalFormat = internalFormatP || gl.RGBA;\n    const type = typeP || gl.UNSIGNED_SHORT;\n    const target = opts.target || gl.TEXTURE_2D;\n    const width = widthP || opts.width;\n    const height = heightP || opts.height;\n    gl.bindTexture( target, tex );\n    if ( canGenerateMipmap( gl, width, height, internalFormat, type ) )\n        gl.generateMipmap( target );\n    else {\n\n        const filtering = canFilter( internalFormat ) ? gl.LINEAR : gl.NEAREST;\n        gl.texParameteri( target, gl.TEXTURE_MIN_FILTER, filtering );\n        gl.texParameteri( target, gl.TEXTURE_MAG_FILTER, filtering );\n        gl.texParameteri( target, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\n        gl.texParameteri( target, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\n\n    }\n\n}\n\nconst WebGLSamplerCtor = window.WebGLSampler || function NoWebGLSampler() {};\n\nfunction setTextureSamplerParameters( gl, target, parameteriFn, options ) {\n\n    if ( options.minMag ) {\n\n        parameteriFn.call( gl, target, gl.TEXTURE_MIN_FILTER, options.minMag );\n        parameteriFn.call( gl, target, gl.TEXTURE_MAG_FILTER, options.minMag );\n\n    }\n\n    if ( options.min )\n        parameteriFn.call( gl, target, gl.TEXTURE_MIN_FILTER, options.min );\n\n    if ( options.mag )\n        parameteriFn.call( gl, target, gl.TEXTURE_MAG_FILTER, options.mag );\n\n    if ( options.wrap ) {\n\n        parameteriFn.call( gl, target, gl.TEXTURE_WRAP_S, options.wrap );\n        parameteriFn.call( gl, target, gl.TEXTURE_WRAP_T, options.wrap );\n        if ( target === gl.TEXTURE_3D || target instanceof WebGLSamplerCtor )\n            parameteriFn.call( gl, target, gl.TEXTURE_WRAP_R, options.wrap );\n\n    }\n\n    if ( options.wrapR )\n        parameteriFn.call( gl, target, gl.TEXTURE_WRAP_R, options.wrapR );\n\n    if ( options.wrapS )\n        parameteriFn.call( gl, target, gl.TEXTURE_WRAP_S, options.wrapS );\n\n    if ( options.wrapT )\n        parameteriFn.call( gl, target, gl.TEXTURE_WRAP_T, options.wrapT );\n\n    if ( options.minLod )\n        parameteriFn.call( gl, target, gl.TEXTURE_MIN_LOD, options.minLod );\n\n    if ( options.maxLod )\n        parameteriFn.call( gl, target, gl.TEXTURE_MAX_LOD, options.maxLod );\n\n    if ( options.baseLevel )\n        parameteriFn.call( gl, target, gl.TEXTURE_BASE_LEVEL, options.baseLevel );\n\n    if ( options.maxLevel )\n        parameteriFn.call( gl, target, gl.TEXTURE_MAX_LEVEL, options.maxLevel );\n\n}\n\nfunction setTextureParameters( gl, tex, options ) {\n\n    const target = options.target || gl.TEXTURE_2D;\n    gl.bindTexture( target, tex );\n    setTextureSamplerParameters( gl, target, gl.texParameteri, options );\n\n}\n\nconst ctx = document.createElement( 'canvas' ).getContext( '2d' );\n\nfunction setTextureFromElement( gl, tex, element, options ) {\n\n    const opts = options || defaults.textureOptions;\n    const target = opts.target || gl.TEXTURE_2D;\n    const level = opts.level || 0;\n    let { width, height } = element;\n    const internalFormat = opts.internalFormat || opts.format || gl.RGBA;\n    const formatType = getFormatAndTypeFromInternalFormat( internalFormat );\n    const format = opts.format || formatType.format;\n    const type = opts.type || formatType.type;\n\n    savePatcState( gl, opts );\n    gl.bindTexture( target, tex );\n    if ( target === gl.TEXTURE_CUBE_MAP ) {\n\n        const imgWidth = element.width;\n        const imgHeight = element.height;\n        let size;\n        let slices;\n        if ( imgWidth / 6 === imgHeight ) {\n\n            size = imgHeight;\n            slices = [ 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5, 0 ];\n\n        } else if ( imgHeight / 6 === imgWidth ) {\n\n            size = imgWidth;\n            slices = [ 0, 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5 ];\n\n        } else if ( imgWidth / 3 === imgHeight / 2 ) {\n\n            size = imgWidth / 3;\n            slices = [ 0, 0, 1, 0, 2, 0, 0, 1, 1, 1, 2, 1 ];\n\n        } else if ( imgWidth / 2 === imgHeight / 3 ) {\n\n            size = imgWidth / 2;\n            slices = [ 0, 0, 1, 0, 0, 1, 1, 1, 0, 2, 1, 2 ];\n\n        } else\n            throw new Error( `can't guess cube map from element: ${element.src ? element.src : element.nodeName}` );\n\n        ctx.canvas.width = size;\n        ctx.canvas.height = size;\n        width = size;\n        height = size;\n\n        getCubeFacesWithIdx( gl, options ).forEach( ( f ) => {\n\n            const xOffset = slices[ ( f.idx * 2 ) + 0 ] * size;\n            const yOffset = slices[ ( f.idx * 2 ) + 1 ] * size;\n            ctx.drawImage( element, xOffset, yOffset, size, size, 0, 0, size, size );\n            gl.texImage2D( f.face, level, internalFormat, format, type, ctx.canvas );\n\n        } );\n\n        ctx.canvas.width = 1;\n        ctx.canvas.height = 1;\n\n    } else if ( target === gl.TEXTURE_3D ) {\n\n        const smallest = Math.min( element.width, element, height );\n        const largest = Math.max( element.width, element.height );\n        const depth = largest / smallest;\n        if ( depth % 1 !== 0 )\n            throw new Error( 'can not compute TEXTURE_3D dimensions of element' );\n\n        const xMult = element.width === largest ? 1 : 0;\n        const yMult = element.height === largest ? 1 : 0;\n        gl.texImage3D( target, level, internalFormat, smallest, smallest, smallest, 0, format, type, null );\n        ctx.canvas.width = smallest;\n        ctx.canvas.height = smallest;\n        for ( let d = 0; d < depth; d ++ ) {\n\n            const srcX = d * smallest * xMult;\n            const srcY = d * smallest * yMult;\n            const srcW = smallest;\n            const srcH = smallest;\n            const dstX = 0;\n            const dstY = 0;\n            const dstW = smallest;\n            const dstH = smallest;\n            ctx.drawImage( element, srcX, srcY, srcW, srcH, dstX, dstY, dstW, dstH );\n            gl.texSubImage3D( target, level, 0, 0, d, smallest, smallest, 1, format, type, ctx.canvas );\n\n        }\n\n        ctx.canvas.width = 1;\n        ctx.canvas.height = 1;\n\n    } else\n        gl.texImage2D( target, level, internalFormat, format, type, element );\n\n    restorePackState( gl, options );\n\n    if ( shouldAutoSetTextureFiltering( opts ) )\n        setTextureFiltering( gl, tex, options, width, height, internalFormat, type );\n\n    setTextureParameters( gl, tex, options );\n    return tex;\n\n}\n\nfunction loadTextureFromUrl( gl, tex, options, callback ) {\n\n    const cb = callback || empty;\n    const opts = options || defaults.textureOptions;\n    setTextureTo1PixelColor( gl, tex, opts );\n    const asyncOpts = Object.assign( {}, opts );\n    const img = loadImage( opts.src, asyncOpts.crossOrigin, ( err, imgBK ) => {\n\n        if ( err )\n            cb( err, tex, img );\n        else {\n\n            setTextureFromElement( gl, tex, imgBK, asyncOpts );\n            cb( null, tex, imgBK );\n\n        }\n\n    } );\n    return img;\n\n}\n\nfunction getTextureTypeFromArrayType( gl, src, defaultType ) {\n\n    if ( isArrayBuffer( src ) )\n        return getGLTypeFromTypedArray( src );\n\n\n    return defaultType || gl.UNSIGNED_BYTE;\n\n}\n\nfunction getBytesPerElementForInternalFromat( internalFromat, type ) {\n\n    const info = textureInternalFormatInfo[ internalFromat ];\n    if ( ! info )\n        throw new Error( 'unknown internal format' );\n    const bytesPerElement = info.bytesPerElementMap[ type ];\n    if ( bytesPerElement === undefined )\n        throw new Error( 'unknown internal format' );\n    return bytesPerElement;\n\n}\n\nfunction guessDimensions( gl, target, width, height, numElements ) {\n\n    if ( numElements % 1 !== 0 )\n        throw new Error( 'can\\'t guess dimensions' );\n\n    let cWith;\n    let cHeight;\n    if ( ! width && ! height ) {\n\n        const size = Math.sqrt( numElements / ( target === gl.TEXTURE_CUBE_MAP ? 6 : 1 ) );\n        if ( size % 1 === 0 ) {\n\n            cWith = size;\n            cHeight = size;\n\n        } else {\n\n            cWith = numElements;\n            cHeight = 1;\n\n        }\n\n    } else if ( ! height ) {\n\n        cHeight = numElements / width;\n        if ( cHeight % 1 )\n            throw new Error( 'can\\'t guess dimensions' );\n\n    } else if ( ! width ) {\n\n        cWith = numElements / height;\n        if ( cWith % 1 )\n            throw new Error( 'can\\'t guess dimensions' );\n\n    }\n\n    return {\n        width: cWith,\n        height: cHeight,\n    };\n\n}\n\nfunction setTextureFromArray( gl, tex, src, options ) {\n\n    const opts = options || defaults.textureOptions;\n    const target = opts.target || gl.TEXTURE_2D;\n    gl.bindTexture( target, tex );\n    let { width, height, depth } = opts;\n    const level = opts.level || 0;\n    const internalFromat = opts.internalFormat || opts.format || gl.RGBA;\n    const formatType = getFormatAndTypeFromInternalFormat( internalFromat );\n    const format = opts.format || formatType.format;\n    const type = opts.format || getTextureTypeFromArrayType( gl, src, formatType.type );\n    let typedSrc = src;\n    if ( ! isArrayBuffer( typedSrc ) ) {\n\n        const Type = getTypedArrayTypeFromGLType( type );\n        typedSrc = new Type( src );\n\n    } else if ( typedSrc instanceof Uint8ClampedArray )\n        typedSrc = new Uint8Array( typedSrc.buffer );\n\n    const bytesPerElement = getBytesPerElementForInternalFromat( internalFromat, type );\n    const numElements = typedSrc.byteLength / bytesPerElement;\n    if ( numElements % 1 )\n        throw new Error( `length wrong for format: ${glEnumToString( gl, format )}` );\n\n    let dimensions;\n    if ( target === gl.TEXTURE_3D )\n        if ( ! width && ! height && ! depth ) {\n\n            const size = Math.cbrt( numElements );\n            if ( size % 1 !== 0 )\n                throw new Error( `can't guess size of array of numElements: ${numElements}` );\n            width = size;\n            height = size;\n            depth = size;\n\n        } else if ( width && ( ! height || ! depth ) ) {\n\n            dimensions = guessDimensions( gl, target, height, depth, numElements / width );\n            height = dimensions.width;\n            depth = dimensions.height;\n\n        } else if ( height && ( ! width || ! depth ) ) {\n\n            dimensions = guessDimensions( gl, target, width, depth, numElements / height );\n            width = dimensions.width;\n            depth = dimensions.height;\n\n        } else {\n\n            dimensions = guessDimensions( gl, target, width, height, numElements / depth );\n            width = dimensions.width;\n            height = dimensions.height;\n\n        }\n    else {\n\n        dimensions = guessDimensions( gl, target, width, height, numElements );\n        width = dimensions.width;\n        height = dimensions.height;\n\n    }\n\n\n    gl.pixelStorei( gl.UNPACK_ALIGNMENT, opts.unpackAlignment || 1 );\n    savePatcState( gl, options );\n    if ( target === gl.TEXTURE_CUBE_MAP ) {\n\n        const elementsPerElement = bytesPerElement / typedSrc.BYTES_PER_ELEMENT;\n        const faceSize = ( numElements / 6 ) * elementsPerElement;\n\n        getCubeFacesWithIdx( gl, options ).forEach( ( f ) => {\n\n            const offset = faceSize * f.idx;\n            const data = typedSrc.subarray( offset, offset + faceSize );\n            gl.texImage2D( f.face, level, internalFromat, width, height, 0, format, type, data );\n\n        } );\n\n    } else if ( target === gl.TEXTURE_3D )\n        gl.texImage3D( target, level, internalFromat, width, height, depth, 0, format, type, typedSrc );\n    else\n        gl.texImage2D( target, level, internalFromat, width, height, 0, format, type, typedSrc );\n\n\n    restorePackState( gl, options );\n    return {\n        width,\n        height,\n        depth,\n        type,\n    };\n\n}\n\nfunction loadCubeMapFromUrls( gl, tex, options, callback ) {\n\n    const cb = callback || empty;\n    const urls = options.src;\n    if ( urls.length !== 6 )\n        throw new Error( 'there must be 6 urls for a cubemap' );\n    const level = options.level || 0;\n    const internalFromat = options.internalFormat || options.format || gl.RGBA;\n    const formatType = getFormatAndTypeFromInternalFormat( internalFromat );\n    const format = options.format || formatType.format;\n    const type = options.type || gl.UNSIGNED_BYTE;\n    const target = options.target || gl.TEXTURE_2D;\n    if ( target !== gl.TEXTURE_CUBE_MAP )\n        throw new Error( 'target must be TEXTURE_CUBE_MAP' );\n\n    setTextureTo1PixelColor( gl, tex, options );\n\n    const opts = Object.assign( {}, options );\n    let numToLoad = 6;\n    const errors = [];\n    const faces = getCubeFacesOrder( gl, opts );\n    let imgs;\n\n    function uploadImg( faceTarget ) {\n\n        return function ( err, img ) {\n\n            numToLoad -= 1;\n            if ( err )\n                errors.push( err );\n            else {\n\n                savePatcState( gl, opts );\n                gl.bindTexture( target, tex );\n                if ( numToLoad === 5 )\n                    getCubeFacesOrder( gl ).forEach( ( otherTarget ) => {\n\n                        gl.texImage2D( otherTarget, level, internalFromat, format, type, img );\n\n                    } );\n                else\n                    gl.texImage2D( faceTarget, level, internalFromat, format, type, img );\n\n                restorePackState( gl, opts );\n                if ( shouldAutoSetTextureFiltering( opts ) )\n                    gl.generateMipmap( target );\n\n            }\n\n            if ( numToLoad === 0 )\n                cb( errors.length ? errors : undefined, imgs, tex );\n\n        };\n\n    }\n\n    imgs = urls.map( ( url, idx ) => loadImage( url, opts.crossOrigin, uploadImg( faces[ idx ] ) ) );\n\n}\n\nfunction loadSlicesFromUrls( gl, tex, options, callback ) {\n\n    const cb = callback || empty;\n    const urls = options.src;\n    const internalFromat = options.internalFormat || options.format || gl.RGBA;\n    const formatType = getFormatAndTypeFromInternalFormat( internalFromat );\n    const format = options.format || formatType.format;\n    const type = options.type || gl.UNSIGNED_BYTE;\n    const target = options.target || gl.TEXTURE_2D_ARRAY;\n    if ( target !== gl.TEXTURE_3D && target !== gl.TEXTURE_2D_ARRAY )\n        throw new Error( 'target must be TEXTURE_3D or TEXTURE_2D_ARRAY' );\n\n    setTextureTo1PixelColor( gl, tex, options );\n\n    const opts = Object.assign( {}, options );\n    let numToLoad = urls.length;\n    const errors = [];\n    let imgs;\n    const level = opts.level || 0;\n    let width = opts.width;\n    let height = opts.height;\n    const depth = urls.length;\n    let firstImage = true;\n\n    function uploadImg( slice ) {\n\n        return function ( err, img ) {\n\n            numToLoad -= 1;\n            if ( err )\n                errors.push( err );\n            else {\n\n                savePatcState( gl, opts );\n                gl.bindTexture( target, tex );\n\n                if ( firstImage ) {\n\n                    firstImage = false;\n                    width = opts.width || img.width;\n                    height = opts.width || img.width;\n                    gl.texImage3D( target, level, internalFromat, width, height, depth, 0, format, type, null );\n\n                    for ( let s = 0; s < depth; s ++ )\n                        gl.texSubImage3D( target, level, 0, 0, s, width, height, 1, format, type, img );\n\n                } else {\n\n                    let src = img;\n                    if ( img.width !== width || img.height !== height ) {\n\n                        src = ctx.canvas;\n                        ctx.canvas.width = width;\n                        ctx.canvas.height = height;\n                        ctx.drawImage( img, 0, 0, width, height );\n\n                    }\n\n                    gl.texSubImage3D( target, level, 0, 0, slice, width, height, 1, format, type, src );\n\n                    if ( src === ctx.canvas ) {\n\n                        ctx.canvas.width = 0;\n                        ctx.canvas.height = 0;\n\n                    }\n\n                }\n\n                restorePackState( gl, opts );\n                if ( shouldAutoSetTextureFiltering( opts ) )\n                    gl.generateMipmap( target );\n\n\n            }\n\n            if ( numToLoad === 0 )\n                cb( errors.length ? errors : undefined, imgs, tex );\n\n        };\n\n    }\n\n    imgs = urls.map( ( url, idx ) => loadImage( url, opts.crossOrigin, uploadImg( idx ) ) );\n\n}\n\nfunction setEmptyTexture( gl, tex, options ) {\n\n    const target = options.target || gl.TEXTURE_2D;\n    gl.bindTexture( target, tex );\n    const level = options.level || 0;\n    const internalFormat = options.internalFormat || options.format || gl.RGBA;\n    const formatType = getFormatAndTypeFromInternalFormat( internalFormat );\n    const format = options.format || formatType.format;\n    const type = options.type || formatType.type;\n\n    savePatcState( gl, options );\n\n    if ( target === gl.TEXTURE_CUBE_MAP )\n        for ( let ii = 0; ii < 6; ++ ii )\n            gl.texImage2D( gl.TEXTURE_CUBE_MAP_POSITIVE_X + ii, level, internalFormat, options.width, options.height, 0, format, type, null );\n    else if ( target === gl.TEXTURE_3D )\n        gl.texImage3D( target, level, internalFormat, options.width, options.height, options.depth, 0, format, type, null );\n    else\n        gl.texImage2D( target, level, internalFormat, options.width, options.height, 0, format, type, null );\n\n    restorePackState( gl, options );\n\n}\n\nfunction createTexture( gl, options, callback ) {\n\n    const cb = callback || empty;\n    const opts = options || defaults.textureOptions;\n    const tex = gl.createTexture();\n    const target = opts.target || gl.TEXTURE_2D;\n    let width = opts.width || 1;\n    let height = opts.height || 1;\n    const internalFromat = opts.internalFromat || gl.RGBA;\n    const formatType = getFormatAndTypeFromInternalFormat( internalFromat );\n    let type = opts.type || formatType.type;\n    gl.bindTexture( target, tex );\n    if ( target === gl.TEXTURE_CUBE_MAP ) {\n\n        gl.texParameteri( target, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\n        gl.texParameteri( target, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\n\n    }\n\n    const src = opts.src;\n    if ( src )\n        if ( typeof ( src ) === 'string' ) {\n\n            loadTextureFromUrl( gl, tex, opts, cb );\n\n        } else if ( isArrayBuffer( src ) ||\n            ( Array.isArray( src ) && (\n                typeof src[ 0 ] === 'number' ||\n                Array.isArray( src[ 0 ] ) ||\n                isArrayBuffer( src[ 0 ] )\n            ) ) ) {\n\n            const dimensions = setTextureFromArray( gl, tex, src, opts );\n            width = dimensions.width;\n            height = dimensions.height;\n            type = dimensions.type;\n\n        } else if ( Array.isArray( src ) && typeof ( src[ 0 ] ) === 'string' ) {\n\n            if ( target === gl.TEXTURE_CUBE_MAP )\n                loadCubeMapFromUrls( gl, tex, options, cb );\n            else\n                loadSlicesFromUrls( gl, tex, opts, cb );\n\n        } else if ( src instanceof HTMLElement ) {\n\n            setTextureFromElement( gl, tex, src, opts );\n            width = src.width;\n            height = src.height;\n\n        } else {\n\n            throw new Error( 'unsupported src type' );\n\n        }\n    else\n        setEmptyTexture( gl, tex, opts );\n\n    if ( shouldAutoSetTextureFiltering( options ) )\n        setTextureFiltering( gl, tex, opts, width, height, internalFromat, type );\n\n    setTextureParameters( gl, tex, opts );\n\n    return tex;\n\n}\n\nfunction isAsyncSrc( src ) {\n\n    return typeof src === 'string' ||\n           ( Array.isArray( src ) && typeof src[ 0 ] === 'string' );\n\n}\n\nfunction createTextures( gl, textureOptions, callback ) {\n\n    const cb = callback || empty;\n    let numLoading = 0;\n    const errors = [];\n    const textures = [];\n    const images = {};\n\n    function callCallbackWhenReady() {\n\n        if ( numLoading === 0 )\n            setTimeout( () => {\n\n                cb( errors.length ? errors : undefined, textures, images );\n\n            }, 0 );\n\n    }\n\n    Object.keys( textureOptions ).forEach( ( name ) => {\n\n        const options = textureOptions[ name ];\n\n        let onLoadFn;\n        if ( isAsyncSrc( options.src ) ) {\n\n            onLoadFn = function ( err, tex, img ) {\n\n                images[ name ] = img;\n                numLoading -= 1;\n                if ( err )\n                    errors.push( err );\n\n                callCallbackWhenReady();\n\n            };\n\n            numLoading += 1;\n\n        }\n\n        textures[ name ] = createTexture( gl, options, onLoadFn );\n\n    } );\n\n    callCallbackWhenReady();\n\n    return textures;\n\n}\n\nfunction resizeTexture( gl, tex, options, width = options.width, height = options.height ) {\n\n    const target = options.target || gl.TEXTURE_2D;\n    gl.bindTexture( target, tex );\n    const level = options.level || 0;\n    const internalFormat = options.internalFormat || options.format || gl.RGBA;\n    const formatType = getFormatAndTypeFromInternalFormat( internalFormat );\n    const format = options.format || formatType.format;\n    let type;\n    const src = options.src;\n\n    if ( src && ( isArrayBuffer( src ) || ( Array.isArray( src ) && typeof ( src[ 0 ] ) === 'number' ) ) )\n        type = options.type || getTextureTypeFromArrayType( gl, src, formatType.type );\n    else\n        type = options.type || formatType.type;\n\n    if ( target === gl.TEXTURE_CUBE_MAP )\n        for ( let i = 0; i < 6; i ++ )\n            gl.texImage2D( gl.TEXTURE_CUBE_MAP_NEGATIVE_X + i, level, internalFormat, width, height, 0, format, type, null );\n    else\n        gl.texImage2D( target, level, internalFormat, width, height, 0, format, type, null );\n\n}\n\nexport { createTexture, createTextures, resizeTexture };\n","function getContext( canvasOrId, opts ) {\n\n    let canvas;\n    if ( typeof canvasOrId === 'string' )\n        canvas = document.getElementById( canvasOrId );\n    else\n        canvas = canvasOrId;\n\n    const names = [ 'webgl2', 'experimental-webgl2', 'webgl', 'experimental-webgl' ];\n    let context = null;\n    for ( let i = 0; i < names.length; i ++ ) {\n\n        context = canvas.getContext( names[ i ], opts );\n        if ( context ) {\n\n            console.log( `renderer: ${context.getParameter( context.VERSION ) || names[ i ]}` );\n            break;\n\n        }\n\n    }\n\n    if ( ! context )\n        throw new Error( 'Please use a decent browser, this browser not support WebglContext.' );\n\n    return context;\n\n}\n\nfunction resizeCanvasToDisplaySize( canvas, multiplier ) {\n\n    let mult = multiplier || 1;\n    mult = Math.max( 0, mult );\n    const width = canvas.clientWidth * mult | 0;\n    const height = canvas.clientHeight * mult | 0;\n    if ( canvas.width !== width || canvas.height !== height ) {\n\n        canvas.width = width; // eslint-disable-line\n        canvas.height = height; // eslint-disable-line\n        return true;\n\n    }\n    return false;\n\n}\n\nfunction clear( gl, r = 1.0, g = 1.0, b = 1.0, a = 1.0 ) {\n\n    gl.clearColor( r, g, b, a );\n    gl.clear( gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT );\n\n}\n\nexport { getContext, resizeCanvasToDisplaySize, clear };\n","import { Matrix4 } from '../math/Matrix4';\nimport { Transform } from '../model/Transform';\nimport { Vector3 } from '../math/Vector3';\nimport { PMath } from '../math/Math';\n\nfunction Camera() {\n\n    this.transform = new Transform();\n    this.projMat = Matrix4.identity();\n    this.viewMat = Matrix4.identity();\n    this.target = new Vector3();\n    this.up = [ 0, 1, 0 ];\n    this.matrix = this.transform.matrix.raw;\n\n}\n\nObject.defineProperties( Camera.prototype, {\n\n    position: {\n\n        get() {\n\n            return this.transform.position;\n\n        },\n\n        set( v ) {\n\n            this.transform.position = v;\n\n        },\n\n    },\n\n} );\n\nObject.assign( Camera.prototype, {\n\n    getOrientMatrix() {\n\n        const mat = new Float32Array( this.viewMat );\n        mat[ 12 ] = mat[ 13 ] = mat[ 14 ] = 0.0; // eslint-disable-line\n        return mat;\n\n    },\n\n    getVec3Position() {\n\n        return this.transform.getVec3Position();\n\n    },\n\n    updateViewMatrix( target ) {\n\n        if ( target )\n            this.target = target;\n\n        Matrix4.lookAt( this.viewMat, this.transform.position, this.target.getArray(), this.up );\n        Matrix4.invert( this.matrix, this.viewMat );\n        this.getVec3Position().set( this.matrix[ 12 ], this.matrix[ 13 ], this.matrix[ 14 ] );\n\n    },\n\n} );\n\nfunction PerspectiveCamera( fov = 45, aspect, near = 0.01, far = 1000 ) {\n\n    Camera.call( this );\n\n    this._fov = fov;\n    this.fovRadian = PMath.degree2Radian( this._fov );\n    this.aspect = aspect;\n    this.near = near;\n    this.far = far;\n\n    Matrix4.perspective( this.projMat, this.fovRadian, aspect, near, far );\n\n}\n\nPerspectiveCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n    isPerspectiveCamera: true,\n\n    updateProjMatrix( aspect ) {\n\n        if ( aspect && aspect !== this.aspect )\n            this.aspect = aspect;\n\n        Matrix4.perspective( this.projMat, this.fovRadian, this.aspect, this.near, this.far );\n\n    },\n\n\n} );\n\nObject.defineProperties( PerspectiveCamera.prototype, {\n\n    fov: {\n        get() {\n\n            return this._fov;\n\n        },\n        set( degree ) {\n\n            this._fov = degree;\n            this.fovRadian = PMath.degree2Radian( this._fov );\n\n        },\n    },\n\n} );\n\nfunction OrthographicCamera( size, aspect, near = 1, far = size * 2 ) {\n\n    Camera.call( this );\n\n    this.size = size;\n    this.aspect = aspect;\n    this.near = near;\n    this.far = far;\n    this.zoom = 1;\n\n    this.left = this.size * this.aspect / - 2;\n    this.right = this.size * this.aspect / 2;\n    this.bottom = this.size / - 2;\n    this.top = this.size / 2;\n\n    Matrix4.ortho( this.projMat, this.left / this.zoom, this.right / this.zoom, this.bottom / this.zoom, this.top / this.zoom, this.near / this.zoom, this.far / this.zoom );\n\n}\n\nOrthographicCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n    isOrthographicCamera: true,\n\n    updateProjMatrix( aspect ) {\n\n        if ( aspect && aspect !== this.aspect )\n            this.aspect = aspect;\n\n        this.left = this.size * this.aspect / - 2;\n        this.right = this.size * this.aspect / 2;\n        Matrix4.ortho( this.projMat, this.left / this.zoom, this.right / this.zoom, this.bottom / this.zoom, this.top / this.zoom, this.near / this.zoom, this.far / this.zoom );\n\n    },\n\n} );\n\nexport { PerspectiveCamera, OrthographicCamera };\n","function Vector2( x, y ) {\n\n    this.raw = [];\n    this.x = x || 0;\n    this.y = y || 0;\n\n}\n\nObject.defineProperties( Vector2.prototype, {\n\n    x: {\n        get() {\n\n            return this.raw[ 0 ];\n\n        },\n\n        set( v ) {\n\n            this.raw[ 0 ] = v;\n\n        },\n    },\n\n    y: {\n        get() {\n\n            return this.raw[ 1 ];\n\n        },\n\n        set( v ) {\n\n            this.raw[ 1 ] = v;\n\n        },\n    },\n\n    width: {\n\n        get() {\n\n            return this.raw[ 0 ];\n\n        },\n\n        set( v ) {\n\n            this.raw[ 0 ] = v;\n\n        },\n\n    },\n\n    height: {\n\n        get() {\n\n            return this.raw[ 1 ];\n\n        },\n\n        set( v ) {\n\n            this.raw[ 1 ] = v;\n\n        },\n\n    },\n\n} );\n\nObject.assign( Vector2.prototype, {\n\n    set( x, y ) {\n\n        this.x = x;\n        this.y = y;\n        return this;\n\n    },\n\n    setX( x ) {\n\n        this.x = x;\n        return this;\n\n    },\n\n    setY( y ) {\n\n        this.y = y;\n        return this;\n\n    },\n\n    clone() {\n\n        return new Vector2( this.x, this.y );\n\n    },\n\n    copy( v ) {\n\n        this.x = v.x;\n        this.y = v.y;\n\n        return this;\n\n    },\n\n    add( v ) {\n\n        this.x += v.x;\n        this.y += v.y;\n\n        return this;\n\n    },\n\n    sub( v ) {\n\n        this.x -= v.x;\n        this.y -= v.y;\n\n        return this;\n\n    },\n\n    subVectors( a, b ) {\n\n        this.x = a.x - b.x;\n        this.y = a.y - b.y;\n        return this;\n\n    },\n\n    clamp( min, max ) {\n\n        this.x = Math.max( min.x, Math.min( max.x, this.x ) );\n        this.y = Math.min( min.y, Math.min( max.y, this.y ) );\n\n        return this;\n\n    },\n\n} );\n\nexport { Vector2 };\n","import { PMath } from './Math';\n\nfunction Spherical( radius, phi, theta ) {\n\n    this.radius = ( radius !== undefined ) ? radius : 1.0;\n    this.phi = ( phi !== undefined ) ? phi : 0;\n    this.theta = ( theta !== undefined ) ? theta : 0;\n\n}\n\nObject.assign( Spherical.prototype, {\n\n    set( radius, phi, theta ) {\n\n        this.radius = radius;\n        this.phi = phi;\n        this.theta = theta;\n\n        return this;\n\n    },\n\n    clone() {\n\n        return new Spherical().copy( this );\n\n    },\n\n    copy( other ) {\n\n        this.radius = other.radius;\n        this.phi = other.phi;\n        this.theta = other.theta;\n\n        return this;\n\n    },\n\n    makeSafe: ( function () {\n\n        const ESP = 0.000001;\n\n        return function makeSafe() {\n\n            this.phi = Math.max( ESP, Math.min( Math.PI - ESP, this.phi ) );\n            return this;\n\n        };\n\n    }() ),\n\n    setFromVecor3( vec3 ) {\n\n        this.radius = vec3.length();\n        if ( this.radius === 0 ) {\n\n            this.theta = 0;\n            this.phi = 0;\n\n        } else {\n\n            this.theta = Math.atan2( vec3.x, vec3.z );\n            this.phi = Math.acos( PMath.clamp( vec3.y / this.radius, - 1, 1 ) );\n\n        }\n\n        return this;\n\n    },\n\n} );\n\nexport { Spherical };\n","\nfunction FileLoader( files ) {\n\n    this.files = [];\n    this.items = [];\n    this.addFiles( files );\n\n}\n\nObject.assign( FileLoader, {\n\n    getFilename( url ) {\n\n        if ( url ) {\n\n            const m = url.toString().match( /.*\\/(.+?)\\./ );\n            if ( m && m.length > 1 )\n                return m[ 1 ];\n\n        }\n        return '';\n\n    },\n\n    getExtension( url ) {\n\n        return url.split( '.' ).pop().toLowerCase();\n\n    },\n\n    getBasename( url ) {\n\n        return url.split( /[\\\\/]/ ).pop();\n\n    },\n\n    getBasepath( url ) {\n\n        const basename = FileLoader.getBasename( url );\n        return url.slice( 0, url.length - basename.length );\n\n    },\n\n} );\n\nObject.assign( FileLoader.prototype, {\n\n    addFiles( files ) {\n\n        if ( files && ! Array.isArray( files ) )\n            return this.addFile( files );\n\n        return files && files.forEach( ( file ) => {\n\n            if ( Array.isArray( file ) )\n                return this.addFiles( file );\n            return this.addFile( file );\n\n        } );\n\n    },\n\n    addFile( filepath ) {\n\n        const file = filepath.file || filepath;\n        const type = filepath.type || FileLoader.getExtension( file );\n        const name = filepath.name || FileLoader.getFilename( file );\n        if ( this.files.indexOf( file ) < 0 ) {\n\n            this.files.push( file );\n            this.items.push( { file, type, name } );\n\n        }\n\n    },\n\n    load() {\n\n        const promises = [];\n        const names = [];\n\n        this.items.forEach( ( item ) => {\n\n            const { name, file, type } = item;\n            if ( ! FileLoader.types[ type ] )\n                throw new Error( `unsupport file format \".${type}\", file path: ${file}` );\n\n            const promise = FileLoader.types[ type ]( file );\n            promises.push( promise );\n            names.push( name );\n\n        } );\n\n        return Promise.all( promises )\n            .then( ( files ) => {\n\n                const result = {};\n                files.forEach( ( file, idx ) => {\n\n                    result[ names[ idx ] ] = file;\n\n                } );\n\n                return Promise.resolve( result );\n\n            } );\n\n    },\n\n} );\n\nObject.assign( FileLoader, {\n\n    decodeText( array ) {\n\n        if ( typeof TextDecoder !== 'undefined' )\n            return new TextDecoder().decode( array );\n\n        let s = '';\n        for ( let i = 0, il = array.length; i < il; i ++ )\n            s += String.fromCharCode( array[ i ] );\n\n        return decodeURIComponent( escape( s ) );\n\n    },\n\n    types: {\n\n        obj( file ) {\n\n            return fetch( file )\n                .then( response => response.text() );\n\n        },\n\n        gltf( file ) {\n\n            return fetch( file )\n                .then( response => response.json() )\n                .then( ( json ) => {\n\n                    const buffers = json.buffers;\n                    const loader = new FileLoader();\n                    const basepath = FileLoader.getBasepath( file );\n\n                    for ( let i = 0; i < buffers.length; i ++ ) {\n\n                        const uri = buffers[ i ].uri;\n                        if ( uri.startsWith( 'data:' ) ) continue;\n\n                        const filepath = basepath + uri;\n                        loader.addFile( { file: filepath, type: 'gltf_bin', name: uri } );\n\n                    }\n\n                    const images = json.images || [];\n                    const imageRes = {};\n                    for ( let i = 0; i < images.length; i ++ ) {\n\n                        const uri = images[ i ].uri;\n                        if ( ! uri || uri.startsWith( 'data:' ) ) continue;\n\n                        const filepath = basepath + uri;\n                        imageRes[ uri ] = filepath;\n\n                    }\n\n                    return loader.load().then( ( files ) => {\n\n                        Object.assign( files, imageRes );\n                        json.resources = files; // eslint-disable-line\n                        return json;\n\n                    } );\n\n                } );\n\n        },\n\n        gltf_bin( file ) {\n\n            return fetch( file )\n                .then( response => response.arrayBuffer() );\n\n        },\n\n        glb( file ) {\n\n            return fetch( file )\n                .then( response => response.arrayBuffer() )\n                .then( ( arrayBuffer ) => {\n\n                    const BINARY_EXTENSION_HEADER_MAGIC = 'glTF';\n                    const BINARY_EXTENSION_HEADER_LENGTH = 12;\n                    const BINARY_EXTENSION_CHUNK_TYPES = { JSON: 0x4E4F534A, BIN: 0x004E4942 };\n\n                    let content = null;\n                    let body = null;\n\n                    const headerView = new DataView( arrayBuffer, 0, BINARY_EXTENSION_HEADER_LENGTH );\n\n                    this.header = {\n                        magic: FileLoader.decodeText( new Uint8Array( arrayBuffer.slice( 0, 4 ) ) ),\n                        version: headerView.getUint32( 4, true ),\n                        length: headerView.getUint32( 8, true ),\n                    };\n\n                    if ( this.header.magic !== BINARY_EXTENSION_HEADER_MAGIC )\n                        throw new Error( 'GLTFLoader: Unsupported glTF-Binary header.' );\n                    else if ( this.header.version < 2.0 )\n                        throw new Error( 'GLTFLoader: Legacy binary file detected. Use LegacyGLTFLoader instead.' );\n\n                    const chunkView = new DataView( arrayBuffer, BINARY_EXTENSION_HEADER_LENGTH );\n                    let chunkIndex = 0;\n\n                    while ( chunkIndex < chunkView.byteLength ) {\n\n                        const chunkLength = chunkView.getUint32( chunkIndex, true );\n                        chunkIndex += 4;\n\n                        const chunkType = chunkView.getUint32( chunkIndex, true );\n                        chunkIndex += 4;\n\n                        if ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.JSON ) {\n\n                            const contentArray = new Uint8Array( arrayBuffer, BINARY_EXTENSION_HEADER_LENGTH + chunkIndex, chunkLength );\n                            content = FileLoader.decodeText( contentArray );\n\n                        } else if ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.BIN ) {\n\n                            const byteOffset = BINARY_EXTENSION_HEADER_LENGTH + chunkIndex;\n                            body = arrayBuffer.slice( byteOffset, byteOffset + chunkLength );\n\n                        }\n\n                        chunkIndex += chunkLength;\n\n                    }\n\n                    if ( content ) {\n\n                        const json = JSON.parse( content );\n                        if ( json.buffers && body )\n                            for ( let i = 0; i < json.buffers.length; i ++ ) {\n\n                                const buffer = json.buffers[ i ];\n                                if ( typeof buffer.uri === 'undefined' ) {\n\n                                    buffer.isParsed = true;\n                                    buffer.dbuffer = body;\n\n                                }\n\n                            }\n\n                        // load outer resource\n                        const buffers = json.buffers;\n                        const loader = new FileLoader();\n                        const basepath = FileLoader.getBasepath( file );\n\n                        for ( let i = 0; i < buffers.length; i ++ ) {\n\n                            if ( buffers[ i ].isParsed ) continue;\n                            const uri = buffers[ i ].uri;\n                            if ( uri.startsWith( 'data:' ) ) continue;\n\n                            const filepath = basepath + uri;\n                            loader.addFile( { file: filepath, type: 'gltf_bin', name: uri } );\n\n                        }\n\n                        const images = json.images || [];\n                        const imageRes = {};\n                        for ( let i = 0; i < images.length; i ++ ) {\n\n                            const uri = images[ i ].uri;\n                            if ( ! uri || uri.startsWith( 'data:' ) ) continue;\n\n                            const filepath = basepath + uri;\n                            imageRes[ uri ] = filepath;\n\n                        }\n\n                        return loader.load().then( ( files ) => {\n\n                            Object.assign( files, imageRes );\n                                    json.resources = files; // eslint-disable-line\n                            return json;\n\n                        } );\n\n                    }\n\n                    throw new Error( 'GLTFLoader: bin file do not have gltf json.' );\n\n                } );\n\n        },\n\n    },\n} );\n\nexport { FileLoader };\n","import { FileLoader } from './Fileloader';\nimport { Mesh } from '../model/Primatives';\n\nfunction LinePaser( ) {\n\n    this.line = '';\n    this.cArray = [];\n\n}\n\nObject.assign( LinePaser.prototype, {\n\n    init( line ) {\n\n        this.line = line.trim().split( ' ' );\n\n    },\n\n    getType() {\n\n        return this.line[ 0 ];\n\n    },\n\n    getFloatData( count ) {\n\n        let length = count;\n        this.cArray = [];\n        while ( length > 0 )\n            this.cArray.unshift( parseFloat( this.line[ length -- ] ) );\n\n        return this.cArray;\n\n    },\n\n} );\n\nconst ObjLoader = {\n    flipYUV: true,\n};\n\nObject.assign( ObjLoader, {\n\n    load( filePath ) {\n\n        const name = 'OBJLOADER';\n        const loader = new FileLoader( { file: filePath, name } );\n        return loader.load()\n            .then( res => ObjLoader.parse( res[ name ] ) );\n\n    },\n\n    parse( objText, flipYUV ) {\n\n        const flip = flipYUV === undefined ? ObjLoader.flipYUV : flipYUV;\n        const lines = objText.split( '\\n' );\n        lines.push( null );\n        let line;\n        let index = 0;\n\n        let currentObject = null;\n        const objects = [];\n\n        let v = [];\n        let vt = [];\n        let vn = [];\n\n        const oVert = [];\n        const oUV = [];\n        const oNorm = [];\n        const oIndex = [];\n\n        const fCache = {};\n        let vertCount = 0;\n        let isQuad = false;\n        let i;\n        let ary;\n        let ind;\n\n        line = lines[ index ++ ];\n        const linePaser = new LinePaser();\n        let type;\n        while ( line !== null ) {\n\n            linePaser.init( line );\n            line = lines[ index ++ ];\n            type = linePaser.getType();\n\n            switch ( type ) {\n\n            case 'v':\n                v = v.concat( linePaser.getFloatData( 3 ) );\n                continue;\n            case 'vt':\n                vt = vt.concat( linePaser.getFloatData( 2 ) );\n                continue;\n            case 'vn':\n                vn = vn.concat( linePaser.getFloatData( 3 ) );\n                continue;\n            case 'f':\n                linePaser.line.shift();\n\n                if ( linePaser.line.length < 3 ) // less than 3 vertex\n                    continue;\n\n                isQuad = false;\n\n                for ( i = 0; i < linePaser.line.length; i ++ ) {\n\n                    if ( i > 3 ) {\n\n                        console.error( 'OBJ Loader not support multiple vertices face!' );\n                        break;\n\n                    }\n\n                    if ( i === 3 && ! isQuad ) {\n\n                        i = 2;\n                        isQuad = true;\n\n                    }\n\n                    if ( linePaser.line[ i ] in fCache )\n                        oIndex.push( fCache[ linePaser.line[ i ] ] );\n                    else {\n\n                        ary = linePaser.line[ i ].split( '/' );\n\n                        ind = ( parseInt( ary[ 0 ], 10 ) - 1 ) * 3;\n                        oVert.push( v[ ind ], v[ ind + 1 ], v[ ind + 2 ] );\n\n                        ind = ( parseInt( ary[ 2 ], 10 ) - 1 ) * 3;\n                        oNorm.push( vn[ ind ], vn[ ind + 1 ], vn[ ind + 2 ] );\n\n                        if ( ary[ 1 ] !== '' ) {\n\n                            ind = ( parseInt( ary[ 1 ], 10 ) - 1 ) * 2;\n                            oUV.push( vt[ ind ], flip ? ( 1 - vt[ ind + 1 ] ) : vt[ ind + 1 ] );\n\n                        }\n\n                        fCache[ linePaser.line[ i ] ] = vertCount;\n                        oIndex.push( vertCount );\n                        vertCount ++;\n\n                    }\n\n                    if ( i === 3 && isQuad )\n                        oIndex.push( fCache[ linePaser.line[ 0 ] ] );\n\n                }\n                continue;\n            case 'o':\n            case 'g':\n                if ( currentObject !== null ) {\n\n                    const attribArrays = {\n                        a_position: { data: oVert.slice() },\n                        indices: { data: oIndex.slice() },\n                    };\n\n                    if ( oUV.length > 0 )\n                        attribArrays.a_uv = { data: oUV.slice() };\n\n                    if ( oNorm.length > 0 )\n                        attribArrays.a_normal = { data: oNorm.slice() };\n\n                    objects.push( new Mesh( currentObject, attribArrays ) );\n\n                }\n\n                currentObject = linePaser.line[ 1 ];\n                oVert.length = 0;\n                oIndex.length = 0;\n                oUV.length = 0;\n                oNorm.length = 0;\n                vertCount = 0;\n                continue;\n            default:\n                continue;\n\n            }\n\n        }\n\n        if ( currentObject !== null ) {\n\n            const attribArrays = {\n                a_position: { data: oVert },\n                indices: { data: oIndex },\n            };\n\n            if ( oUV.length > 0 )\n                attribArrays.a_uv = { data: oUV };\n\n            if ( oNorm.length > 0 )\n                attribArrays.a_normal = { data: oNorm };\n\n            objects.push( new Mesh( currentObject, attribArrays ) );\n\n        }\n\n        return objects;\n\n    },\n\n} );\n\nexport { ObjLoader };\n","import { Transform } from '../model/Transform';\nimport { Matrix4 } from '../math/Matrix4';\n\nlet nodeCount = 0;\n\nfunction Node( nameModel ) {\n\n    if ( typeof nameModel === 'string' )\n        this.name = nameModel;\n    else if ( !! nameModel && nameModel.isModel )\n        this.setModel( nameModel );\n    else\n        this.name = `NODE_${nodeCount ++}`;\n\n    this.children = [];\n    this.parent = null;\n    this.transform = this.model ? this.model.transform : new Transform();\n    this.matrix = this.transform.matrix;\n    this.worldMatrix = this.transform.worldMatrix;\n    this.needUpdateWorldMatrix = this.transform.needUpdateWorldMatrix;\n\n}\n\nObject.defineProperties( Node.prototype, {\n\n    position: {\n\n        get() {\n\n            return this.transform.position;\n\n        },\n\n        set( v ) {\n\n            this.setPosition( v );\n\n        },\n\n    },\n\n    quaternion: {\n\n        get() {\n\n            return this.transform.quaternion;\n\n        },\n\n        set( v ) {\n\n            this.setQuaternion( v );\n\n        },\n\n    },\n\n    scale: {\n\n        get() {\n\n            return this.transform.scale;\n\n        },\n\n        set( v ) {\n\n            return this.setScale( v );\n\n        },\n\n    },\n\n} );\n\nObject.assign( Node, {\n\n    remove( node ) {\n\n        if ( node.parent ) {\n\n            const idx = node.parent.children.indexOf( node );\n\n            if ( idx > - 1 )\n                node.parent.children.splice( idx, 1 );\n\n            node.parent = null; // eslint-disable-line\n\n        } else\n            node = undefined; // eslint-disable-line\n\n    },\n\n    updateWorldMatrix( node, parent ) {\n\n        if ( node.needUpdateWorldMatrix )\n\n            if ( parent ) {\n\n                node.transform.updateMatrix();\n                Matrix4.mult( node.worldMatrix.raw, parent.worldMatrix.raw, node.matrix.raw );\n\n            } else\n                Matrix4.copy( node.worldMatrix.raw, node.matrix.raw );\n\n    },\n\n    updateNormalAndDirection( node ) {\n\n        if ( node.needUpdateWorldMatrix ) {\n\n            node.transform.updateNormalMatrix().updateDirection();\n            node.needUpdateWorldMatrix = false; // eslint-disable-line\n\n        }\n\n    },\n\n    updateMatrixMarker( node, parent ) {\n\n        if ( node.transform._needUpdateMatrix || ( parent && parent.needUpdateWorldMatrix ) )\n            node.needUpdateWorldMatrix = true; // eslint-disable-line\n\n    },\n\n    afterUpdateMatrix( node, parent ) {\n\n        if ( typeof node.afterUpdateMatrix === 'function' )\n            node.afterUpdateMatrix( node, parent );\n\n    },\n\n} );\n\nObject.assign( Node.prototype, {\n\n    traverse( executeFun ) {\n\n        executeFun( this, this.parent );\n        for ( let i = 0; i < this.children.length; i ++ )\n            this.children[ i ].traverse( executeFun );\n\n    },\n\n    traversePostOrder( executeFun ) {\n\n        for ( let i = 0; i < this.children.length; i ++ )\n            this.children[ i ].traversePostOrder( executeFun );\n        executeFun( this, this.parent );\n\n    },\n\n    traverseTwoExeFun( execuFunPre, execuFunPost ) {\n\n        execuFunPre( this, this.parent );\n        for ( let i = 0; i < this.children.length; i ++ )\n            this.children[ i ].traverseTwoExeFun( execuFunPre, execuFunPost );\n        execuFunPost( this, this.parent );\n\n    },\n\n    remove( node = this ) {\n\n        Node.remove( node );\n        return this;\n\n    },\n\n    addToParent( parent ) {\n\n        if ( this.parent )\n            Node.remove( this );\n\n        parent.children.push( this );\n        node.parent = this; // eslint-disable-line\n\n        return this;\n\n    },\n\n    addChild( nodelike ) {\n\n        let node = nodelike;\n        if ( typeof nodelike === 'string' || nodelike.isModel )\n            node = new Node( nodelike );\n\n        if ( node.parent )\n            Node.remove( node );\n\n        this.children.push( node );\n        node.parent = this; // eslint-disable-line\n\n        return this;\n\n    },\n\n    setPosition( ...args ) {\n\n        if ( args[ 0 ] instanceof Node )\n            return this.setPosition( ...args[ 0 ].position );\n\n        this.transform.setPosition( ...args );\n        return this;\n\n    },\n\n    setQuaternion( ...args ) {\n\n        if ( args[ 0 ] instanceof Node )\n            return this.setQuaternion( ...args[ 0 ].quaternion );\n\n        this.transform.setQuaternion( ...args );\n        return this;\n\n    },\n\n    setScale( ...args ) {\n\n        if ( args[ 0 ] instanceof Node )\n            return this.setScale( ...args[ 0 ].scale );\n\n        this.transform.setScale( ...args );\n        return this;\n\n    },\n\n    updateMatrix() {\n\n        this.traverse( Node.updateMatrixMarker );\n        this.traverseTwoExeFun( Node.updateWorldMatrix, Node.updateNormalAndDirection );\n        this.traverse( Node.afterUpdateMatrix );\n        return this;\n\n    },\n\n    setModel( model ) {\n\n        if ( this.transform )\n            model.setTransform( this.transform.clone() );\n\n        model.node = this; // eslint-disable-line\n        this.model = model;\n        this.name = this.model.name;\n        this.transform = this.model.transform;\n        this.matrix = this.transform.matrix;\n        this.worldMatrix = this.transform.worldMatrix;\n        this.needUpdateWorldMatrix = this.transform.needUpdateWorldMatrix;\n\n        return this;\n\n    },\n\n    findInChildren( property, value ) {\n\n        let finded = false;\n\n        function find( node ) {\n\n            if ( ! finded )\n                if ( node[ property ] !== undefined && node[ property ] === value )\n                    finded = node;\n\n\n        }\n\n        this.traverse( find );\n\n        return finded;\n\n    },\n\n} );\n\nexport { Node };\n","/* eslint no-loop-func: 0 */\nimport { getTypedArrayTypeFromGLType } from '../renderer/typedArray';\nimport * as Constant from '../renderer/constant';\nimport { Model } from '../model/Model';\nimport { Mesh } from '../model/Primatives';\nimport { Node } from '../scene/Node';\nimport { Matrix4 } from '../math/Matrix4';\nimport { FileLoader } from './Fileloader';\n\nfunction GLTFLoader() {\n\n    this.currentSceneName = 'null';\n\n}\n\nfunction errorMiss( nodeType, index ) {\n\n    if ( index !== undefined )\n        console.error( `glTF not have ${nodeType} on index ${index}` );\n    else\n        console.error( `glTF not have ${nodeType} property` );\n    return false;\n\n}\n\nObject.defineProperties( GLTFLoader, {\n\n    version: {\n\n        get() {\n\n            if ( this.version )\n                return this.version;\n            else if ( this.json ) {\n\n                if ( ! this.json.asset )\n                    return errorMiss( 'asset' );\n\n                this.version = this.json.asset.version;\n                if ( this.json.asset.minVersion )\n                    this.version += `\\r minVersion${this.json.asset.minVersion}`;\n\n                return this.version;\n\n            }\n\n            console.warn( 'glTF not loaded.' );\n            return null;\n\n        },\n    },\n\n    generator: {\n\n        get() {\n\n            return this._generator;\n\n        },\n\n    },\n\n} );\n\nObject.assign( GLTFLoader.prototype, {\n\n    load( file, sceneId ) {\n\n        const name = 'GLTFLOADER';\n        const loader = new FileLoader( { file, name } );\n        return loader.load()\n            .then( res => this.parse( res[ name ], sceneId ) );\n\n    },\n\n    parse( json, sceneId ) {\n\n        this.gltf = json;\n\n        const { version, generator } = this.gltf.asset;\n        this._generator = generator;\n        if ( version !== '2.0' ) {\n\n            console.error( `GlTFLoader only support glTF 2.0 for now! Received glTF version: ${this.version}` );\n            return false;\n\n        }\n\n        const result = {\n            nodes: this.parseScene( sceneId ),\n            animations: this.parseAnimations(),\n            name: this.currentSceneName,\n        };\n\n        return this.convertToNode( result );\n\n    },\n\n    parseAnimations() {\n\n        const result = [];\n        const animations = this.gltf.animations;\n        if ( animations )\n            for ( let i = 0; i < animations.length; i ++ ) {\n\n                const animation = animations[ i ];\n                const { name, channels, samplers } = animation;\n                const clips = [];\n                if ( channels && samplers )\n                    for ( let j = 0; j < channels.length; j ++ ) {\n\n                        const channel = channels[ j ];\n                        const sampler = samplers[ channel.sampler ];\n                        if ( ! sampler ) {\n\n                            errorMiss( `animations[${i}].channels[${j}].sampler`, channel.sampler );\n                            continue;\n\n                        }\n\n                        const input = this.parseAccessor( sampler.input ).data;\n                        const outputData = this.parseAccessor( sampler.output );\n                        const output = outputData.data;\n                        const numComponents = outputData.numComponents;\n                        const interpolation = sampler.interpolation || 'LINEAR';\n                        const gltfNodeIdx = channel.target.node;\n                        const path = channel.target.path;\n\n                        if ( ! input || ! output ) continue;\n\n                        let combinedOutput = output;\n                        if ( numComponents !== 1 || input.length !== output.length ) {\n\n                            const numComp = output.length / input.length;\n                            combinedOutput = [];\n                            for ( let k = 0; k < input.length; k ++ )\n                                combinedOutput.push( output.slice( numComp * k, numComp * ( k + 1 ) ) );\n\n                        }\n\n                        let nodeProperty = path;\n                        const extras = {};\n                        switch ( path ) {\n\n                        case 'translation':\n                            nodeProperty = 'position';\n                            break;\n                        case 'rotation':\n                            nodeProperty = 'quaternion';\n                            break;\n                        case 'scale':\n                            nodeProperty = 'scale';\n                            break;\n                        case 'weights':\n                            nodeProperty = 'weights';\n                            extras.uniformName = GLTFLoader.MORPH_WEIGHT_UNIFORM;\n                            break;\n                        default:\n                            console.error( `unsupported animation sampler path ${path}` );\n                            nodeProperty = false;\n\n                        }\n\n                        if ( ! nodeProperty ) continue;\n\n                        const clip = {\n                            times: input,\n                            values: combinedOutput,\n                            findFlag: GLTFLoader.GLTF_NODE_INDEX_PROPERTY,\n                            findValue: gltfNodeIdx,\n                            targetProp: nodeProperty,\n                            method: interpolation,\n                            extras,\n                        };\n\n                        clips.push( clip );\n\n                    }\n\n                result.push( {\n                    name: name || String( i ),\n                    clips,\n                } );\n\n            }\n\n        return result;\n\n    },\n\n    parseScene( sceneId ) {\n\n        const loadScene = sceneId || this.gltf.scene || 0;\n        const scene = this.gltf.scenes[ loadScene ];\n\n        if ( typeof scene === 'undefined' )\n            return errorMiss( 'scene', loadScene );\n\n        this.currentSceneName = scene.name || 'GLTF_NO_NAME_SCENE';\n\n        const result = [];\n        const nodes = scene.nodes;\n        for ( let i = 0; i < nodes.length; i ++ ) {\n\n            const node = this.parseNode( nodes[ i ] );\n            if ( node )\n                result.push( node );\n\n        }\n\n        return result;\n\n    },\n\n    convertToNode( infos ) {\n\n        const rootNode = new Node( infos.name );\n        const nodes = infos.nodes;\n        const animations = infos.animations;\n        const textures = [];\n        const skins = [];\n\n        function parseNode( nodeInfo, parentNode ) {\n\n            const node = new Node( nodeInfo.name );\n\n            node[ GLTFLoader.GLTF_NODE_INDEX_PROPERTY ] = nodeInfo.nodeId;\n\n            if ( nodeInfo.matrix ) {\n\n                nodeInfo.translation = [ 0, 0, 0 ]; // eslint-disable-line\n                nodeInfo.rotation = [ 0, 0, 0, 1 ]; // eslint-disable-line\n                nodeInfo.scale = [ 1, 1, 1 ]; // eslint-disable-line\n                Matrix4.decompose( nodeInfo.matrix, nodeInfo.translation, nodeInfo.rotation, nodeInfo.scale );\n\n            }\n\n            if ( nodeInfo.translation )\n                node.position = nodeInfo.translation;\n            if ( nodeInfo.rotation )\n                node.quaternion = nodeInfo.rotation;\n            if ( nodeInfo.scale )\n                node.scale = nodeInfo.scale;\n\n            parentNode.addChild( node );\n\n            if ( nodeInfo.primitives ) {\n\n                const models = [];\n                for ( let i = 0; i < nodeInfo.primitives.length; i ++ ) {\n\n                    const primitive = nodeInfo.primitives[ i ];\n                    const { attribArrays, modelName, drawMode } = primitive;\n                    if ( ! primitive.attribArrays.mesh ) {\n\n                        const mesh = new Mesh( primitive.meshName, attribArrays );\n                        primitive.attribArrays = { attribArrays, mesh };\n\n                    }\n\n                    const model = new Model( primitive.attribArrays.mesh );\n                    model.name = modelName;\n                    model.drawMode = drawMode;\n\n                    const uniformobj = {};\n                    const skinDefines = ( nodeInfo.skin && nodeInfo.skin.defines ) || [];\n                    model.defines = primitive.defines.concat( skinDefines );\n                    // parse material\n                    if ( primitive.material ) {\n\n                        const {\n                            baseColorTexture, baseColorFactor, metallicFactor, roughnessFactor, doubleSided,\n                            metallicRoughnessTexture, normalTexture, occlusionTexture, emissiveTexture, enableBlend, alphaCutoff,\n                        } = primitive.material;\n\n                        model.mesh.cullFace = ! doubleSided;\n                        model.mesh.sampleBlend = !! enableBlend;\n\n                        if ( alphaCutoff !== undefined )\n                            uniformobj[ GLTFLoader.ALPHA_CUTOFF_UNIFORM ] = alphaCutoff;\n                        uniformobj[ GLTFLoader.BASE_COLOR_UNIFORM ] = baseColorFactor;\n                        uniformobj[ GLTFLoader.METALROUGHNESS_UNIFORM ] = [ metallicFactor, roughnessFactor ];\n\n                        if ( baseColorTexture && baseColorTexture.texture ) {\n\n                            const idx = textures.indexOf( baseColorTexture.texture );\n                            if ( idx < 0 ) {\n\n                                textures.push( baseColorTexture.texture );\n                                baseColorTexture.textureIdx = textures.length - 1;\n\n                            }\n                            if ( ! model.textures ) model.textures = {};\n                            if ( baseColorTexture.textureIdx === undefined ) baseColorTexture.textureIdx = idx;\n                            model.textures[ GLTFLoader.BASE_COLOR_TEXTURE_UNIFORM ] = baseColorTexture.textureIdx;\n\n                        }\n\n                        if ( metallicRoughnessTexture && metallicRoughnessTexture.texture ) {\n\n                            const idx = textures.indexOf( metallicRoughnessTexture.texture );\n                            if ( idx < 0 ) {\n\n                                textures.push( metallicRoughnessTexture.texture );\n                                metallicRoughnessTexture.textureIdx = textures.length - 1;\n\n                            }\n                            if ( ! model.textures ) model.textures = {};\n                            if ( metallicRoughnessTexture.textureIdx === undefined ) metallicRoughnessTexture.textureIdx = idx;\n                            model.textures[ GLTFLoader.METALROUGHNESS_TEXTURE_UNIFORM ] = metallicRoughnessTexture.textureIdx;\n\n                        }\n\n                        if ( normalTexture && normalTexture.texture ) {\n\n                            const idx = textures.indexOf( normalTexture.texture );\n                            if ( idx < 0 ) {\n\n                                textures.push( normalTexture.texture );\n                                normalTexture.textureIdx = textures.length - 1;\n\n                            }\n                            if ( ! model.textures ) model.textures = {};\n                            if ( normalTexture.textureIdx === undefined ) normalTexture.textureIdx = idx;\n                            model.textures[ GLTFLoader.NORMAL_TEXTURE_UNIFORM ] = normalTexture.textureIdx;\n                            uniformobj[ GLTFLoader.NORMAL_SCALE_UNIFORM ] = normalTexture.scale;\n\n                        }\n\n                        if ( occlusionTexture && occlusionTexture.texture ) {\n\n                            const idx = textures.indexOf( occlusionTexture.texture );\n                            if ( idx < 0 ) {\n\n                                textures.push( occlusionTexture.texture );\n                                occlusionTexture.textureIdx = textures.length - 1;\n\n                            }\n                            if ( ! model.textures ) model.textures = {};\n                            if ( occlusionTexture.textureIdx === undefined ) occlusionTexture.textureIdx = idx;\n                            model.textures[ GLTFLoader.OCCLUSION_TEXTURE_UNIFORM ] = occlusionTexture.textureIdx;\n                            uniformobj[ GLTFLoader.OCCLUSION_FACTOR_UNIFORM ] = occlusionTexture.strength;\n\n                        }\n\n                        if ( emissiveTexture && emissiveTexture.texture ) {\n\n                            const idx = textures.indexOf( emissiveTexture.texture );\n                            if ( idx < 0 ) {\n\n                                textures.push( emissiveTexture.texture );\n                                emissiveTexture.textureIdx = textures.length - 1;\n\n                            }\n                            if ( ! model.textures ) model.textures = {};\n                            if ( emissiveTexture.textureIdx === undefined ) emissiveTexture.textureIdx = idx;\n                            model.textures[ GLTFLoader.EMISSIVE_TEXTURE_UNIFORM ] = emissiveTexture.textureIdx;\n                            uniformobj[ GLTFLoader.EMISSIVE_FACTOR_UNIFORM ] = emissiveTexture.emissiveFactor;\n\n                        }\n\n\n                    }\n\n                    // morph targets\n                    if ( primitive.weights )\n                        uniformobj[ GLTFLoader.MORPH_WEIGHT_UNIFORM ] = primitive.weights;\n\n                    model.setUniformObj( uniformobj );\n\n                    if ( nodeInfo.primitives.length < 2 )\n                        node.setModel( model );\n                    else\n                        node.addChild( model );\n\n                    models.push( model );\n\n                }\n\n                if ( node.children.length > 0 )\n                    node.gltfPrimitives = node.children;\n\n                if ( nodeInfo.skin )\n\n                    if ( skins.indexOf( nodeInfo.skin ) > - 1 )\n                        nodeInfo.skin.models.push( ...models );\n                    else {\n\n                        node.skin = Object.assign( nodeInfo.skin, { models } );\n                        skins.push( node.skin );\n\n                    }\n\n\n            }\n            return node;\n\n        }\n\n        function trivarse( trivarseFun, parentNode, nodeInfos ) {\n\n            for ( let i = 0; i < nodeInfos.length; i ++ ) {\n\n                const node = trivarseFun( nodeInfos[ i ], parentNode );\n                trivarse( trivarseFun, node, nodeInfos[ i ].children );\n\n            }\n\n        }\n\n        trivarse( parseNode, rootNode, nodes );\n\n        // apply skins\n        if ( skins.length ) {\n\n            const skinsNum = skins.length;\n            const updateJointUniformFuncs = [];\n            for ( let i = 0; i < skins.length; i ++ ) {\n\n                const {\n                    joints, skeleton, inverseBindMatrices, models,\n                } = skins[ i ];\n\n                const jointNum = joints.length;\n                const globalJointTransformNodes = [];\n                for ( let j = 0; j < jointNum; j ++ )\n                    globalJointTransformNodes[ j ] = rootNode.findInChildren( GLTFLoader.GLTF_NODE_INDEX_PROPERTY, joints[ j ] );\n\n                let globalTransformNode = false;\n                if ( skeleton !== GLTFLoader.SCENE_ROOT_SKELETON ) {\n\n                    globalTransformNode = rootNode.findInChildren( GLTFLoader.GLTF_NODE_INDEX_PROPERTY, skeleton );\n                    if ( globalTransformNode.parent !== rootNode )\n                        globalTransformNode = globalTransformNode.parent;\n\n                } else\n                    globalTransformNode = rootNode;\n\n                const frag = new Array( 16 );\n                const fragWorld = new Array( 16 );\n                updateJointUniformFuncs[ i ] = function updateJointUniformFunc() {\n\n                    let jointMats = [];\n                    Matrix4.invert( fragWorld, globalTransformNode.transform.getWorldMatrix() );\n                    for ( let n = 0; n < jointNum; n ++ ) {\n\n                        Matrix4.mult( frag, fragWorld, globalJointTransformNodes[ n ].transform.getWorldMatrix() );\n                        if ( inverseBindMatrices[ n ] !== GLTFLoader.IDENTITY_INVERSE_BIND_MATRICES )\n                            Matrix4.mult( frag, frag, inverseBindMatrices[ n ] );\n                        jointMats = jointMats.concat( frag );\n\n                    }\n\n                    const uniformObj = {};\n                    uniformObj[ GLTFLoader.JOINT_MATRICES_UNIFORM ] = jointMats;\n                    models.forEach( model => model.setUniformObj( uniformObj ) );\n\n                };\n\n            }\n\n            rootNode.afterUpdateMatrix = function () {\n\n                for ( let i = 0; i < skinsNum; i ++ )\n                    updateJointUniformFuncs[ i ]();\n\n            };\n\n        }\n\n        const animas = { animations, rootNode, type: 'gltf' };\n        return { rootNode, textures, animations: animas };\n\n    },\n\n    parseNode( nodeId ) {\n\n        // TODO camera\n        const node = this.gltf.nodes[ nodeId ];\n        if ( ! node )\n            return errorMiss( 'node', nodeId );\n\n        if ( node.isParsed )\n            return node.dnode;\n\n        const {\n            name, matrix, translation, rotation, scale,\n        } = node;\n\n        const dnode = {\n            name,\n            matrix,\n            translation,\n            rotation,\n            scale,\n            nodeId,\n        };\n\n        if ( node.mesh !== undefined )\n            dnode.primitives = this.parseMesh( node.mesh );\n\n        if ( node.skin !== undefined ) {\n\n            const skin = this.parseSkin( node.skin );\n            if ( skin )\n                dnode.skin = skin;\n\n        }\n\n        dnode.children = [];\n        if ( node.children )\n            for ( let i = 0; i < node.children.length; i ++ )\n                dnode.children.push( this.parseNode( node.children[ i ] ) );\n\n        node.dnode = dnode;\n        node.isParsed = true;\n\n        return node.dnode;\n\n    },\n\n    parseSkin( skinId ) {\n\n        const skin = this.gltf.skins[ skinId ];\n\n        if ( ! skin )\n            return errorMiss( 'skin', skinId );\n\n        if ( skin.isParsed )\n            return skin.dskin;\n\n        const {\n            name, joints, inverseBindMatrices, skeleton,\n        } = skin;\n\n        if ( ! joints )\n            return errorMiss( 'skin.joints', skinId );\n\n        skin.isParsed = true;\n        skin.dskin = false;\n        let dskin = { name, joints, defines: [ GLTFLoader.getJointsNumDefine( joints.length ) ] };\n        dskin.skeleton = skeleton === undefined ? GLTFLoader.SCENE_ROOT_SKELETON : skeleton;\n        dskin.inverseBindMatrices = GLTFLoader.IDENTITY_INVERSE_BIND_MATRICES;\n\n        if ( inverseBindMatrices !== undefined ) {\n\n            const accessor = this.parseAccessor( inverseBindMatrices );\n            if ( accessor ) {\n\n                const array = accessor.data;\n                const matrices = [];\n                for ( let i = 0; i < array.length; i += 16 )\n                    matrices.push( array.slice( i, i + 16 ) );\n\n                dskin.inverseBindMatrices = matrices;\n\n            } else\n                dskin = false;\n\n        }\n\n        skin.dskin = dskin;\n        return skin.dskin;\n\n    },\n\n    parseMesh( meshId ) {\n\n        const mesh = this.gltf.meshes[ meshId ];\n\n        if ( ! mesh )\n            return errorMiss( 'mesh', meshId );\n\n        if ( mesh.isParsed )\n            return mesh.dprimitives;\n\n        const primitives = mesh.primitives;\n        const dprimitives = [];\n        for ( let i = 0; i < primitives.length; i ++ ) {\n\n            const primitive = primitives[ i ];\n            const {\n                attributes, indices, material, mode, name, targets,\n            } = primitive;\n\n            const dprimitive = {\n                attribArrays: {},\n                defines: [],\n            };\n            let hasNormal = false;\n            let hasTangent = false;\n            let texCoordNum = 0;\n            let jointVec8 = false;\n            let vertexColor = 0;\n            Object.keys( attributes ).forEach( ( attribute ) => {\n\n                const accessor = this.parseAccessor( attributes[ attribute ] );\n\n                if ( accessor ) {\n\n                    let attribName;\n                    switch ( attribute ) {\n\n                    case 'POSITION':\n                        attribName = Constant.ATTRIB_POSITION_NAME;\n                        break;\n\n                    case 'NORMAL':\n                        attribName = Constant.ATTRIB_NORMAL_NAME;\n                        hasNormal = true;\n                        break;\n\n                    case 'TANGENT':\n                        attribName = Constant.ATTRIB_TANGENT_NAME;\n                        hasTangent = true;\n                        break;\n\n                    case 'TEXCOORD_0':\n                        attribName = Constant.ATTRIB_UV_NAME;\n                        texCoordNum ++;\n                        break;\n\n                    case 'TEXCOORD_1':\n                        attribName = Constant.ATTRIB_UV_1_NAME;\n                        texCoordNum ++;\n                        break;\n\n                    case 'JOINTS_0':\n                        attribName = Constant.ATTRIB_JOINT_0_NAME;\n                        break;\n\n                    case 'JOINTS_1':\n                        attribName = Constant.ATTRIB_JOINT_1_NAME;\n                        jointVec8 = true;\n                        break;\n\n                    case 'WEIGHTS_0':\n                        attribName = Constant.ATTRIB_WEIGHT_0_NAME;\n                        break;\n\n                    case 'WEIGHTS_1':\n                        attribName = Constant.ATTRIB_WEIGHT_1_NAME;\n                        break;\n\n                    case 'COLOR_0':\n                        attribName = Constant.ATTRIB_VERTEX_COLOR_NAME;\n                        vertexColor = accessor.numComponents;\n                        break;\n\n                    default:\n                        attribName = attribute;\n\n                    }\n\n                    dprimitive.attribArrays[ attribName ] = accessor;\n\n                }\n\n            } );\n\n            if ( hasNormal ) dprimitive.defines.push( GLTFLoader.getHasNormalDefine() );\n            if ( hasTangent ) dprimitive.defines.push( GLTFLoader.getHasTangentDefine() );\n            if ( texCoordNum ) dprimitive.defines.push( GLTFLoader.getTexCoordDefine( texCoordNum ) );\n            if ( jointVec8 ) dprimitive.defines.push( GLTFLoader.getJointVec8Define() );\n            if ( vertexColor ) dprimitive.defines.push( GLTFLoader.getVertexColorDefine( vertexColor ) );\n\n            if ( indices !== undefined ) {\n\n                const accessor = this.parseAccessor( indices );\n                if ( accessor )\n                    dprimitive.attribArrays.indices = accessor;\n\n            }\n\n            const dmaterial = this.parseMaterial( material );\n            if ( dmaterial ) {\n\n                dprimitive.material = dmaterial;\n                dprimitive.defines = dprimitive.defines.concat( dmaterial.defines );\n\n            }\n\n            dprimitive.drawMode = mode === undefined ? 4 : mode;\n            dprimitive.meshName = name || GLTFLoader.getMeshNameCounter();\n            dprimitive.modelName = mesh.name || GLTFLoader.getModelNameCounter();\n\n            if ( targets ) {\n\n                dprimitive.defines.push( GLTFLoader.getMorphTargetsDefine( targets.length ) );\n                let hasPositions = false;\n                let hasNormals = false;\n                let hasTangents = false;\n                for ( let j = 0; j < targets.length; j ++ ) {\n\n                    const target = targets[ j ];\n                    Object.keys( target ).forEach( ( attribute ) => {\n\n                        const accessor = this.parseAccessor( target[ attribute ] );\n                        if ( accessor ) {\n\n                            let attribName;\n                            switch ( attribute ) {\n\n                            case 'POSITION':\n                                attribName = GLTFLoader.MORPH_POSITION_PREFIX + j;\n                                hasPositions = true;\n                                break;\n                            case 'NORMAL':\n                                attribName = GLTFLoader.MORPH_NORMAL_PREFIX + j;\n                                hasNormals = true;\n                                break;\n                            case 'TANGENT':\n                                attribName = GLTFLoader.MORPH_TANGENT_PREFIX + j;\n                                hasTangents = true;\n                                break;\n                            default:\n                                attribName = false;\n\n                            }\n\n                            if ( ! attribName )\n                                console.error( `glTF has unsupported morph target attribute ${attribute}` );\n                            else\n                                dprimitive.attribArrays[ attribName ] = accessor;\n\n                        }\n\n                    } );\n\n                }\n\n                if ( hasPositions ) dprimitive.defines.push( GLTFLoader.getMorphtargetPositionDefine() );\n                if ( hasNormals ) dprimitive.defines.push( GLTFLoader.getMorphtargetNormalDefine() );\n                if ( hasTangents ) dprimitive.defines.push( GLTFLoader.getMorphtargetTangentDefine() );\n                dprimitive.weights = mesh.weights || new Array( targets.length ).fill( 0 );\n\n            }\n\n            dprimitives.push( dprimitive );\n\n        }\n\n        mesh.dprimitives = dprimitives;\n        mesh.isParsed = true;\n\n        return mesh.dprimitives;\n\n    },\n\n    parseAccessor( accessorId ) {\n\n        const accessor = this.gltf.accessors[ accessorId ];\n        if ( ! accessor )\n            return errorMiss( 'accessor', accessorId );\n\n        if ( accessor.isParsed )\n            return accessor.daccessor;\n\n        accessor.isParsed = true;\n        accessor.daccessor = false;\n\n        const normalize = !! accessor.normalized;\n        const bufferView = this.gltf.bufferViews[ accessor.bufferView ];\n        const byteStride = bufferView && bufferView.byteStride;\n        const arrayType = getTypedArrayTypeFromGLType( accessor.componentType );\n        let numComponents = 1;\n        switch ( accessor.type ) {\n\n        case 'SCALAR':\n            numComponents = 1;\n            break;\n        case 'VEC2':\n            numComponents = 2;\n            break;\n        case 'VEC3':\n            numComponents = 3;\n            break;\n        case 'VEC4':\n        case 'MAT2':\n            numComponents = 4;\n            break;\n        case 'MAT3':\n            numComponents = 9;\n            break;\n        case 'MAT4':\n            numComponents = 16;\n            break;\n        default:\n            numComponents = 0;\n            break;\n\n        }\n        if ( numComponents === 0 ) {\n\n            console.error( `glTF has unknown data type in accessor: ${accessor.type}` );\n            return false;\n\n        }\n        const componentsBytes = numComponents * arrayType.BYTES_PER_ELEMENT;\n\n        let buffer;\n        if ( bufferView !== undefined ) {\n\n            buffer = this.parseBufferView( accessor.bufferView );\n            if ( ! buffer )\n                return accessor.daccessor;\n\n        } else\n            buffer = ( new Uint8Array( componentsBytes * accessor.count ) ).buffer;\n\n        let typedArray = this.getTypedArrayFromArrayBuffer( buffer, byteStride, accessor.byteOffset || 0, arrayType, numComponents, accessor.count );\n\n        if ( accessor.sparse ) {\n\n            const { count, indices, values } = accessor.sparse;\n            typedArray = new arrayType( typedArray ); // eslint-disable-line\n\n            const indicesByteOffset = indices.byteOffset || 0;\n            const indicesBufferView = this.gltf.bufferViews[ indices.bufferView ];\n            const indicesArrayType = getTypedArrayTypeFromGLType( indices.componentType );\n            const indicesBuffer = this.parseBufferView( indices.bufferView );\n            const indicesArray = this.getTypedArrayFromArrayBuffer( indicesBuffer, indicesBufferView.byteStride, indicesByteOffset, indicesArrayType, 1, count );\n\n            const valuesByteOffset = values.byteOffset || 0;\n            const valuesBufferView = this.gltf.bufferViews[ values.bufferView ];\n            const valuesBuffer = this.parseBufferView( values.bufferView );\n            const valuesArray = this.getTypedArrayFromArrayBuffer( valuesBuffer, valuesBufferView.byteStride, valuesByteOffset, arrayType, numComponents, count );\n\n            for ( let i = 0; i < indicesArray.length; i ++ )\n                typedArray.set( valuesArray.slice( i * numComponents, i * numComponents + numComponents ), indicesArray[ i ] * numComponents );\n\n        }\n\n        accessor.computeResult = {\n            typedArray, arrayType, numComponents,\n        };\n        accessor.daccessor = {\n            data: typedArray, numComponents, normalize,\n        };\n\n        return accessor.daccessor;\n\n    },\n\n    getTypedArrayFromArrayBuffer( buffer, byteStride, byteOffset, arrayType, numComponents, count ) {\n\n        let typedArray;\n        const componentsBytes = numComponents * arrayType.BYTES_PER_ELEMENT;\n        if ( byteStride && componentsBytes !== byteStride ) {\n\n            const arrayLength = numComponents * count;\n            typedArray = new arrayType( arrayLength ); // eslint-disable-line\n            for ( let i = 0; i < count; i ++ ) {\n\n                const componentVals = new arrayType( buffer, byteOffset + i * byteStride, numComponents ); // eslint-disable-line\n                for ( let j = 0; j < numComponents; j ++ )\n                    typedArray[ i * numComponents + j ] = componentVals[ j ];\n\n            }\n\n        } else\n            typedArray = new arrayType( buffer, byteOffset, count * numComponents ); // eslint-disable-line\n\n        return typedArray;\n\n    },\n\n    parseBufferView( bufferViewId ) {\n\n        const bufferView = this.gltf.bufferViews[ bufferViewId ];\n        if ( ! bufferView )\n            return errorMiss( 'bufferView', bufferViewId );\n\n        if ( bufferView.isParsed )\n            return bufferView.dbufferView;\n\n        bufferView.isParsed = true;\n        bufferView.dbufferView = false;\n\n        const buffer = this.parseBuffer( bufferView.buffer );\n        if ( buffer ) {\n\n            const { byteOffset, byteLength } = bufferView;\n            const bufferArray = new Uint8Array( buffer, byteOffset || 0, byteLength );\n            bufferView.dbufferView = ( new Uint8Array( bufferArray ) ).buffer;\n\n        }\n\n        return bufferView.dbufferView;\n\n    },\n\n    BASE64_MARKER: ';base64,',\n\n    parseBuffer( bufferId ) {\n\n        const buffer = this.gltf.buffers[ bufferId ];\n        if ( ! buffer )\n            return errorMiss( 'buffer', bufferId );\n\n        if ( buffer.isParsed )\n            return buffer.dbuffer;\n\n        buffer.isParsed = true;\n        buffer.dbuffer = false;\n\n        if ( buffer.uri.substr( 0, 5 ) !== 'data:' ) {\n\n            const uri = buffer.uri;\n            const arrayBuffer = this.gltf.resources[ uri ];\n            if ( arrayBuffer )\n                if ( arrayBuffer.byteLength === buffer.byteLength ) {\n\n                    buffer.dbuffer = this.gltf.resources[ uri ];\n\n                } else\n                    console.error( `load gltf resource \"${uri}\" at buffers[${bufferId} failed, ArrayBuffer.byteLength not equals buffer's byteLength]` );\n            else\n                console.error( `load gltf resource \"${uri}\" at buffers[${bufferId}] failed` );\n\n        } else {\n\n            const base64Idx = buffer.uri.indexOf( this.BASE64_MARKER ) + this.BASE64_MARKER.length;\n            const blob = window.atob( buffer.uri.substr( base64Idx ) );\n            const bytes = new Uint8Array( blob.length );\n            for ( let i = 0; i < blob.length; i ++ )\n                bytes[ i ] = blob.charCodeAt( i );\n            buffer.dbuffer = bytes.buffer;\n\n        }\n\n        return buffer.dbuffer;\n\n    },\n\n    parseMaterial( materialId ) {\n\n        let material;\n        if ( materialId === undefined )\n            material = GLTFLoader.defaultMaterial;\n        else\n            material = this.gltf.materials[ materialId ];\n\n        if ( ! material )\n            return errorMiss( 'material', materialId );\n\n        if ( material.isParsed )\n            return material.dmaterial;\n\n        const {\n            name, pbrMetallicRoughness, normalTexture, occlusionTexture, emissiveTexture, emissiveFactor,\n            alphaMode, alphaCutoff, doubleSided,\n        } = material;\n        const dmaterial = {\n            name, defines: [], doubleSided: !! doubleSided,\n        };\n\n        if ( alphaMode && alphaMode !== 'OPAQUE' ) {\n\n            if ( alphaMode === 'MASK' ) {\n\n                dmaterial.defines.push( GLTFLoader.getAlphaMaskDefine() );\n                dmaterial.alphaCutoff = alphaCutoff === undefined ? 0.5 : alphaCutoff;\n\n            }\n\n            if ( alphaMode === 'BLEND' ) {\n\n                dmaterial.defines.push( GLTFLoader.getAlphaBlendDdefine() );\n                dmaterial.enableBlend = true;\n\n            }\n\n        }\n\n        if ( pbrMetallicRoughness ) {\n\n            const {\n                baseColorFactor, metallicFactor, roughnessFactor, baseColorTexture, metallicRoughnessTexture,\n            } = pbrMetallicRoughness;\n\n            Object.assign( dmaterial, {\n                baseColorFactor: baseColorFactor || [ 1, 1, 1, 1 ],\n                metallicFactor: metallicFactor === undefined ? 1 : metallicFactor,\n                roughnessFactor: roughnessFactor === undefined ? 1 : roughnessFactor,\n            } );\n\n            if ( baseColorTexture ) {\n\n                const texture = this.parseTexture( baseColorTexture.index );\n                if ( texture ) {\n\n                    dmaterial.baseColorTexture = { texture, texCoord: baseColorTexture.texCoord || 0 };\n                    dmaterial.defines.push( GLTFLoader.getBaseColorTextureDefine() );\n\n                }\n\n            }\n\n            if ( metallicRoughnessTexture ) {\n\n                const texture = this.parseTexture( metallicRoughnessTexture.index );\n                if ( texture ) {\n\n                    dmaterial.metallicRoughnessTexture = { texture, texCoord: metallicRoughnessTexture.texCoord || 0 };\n                    dmaterial.defines.push( GLTFLoader.getMetalRoughnessDefine() );\n\n                }\n\n            }\n\n        } else\n            Object.assign( dmaterial, {\n                baseColorFactor: [ 1, 1, 1, 1 ],\n                metallicFactor: 1,\n                roughnessFactor: 1,\n            } );\n\n        if ( normalTexture ) {\n\n            const texture = this.parseTexture( normalTexture.index );\n            if ( texture ) {\n\n                dmaterial.normalTexture = { texture, texCoord: normalTexture.texCoord || 0, scale: normalTexture.scale || 1 };\n                dmaterial.defines.push( GLTFLoader.getNormalMapDefine() );\n\n            }\n\n        }\n\n        if ( occlusionTexture ) {\n\n            const texture = this.parseTexture( occlusionTexture.index );\n            if ( texture ) {\n\n                dmaterial.occlusionTexture = { texture, texCoord: occlusionTexture.texCoord || 0, strength: occlusionTexture.strength || 1 };\n                dmaterial.defines.push( GLTFLoader.getOcclusionMapDefine() );\n\n            }\n\n        }\n\n        if ( emissiveTexture && emissiveFactor ) {\n\n            const texture = this.parseTexture( emissiveTexture.index );\n            if ( texture ) {\n\n                dmaterial.emissiveTexture = { texture, texCoord: emissiveTexture.texCoord || 0, emissiveFactor };\n                dmaterial.defines.push( GLTFLoader.getEmissiveMapDefine() );\n\n            }\n\n        }\n\n        material.isParsed = true;\n        material.dmaterial = dmaterial;\n        return dmaterial;\n\n    },\n\n    parseTexture( textureId ) {\n\n        const texture = this.gltf.textures[ textureId ];\n        if ( ! texture )\n            return errorMiss( 'texture', textureId );\n\n        if ( texture.isParsed )\n            return texture.dtexture;\n\n        const { source, sampler } = texture;\n        let dtexture = {};\n        const image = this.parseImage( source );\n        const imgsampler = this.parseSampler( sampler );\n        if ( ! image || ! imgsampler ) {\n\n            dtexture = false;\n            return false;\n\n        }\n        Object.assign( dtexture, { src: image }, imgsampler );\n\n        texture.isParsed = true;\n        texture.dtexture = dtexture;\n        return dtexture;\n\n    },\n\n    parseImage( imageId ) {\n\n        const image = this.gltf.images[ imageId ];\n        if ( ! image )\n            return errorMiss( 'image', imageId );\n\n        if ( image.isParsed )\n            return image.dimage;\n\n        image.isParsed = true;\n        image.dimage = false;\n\n        if ( ! image.uri && typeof image.bufferView !== 'undefined' ) {\n\n            const arrayBuffer = this.parseBufferView( image.bufferView );\n            if ( arrayBuffer ) {\n\n                const type = image.mimeType || 'image/jpeg';\n                const arrayBufferView = new Uint8Array( arrayBuffer );\n                const blob = new Blob( [ arrayBufferView ], { type } );\n                const urlCreator = window.URL || window.webkitURL;\n                const imageUrl = urlCreator.createObjectURL( blob );\n\n                image.dimage = imageUrl;\n\n            }\n\n        }\n\n        if ( image.uri )\n            if ( image.uri.substr( 0, 5 ) !== 'data:' ) {\n\n                const uri = image.uri;\n                const imageres = this.gltf.resources[ uri ];\n                if ( imageres )\n                    image.dimage = imageres;\n\n            } else {\n\n                const img = new window.Image();\n                img.src = image.uri;\n\n                image.dimage = img;\n\n            }\n\n        return image.dimage;\n\n    },\n\n    parseSampler( samplerId ) {\n\n        if ( samplerId === undefined ) return { wrap: Constant.REPEAT };\n        const sampler = this.gltf.samplers[ samplerId ];\n        if ( ! sampler )\n            return errorMiss( 'sampler', samplerId );\n\n        if ( sampler.isParsed )\n            return sampler.dsampler;\n\n        const {\n            magFilter, minFilter, wrapS, wrapT,\n        } = sampler;\n\n        const dsampler = { wrapS: wrapS || Constant.REPEAT, wrapT: wrapT || Constant.REPEAT };\n        if ( minFilter )\n            dsampler.min = minFilter;\n        if ( magFilter )\n            dsampler.mag = magFilter;\n\n        sampler.dsampler = dsampler;\n        sampler.isParsed = true;\n        return dsampler;\n\n    },\n\n} );\n\nObject.assign( GLTFLoader, {\n\n    getMeshNameCounter: ( function () {\n\n        let counter = 0;\n\n        return function getMeshNameCounter() {\n\n            return `GLTF_NO_NAME_PRIMITIVE_${counter ++}`;\n\n        };\n\n    }() ),\n\n    getModelNameCounter: ( function () {\n\n        let counter = 0;\n\n        return function getModelNameCounter() {\n\n            return `GLTF_NO_NAME_MESH_${counter ++}`;\n\n        };\n\n    }() ),\n\n\n    GLTF_NODE_INDEX_PROPERTY: 'GLTF_NODE_INDEX',\n\n    getTexCoordDefine( texNum ) {\n\n        return `UV_NUM ${texNum}`;\n\n    },\n\n    BASE_COLOR_UNIFORM: 'u_baseColorFactor',\n\n    BASE_COLOR_TEXTURE_UNIFORM: 'u_baseColorSampler',\n\n    METALROUGHNESS_UNIFORM: 'u_metallicRoughnessValues',\n\n    METALROUGHNESS_TEXTURE_UNIFORM: 'u_metallicRoughnessSampler',\n\n    NORMAL_TEXTURE_UNIFORM: 'u_normalSampler',\n\n    NORMAL_SCALE_UNIFORM: 'u_normalScale',\n\n    EMISSIVE_TEXTURE_UNIFORM: 'u_emissiveSampler',\n\n    EMISSIVE_FACTOR_UNIFORM: 'u_emissiveFactor',\n\n    OCCLUSION_TEXTURE_UNIFORM: 'u_occlusionSampler',\n\n    OCCLUSION_FACTOR_UNIFORM: 'u_occlusionFactor',\n\n    getVertexColorDefine( num ) {\n\n        return `HAS_VERTEXCOLOR ${num}`;\n\n    },\n\n    getBaseColorTextureDefine() {\n\n        return 'HAS_BASECOLORMAP';\n\n    },\n\n    getMetalRoughnessDefine() {\n\n        return 'HAS_METALROUGHNESSMAP';\n\n    },\n\n    getNormalMapDefine() {\n\n        return 'HAS_NORMALMAP';\n\n    },\n\n    getEmissiveMapDefine() {\n\n        return 'HAS_EMISSIVEMAP';\n\n    },\n\n    getOcclusionMapDefine() {\n\n        return 'HAS_OCCLUSIONMAP';\n\n    },\n\n    MAX_MORPH_TARGETS: 8,\n\n    MORPH_POSITION_PREFIX: 'a_morphPositions_',\n\n    MORPH_NORMAL_PREFIX: 'a_morphNromals_',\n\n    MORPH_TANGENT_PREFIX: 'a_morphTangents_',\n\n    MORPH_WEIGHT_UNIFORM: 'u_morphWeights',\n\n    getMorphTargetsDefine( targetNum ) {\n\n        return `MORPH_TARGET_NUM ${targetNum}`;\n\n    },\n\n    getMorphtargetPositionDefine() {\n\n        return 'HAS_MORPH_POSITION';\n\n    },\n\n    getMorphtargetNormalDefine() {\n\n        return 'HAS_MORPH_NORMAL';\n\n    },\n\n    getMorphtargetTangentDefine() {\n\n        return 'HAS_MORPH_TANGENT';\n\n    },\n\n    SCENE_ROOT_SKELETON: 'SCENE_ROOT',\n\n    IDENTITY_INVERSE_BIND_MATRICES: 'IDENTITY_IBM',\n\n    getJointsNumDefine( num ) {\n\n        return `JOINTS_NUM ${num}`;\n\n    },\n\n    getJointVec8Define() {\n\n        return 'JOINT_VEC8';\n\n    },\n\n    JOINT_MATRICES_UNIFORM: 'u_jointMatrix',\n\n    getHasNormalDefine() {\n\n        return 'HAS_NORMAL';\n\n    },\n\n    getHasTangentDefine() {\n\n        return 'HAS_TANGENT';\n\n    },\n\n    getHasNormalMapDefine() {\n\n        return 'HAS_NORMAL_MAP';\n\n    },\n\n    ALPHA_CUTOFF_UNIFORM: 'u_alphaCutoff',\n\n    getAlphaMaskDefine() {\n\n        return 'ALPHA_MASK';\n\n    },\n\n    getAlphaBlendDdefine() {\n\n        return 'ALPHA_BLEND';\n\n    },\n\n    defaultMaterial: {\n\n        name: 'GLTF_DEFAULT_MATERIAL',\n        emissiveFactor: [ 0, 0, 0 ],\n        alphaMode: 'OPAQUE',\n        alphaCutoff: 0.5,\n        doubleSided: false,\n        isParsed: true,\n        dmaterial: {\n            name: 'GLTF_DEFAULT_MATERIAL',\n            defines: [],\n            doubleSided: false,\n            baseColorFactor: [ 1, 1, 1, 1 ],\n            metallicFactor: 1,\n            roughnessFactor: 1,\n            emissiveFactor: [ 0, 0, 0 ],\n        },\n\n    },\n\n} );\n\nexport { GLTFLoader };\n","import { ColorPointShader } from '../shader/ColorPointShader';\nimport { Mesh } from '../model/Primatives';\nimport { Model } from '../model/Model';\nimport * as Constant from '../renderer/constant';\nimport { setTypedArrayToBuffer } from '../renderer/attributes';\nimport { getTypedArray } from '../renderer/typedArray';\n\nfunction PointHelper( gl, camera, data = [], pointSize, pointColor ) {\n\n    this.shader = new ColorPointShader( gl, camera, pointSize, pointColor );\n\n    const attribArrays = {};\n    attribArrays[ Constant.ATTRIB_POSITION_NAME ] = { data, drawType: gl.DYNAMIC_DRAW };\n    this.mesh = new Mesh( 'PointHelper', attribArrays, { drawMode: gl.POINTS } );\n    this.model = new Model( this.mesh );\n    this.gl = gl;\n\n}\n\nObject.assign( PointHelper.prototype, {\n\n    render() {\n\n        this.model.transform.updateMatrix().copyToWorldMatrix();\n        this.shader.renderModel( this.model );\n        return this;\n\n    },\n\n    // array or Model.infos\n    setData( array ) {\n\n        let typedArray = array;\n\n        if ( array.data ) {\n\n            typedArray = array.data;\n            if ( array.numComponents && array.numComponents !== 3 )\n                if ( array.numComponents === 4 ) {\n\n                    typedArray = [];\n                    for ( let i = 0; i < array.data.length / 4; i ++ )\n                        typedArray.push( array.data[ i * 4 ], array.data[ i * 4 + 1 ], array.data[ i * 4 + 2 ] );\n\n                } else {\n\n                    console.error( 'array data numElement nor 3 or 4 for PointHelper.' );\n                    return null;\n\n                }\n\n        }\n\n        typedArray = getTypedArray( typedArray );\n\n        this.mesh.attribArrays[ Constant.ATTRIB_POSITION_NAME ].data = typedArray;\n\n        const bufferInfo = this.mesh.bufferInfo;\n        if ( bufferInfo ) {\n\n            const buffer = bufferInfo.attribs[ Constant.ATTRIB_POSITION_NAME ].buffer;\n            setTypedArrayToBuffer( this.gl, buffer, typedArray );\n\n            bufferInfo.numElements = typedArray.length / 3;\n\n        }\n\n        return this;\n\n    },\n\n} );\n\nexport { PointHelper };\n","import { Shader } from './Shader';\nimport vs from './shadersrc/colorLine.vs.glsl';\nimport fs from './shadersrc/colorLine.fs.glsl';\n\nfunction ColorLineShader( gl, camera, colors = [ 255 / 255, 105 / 255, 180 / 255, 255 / 255, 255 / 255, 182 / 255, 193 / 255, 80 / 255 ] ) {\n\n    Shader.call( this, gl, ColorLineShader.vs, ColorLineShader.fs );\n\n    this.setCamera( camera );\n    this.setColors( colors );\n\n    this.deactivate();\n\n}\n\nColorLineShader.prototype = Object.assign( Object.create( Shader.prototype ), {\n\n    constructor: ColorLineShader,\n\n    setColors( colors ) {\n\n        this.setUniformObj( { u_colors: colors } );\n\n        if ( colors[ 3 ] !== 1 || colors[ 7 ] !== 1 )\n            this.blend = true;\n        else\n            this.blend = false;\n\n        return this;\n\n    },\n\n} );\n\nObject.assign( ColorLineShader, {\n\n    vs,\n    fs,\n\n} );\n\nexport { ColorLineShader };\n","import { ColorLineShader } from '../shader/ColorLineShader';\nimport { Mesh } from '../model/Primatives';\nimport { Model } from '../model/Model';\nimport * as Constant from '../renderer/constant';\nimport { setTypedArrayToBuffer } from '../renderer/attributes';\nimport { getTypedArray } from '../renderer/typedArray';\n\nfunction LineHelper( gl, camera, points, colors, normalLength = 0.1 ) {\n\n    this.shader = new ColorLineShader( gl, camera, colors );\n    this.normalLength = normalLength;\n\n    const vertices = points && this._getdata( points );\n    const attribArrays = {};\n    attribArrays[ Constant.ATTRIB_POSITION_NAME ] = { data: vertices, drawType: gl.DYNAMIC_DRAW };\n    this.mesh = new Mesh( 'LineHelper', attribArrays, { drawMode: gl.LINES } );\n    this.model = new Model( this.mesh );\n    if ( points.isModel )\n        this.setTransform( points.transform );\n    this.gl = gl;\n    this.copyToWorldMatrix = true;\n\n}\n\nObject.assign( LineHelper.prototype, {\n\n    _getdata( points ) {\n\n        let normalPos = points;\n        if ( points.isModel ) {\n\n            normalPos = [ points.positionInfo.data, points.normalInfo.data ];\n            this.setTransform( points.transform );\n            this.copyToWorldMatrix = false;\n\n        }\n        if ( points.isMesh ) {\n\n            normalPos = [ points.attribArrays[ Constant.ATTRIB_POSITION_NAME ].data, points.attribArrays[ Constant.ATTRIB_NORMAL_NAME ].data ];\n            this.copyToWorldMatrix = false;\n\n        }\n\n        if ( normalPos.length && normalPos.length === 2 ) {\n\n            const vertices = [];\n            const start = normalPos[ 0 ];\n            const normal = normalPos[ 1 ].map( n => n * this.normalLength );\n            const length = start.length;\n            let strip = 3;\n            if ( start.length === normal.length ) {\n\n                if ( length % 3 === 0 )\n                    strip = 3;\n                else if ( length % 4 === 0 )\n                    strip = 4;\n                else {\n\n                    console.error( 'can not guess the vertex data for LineHelper !' );\n                    return null;\n\n                }\n\n                for ( let i = 0; i < length / strip; i ++ ) {\n\n                    vertices.push( start[ i * strip ], start[ i * strip + 1 ], start[ i * strip + 2 ] );\n                    vertices.push( start[ i * strip ] + normal[ i * strip ], start[ i * strip + 1 ] + normal[ i * strip + 1 ], start[ i * strip + 2 ] + normal[ i * strip + 2 ] );\n\n                }\n\n                return vertices;\n\n            } else if ( Math.max( start.length, normal.length ) % 4 === 0 && Math.min( start.length, normal.length ) % 3 === 0 &&\n                Math.max( start.length, normal.length ) / 4 === Math.min( start.length, normal.length ) / 3 ) {\n\n                const count = Math.max( start.length, normal.length ) / 4;\n                const sStrip = start.length > normal.length ? 4 : 3;\n                const nStrip = sStrip === 4 ? 3 : 4;\n                for ( let i = 0; i < count; i ++ ) {\n\n                    vertices.push( start[ i * sStrip ], start[ i * sStrip + 1 ], start[ i * sStrip + 2 ] );\n                    vertices.push( start[ i * sStrip ] + normal[ i * nStrip ], start[ i * sStrip + 1 ] + normal[ i * nStrip + 1 ], start[ i * sStrip + 2 ] + normal[ i * nStrip + 2 ] );\n\n                }\n\n                return vertices;\n\n            }\n\n        }\n\n        return points;\n\n    },\n\n    render() {\n\n        this.model.transform.updateMatrix();\n        if ( this.copyToWorldMatrix )\n            this.model.transform.copyToWorldMatrix();\n\n        this.shader.renderModel( this.model );\n        return this;\n\n    },\n\n    setTransform( transform ) {\n\n        if ( this.model )\n            this.model.setTransform( transform );\n\n        return this;\n\n    },\n\n    // model, mesh, arrays\n    setData( points ) {\n\n        this.copyToWorldMatrix = true;\n\n        const array = this._getdata( points );\n        const typedArray = getTypedArray( array );\n\n        const bufferInfo = this.mesh.bufferInfo;\n\n        this.mesh.attribArrays[ Constant.ATTRIB_POSITION_NAME ].data = typedArray;\n\n        if ( bufferInfo ) {\n\n            const buffer = bufferInfo.attribs[ Constant.ATTRIB_POSITION_NAME ].buffer;\n            setTypedArrayToBuffer( this.gl, buffer, typedArray );\n\n            bufferInfo.numElements = array.length / 3;\n\n        }\n\n        return this;\n\n    },\n\n} );\n\nexport { LineHelper };\n","/* eslint no-multi-assign: 0, no-param-reassign: 0 */\n\n// https://github.com/josephg/noisejs\n\nfunction Grad( x, y, z ) {\n\n    this.x = x;\n    this.y = y;\n    this.z = z;\n\n}\n\nObject.assign( Grad.prototype, {\n\n    dot2( x, y ) {\n\n        return this.x * x + this.y * y;\n\n    },\n\n    dot3( x, y, z ) {\n\n        return this.x * x + this.y * y + this.z * z;\n\n    },\n\n} );\n\nconst grad3 = [\n    new Grad( 1, 1, 0 ), new Grad( - 1, 1, 0 ), new Grad( 1, - 1, 0 ), new Grad( - 1, - 1, 0 ),\n    new Grad( 1, 0, 1 ), new Grad( - 1, 0, 1 ), new Grad( 1, 0, - 1 ), new Grad( - 1, 0, - 1 ),\n    new Grad( 0, 1, 1 ), new Grad( 0, - 1, 1 ), new Grad( 0, 1, - 1 ), new Grad( 0, - 1, - 1 ),\n];\n\nconst p = [ 151, 160, 137, 91, 90, 15,\n    131, 13, 201, 95, 96, 53, 194, 233, 7, 225, 140, 36, 103, 30, 69, 142, 8, 99, 37, 240, 21, 10, 23,\n    190, 6, 148, 247, 120, 234, 75, 0, 26, 197, 62, 94, 252, 219, 203, 117, 35, 11, 32, 57, 177, 33,\n    88, 237, 149, 56, 87, 174, 20, 125, 136, 171, 168, 68, 175, 74, 165, 71, 134, 139, 48, 27, 166,\n    77, 146, 158, 231, 83, 111, 229, 122, 60, 211, 133, 230, 220, 105, 92, 41, 55, 46, 245, 40, 244,\n    102, 143, 54, 65, 25, 63, 161, 1, 216, 80, 73, 209, 76, 132, 187, 208, 89, 18, 169, 200, 196,\n    135, 130, 116, 188, 159, 86, 164, 100, 109, 198, 173, 186, 3, 64, 52, 217, 226, 250, 124, 123,\n    5, 202, 38, 147, 118, 126, 255, 82, 85, 212, 207, 206, 59, 227, 47, 16, 58, 17, 182, 189, 28, 42,\n    223, 183, 170, 213, 119, 248, 152, 2, 44, 154, 163, 70, 221, 153, 101, 155, 167, 43, 172, 9,\n    129, 22, 39, 253, 19, 98, 108, 110, 79, 113, 224, 232, 178, 185, 112, 104, 218, 246, 97, 228,\n    251, 34, 242, 193, 238, 210, 144, 12, 191, 179, 162, 241, 81, 51, 145, 235, 249, 14, 239, 107,\n    49, 192, 214, 31, 181, 199, 106, 157, 184, 84, 204, 176, 115, 121, 50, 45, 127, 4, 150, 254,\n    138, 236, 205, 93, 222, 114, 67, 29, 24, 72, 243, 141, 128, 195, 78, 66, 215, 61, 156, 180 ];\n\nconst perm = new Array( 512 );\nconst gradP = new Array( 512 );\n\nconst F2 = 0.5 * ( Math.sqrt( 3 ) - 1 );\nconst G2 = ( 3 - Math.sqrt( 3 ) ) / 6;\n\nconst F3 = 1 / 3;\nconst G3 = 1 / 6;\n\nconst Perlin = {};\n\nfunction fade( t ) {\n\n    return t * t * t * ( t * ( t * 6 - 15 ) + 10 );\n\n}\n\nfunction lerp( a, b, t ) {\n\n    return ( 1 - t ) * a + t * b;\n\n}\n\nObject.assign( Perlin, {\n\n    seed( seed ) {\n\n        if ( seed > 0 && seed < 1 )\n            seed *= 65536;\n\n        let v;\n        for ( let i = 0; i < 256; i ++ ) {\n\n            if ( i & 1 )\n                v = p[ i ] ^ ( seed & 255 );\n            else\n                v = p[ i ] ^ ( ( seed >> 8 ) & 255 );\n\n\n            perm[ i ] = perm[ i + 256 ] = v;\n            gradP[ i ] = gradP[ i + 256 ] = grad3[ v % 12 ];\n\n        }\n\n    },\n\n    simplex2( xin, yin ) {\n\n        let n0;\n        let n1;\n        let n2;\n\n        const s = ( xin + yin ) * F2;\n        let i = Math.floor( xin + s );\n        let j = Math.floor( yin + s );\n        const t = ( i + j ) * G2;\n        const x0 = xin - i + t;\n        const y0 = yin - j + t;\n\n        let i1;\n        let j1;\n        if ( x0 > y0 ) {\n\n            i1 = 1; j1 = 0;\n\n        } else {\n\n            i1 = 0; j1 = 1;\n\n        }\n\n        const x1 = x0 - i1 + G2;\n        const y1 = y0 - j1 + G2;\n        const x2 = x0 - 1 + 2 * G2;\n        const y2 = y0 - 1 + 2 * G2;\n\n        i &= 255;\n        j &= 255;\n        const gi0 = gradP[ i + perm[ j ] ];\n        const gi1 = gradP[ i + i1 + perm[ j + j1 ] ];\n        const gi2 = gradP[ i + 1 + perm[ j + 1 ] ];\n\n        let t0 = 0.5 - x0 * x0 - y0 * y0;\n        if ( t0 < 0 )\n            n0 = 0;\n        else {\n\n            t0 *= t0;\n            n0 = t0 * t0 * gi0.dot2( x0, y0 );\n\n        }\n        let t1 = 0.5 - x1 * x1 - y1 * y1;\n        if ( t1 < 0 )\n            n1 = 0;\n        else {\n\n            t1 *= t1;\n            n1 = t1 * t1 * gi1.dot2( x1, y1 );\n\n        }\n\n        let t2 = 0.5 - x2 * x2 - y2 * y2;\n        if ( t2 < 0 )\n            n2 = 0;\n        else {\n\n            t2 *= t2;\n            n2 = t2 * t2 * gi2.dot2( x2, y2 );\n\n        }\n\n        return 70 * ( n0 + n1 + n2 );\n\n    },\n\n    simplex3( xin, yin, zin ) {\n\n        let n0;\n        let n1;\n        let n2;\n        let n3;\n\n        const s = ( xin + yin + zin ) * F3;\n        let i = Math.floor( xin + s );\n        let j = Math.floor( yin + s );\n        let k = Math.floor( zin + s );\n\n        const t = ( i + j + k ) * G3;\n        const x0 = xin - i + t;\n        const y0 = yin - j + t;\n        const z0 = zin - k + t;\n\n        let i1;\n        let j1;\n        let k1;\n        let i2;\n        let j2;\n        let k2;\n        if ( x0 >= y0 )\n            if ( y0 >= z0 ) {\n\n                i1 = 1; j1 = 0; k1 = 0; i2 = 1; j2 = 1; k2 = 0;\n\n            } else if ( x0 >= z0 ) {\n\n                i1 = 1; j1 = 0; k1 = 0; i2 = 1; j2 = 0; k2 = 1;\n\n            } else {\n\n                i1 = 0; j1 = 0; k1 = 1; i2 = 1; j2 = 0; k2 = 1;\n\n            }\n        else if ( y0 < z0 ) {\n\n            i1 = 0; j1 = 0; k1 = 1; i2 = 0; j2 = 1; k2 = 1;\n\n        } else if ( x0 < z0 ) {\n\n            i1 = 0; j1 = 1; k1 = 0; i2 = 0; j2 = 1; k2 = 1;\n\n        } else {\n\n            i1 = 0; j1 = 1; k1 = 0; i2 = 1; j2 = 1; k2 = 0;\n\n        }\n\n        const x1 = x0 - i1 + G3;\n        const y1 = y0 - j1 + G3;\n        const z1 = z0 - k1 + G3;\n\n        const x2 = x0 - i2 + 2 * G3;\n        const y2 = y0 - j2 + 2 * G3;\n        const z2 = z0 - k2 + 2 * G3;\n\n        const x3 = x0 - 1 + 3 * G3;\n        const y3 = y0 - 1 + 3 * G3;\n        const z3 = z0 - 1 + 3 * G3;\n\n        i &= 255;\n        j &= 255;\n        k &= 255;\n        const gi0 = gradP[ i + perm[ j + perm[ k ] ] ];\n        const gi1 = gradP[ i + i1 + perm[ j + j1 + perm[ k + k1 ] ] ];\n        const gi2 = gradP[ i + i2 + perm[ j + j2 + perm[ k + k2 ] ] ];\n        const gi3 = gradP[ i + 1 + perm[ j + 1 + perm[ k + 1 ] ] ];\n\n        let t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0;\n        if ( t0 < 0 )\n            n0 = 0;\n        else {\n\n            t0 *= t0;\n            n0 = t0 * t0 * gi0.dot3( x0, y0, z0 );\n\n        }\n        let t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1;\n        if ( t1 < 0 )\n            n1 = 0;\n        else {\n\n            t1 *= t1;\n            n1 = t1 * t1 * gi1.dot3( x1, y1, z1 );\n\n        }\n        let t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2;\n        if ( t2 < 0 )\n            n2 = 0;\n        else {\n\n            t2 *= t2;\n            n2 = t2 * t2 * gi2.dot3( x2, y2, z2 );\n\n        }\n        let t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3;\n        if ( t3 < 0 )\n            n3 = 0;\n        else {\n\n            t3 *= t3;\n            n3 = t3 * t3 * gi3.dot3( x3, y3, z3 );\n\n        }\n\n        return 32 * ( n0 + n1 + n2 + n3 );\n\n    },\n\n    perlin2( x, y ) {\n\n        let X = Math.floor( x );\n        let Y = Math.floor( y );\n\n        x -= X; y -= Y;\n        X &= 255; Y &= 255;\n\n        const n00 = gradP[ X + perm[ Y ] ].dot2( x, y );\n        const n01 = gradP[ X + perm[ Y + 1 ] ].dot2( x, y - 1 );\n        const n10 = gradP[ X + 1 + perm[ Y ] ].dot2( x - 1, y );\n        const n11 = gradP[ X + 1 + perm[ Y + 1 ] ].dot2( x - 1, y - 1 );\n\n        const u = fade( x );\n\n        return lerp(\n            lerp( n00, n10, u ),\n            lerp( n01, n11, u ),\n            fade( y ),\n        );\n\n    },\n\n    perlin3( x, y, z ) {\n\n        let X = Math.floor( x );\n        let Y = Math.floor( y );\n        let Z = Math.floor( z );\n\n        x -= X; y -= Y; z -= Z;\n\n        X &= 255; Y &= 255; Z &= 255;\n\n        const n000 = gradP[ X + perm[ Y + perm[ Z ] ] ].dot3( x, y, z );\n        const n001 = gradP[ X + perm[ Y + perm[ Z + 1 ] ] ].dot3( x, y, z - 1 );\n        const n010 = gradP[ X + perm[ Y + 1 + perm[ Z ] ] ].dot3( x, y - 1, z );\n        const n011 = gradP[ X + perm[ Y + 1 + perm[ Z + 1 ] ] ].dot3( x, y - 1, z - 1 );\n        const n100 = gradP[ X + 1 + perm[ Y + perm[ Z ] ] ].dot3( x - 1, y, z );\n        const n101 = gradP[ X + 1 + perm[ Y + perm[ Z + 1 ] ] ].dot3( x - 1, y, z - 1 );\n        const n110 = gradP[ X + 1 + perm[ Y + 1 + perm[ Z ] ] ].dot3( x - 1, y - 1, z );\n        const n111 = gradP[ X + 1 + perm[ Y + 1 + perm[ Z + 1 ] ] ].dot3( x - 1, y - 1, z - 1 );\n\n        const u = fade( x );\n        const v = fade( y );\n        const w = fade( z );\n\n        return lerp(\n            lerp(\n                lerp( n000, n100, u ),\n                lerp( n001, n101, u ), w,\n            ),\n            lerp(\n                lerp( n010, n110, u ),\n                lerp( n011, n111, u ), w,\n            ),\n            v,\n        );\n\n    },\n\n} );\n\nPerlin.seed( 0 );\n\nexport { Perlin };\n","import { Mesh } from './Primatives';\nimport * as Constant from '../renderer/constant';\nimport { Perlin } from '../math/Perlin';\nimport { PMath } from '../math/Math';\nimport { Model } from '../model/Model';\nimport { setTypedArrayToBuffer } from '../renderer/attributes';\nimport { getTypedArray } from '../renderer/typedArray';\n\nfunction generateNormals( vertices, rowCount, colCount, yin ) {\n\n    let x;\n    let y;\n    let p;\n    let pos;\n    const xMax = colCount - 1;\n    const yMax = rowCount - 1;\n    let nx;\n    let ny;\n    let nz;\n    let nl;\n    let hl;\n    let hr;\n    let ht;\n    let hb;\n    const normals = [];\n\n    const vtxCount = rowCount * colCount;\n    for ( let i = 0; i < vtxCount; i ++ ) {\n\n        y = Math.floor( i / colCount );\n        x = i % colCount;\n        pos = y * 3 * colCount + x * 3;\n\n        if ( x > 0 ) {\n\n            p = y * 3 * colCount + ( x - 1 ) * 3;\n            hl = vertices[ p + 1 ];\n\n        } else\n            hl = vertices[ pos + 1 ];\n\n        if ( x < xMax ) {\n\n            p = y * 3 * colCount + ( x + 1 ) * 3;\n            hr = vertices[ p + 1 ];\n\n        } else\n            hr = vertices[ pos + 1 ];\n\n        if ( y > 0 ) {\n\n            p = ( y - 1 ) * 3 * colCount + x * 3;\n            ht = vertices[ p + 1 ];\n\n        } else\n            ht = vertices[ pos + 1 ];\n\n        if ( y < yMax ) {\n\n            p = ( y + 1 ) * 3 * colCount + x * 3;\n            hb = vertices[ p + 1 ];\n\n        } else\n            hb = vertices[ pos + 1 ];\n\n        nx = hl - hr;\n        ny = yin;\n        nz = hb - ht;\n        nl = Math.sqrt( nx * nx + ny * ny + nz * nz );\n        normals.push( nx / nl, ny / nl, nz / nl );\n\n    }\n\n    return normals;\n\n}\n\nconst Terrain = {};\n\nObject.assign( Terrain, {\n\n    createModel( name, width, height, rowCount, colCount, options ) {\n\n        const model = new Model( Terrain.createMesh( name, width, height, rowCount, colCount, options ) );\n        return Object.assign( model, {\n\n            setTime( gl, time ) {\n\n                Terrain.setTime( gl, this.mesh, time );\n                return this;\n\n            },\n            addTime( gl, timeSpan ) {\n\n                Terrain.addTime( gl, this.mesh, timeSpan );\n                return this;\n\n            },\n\n        } );\n\n    },\n\n    createMesh( name, width = 2, height = 2, rowCount = 6, colCount = 6, options ) {\n\n        const minHeight = ( options && options.minHeight ) || 0;\n        const maxHeight = ( options && options.maxHeight ) || 1;\n        const baseHeight = ( options && options.baseHeight ) || 0;\n        const perlinFreq = ( options && options.perlinFreq ) || 10;\n        const time = ( options && options.time ) || Math.random();\n\n        const rowStart = height / - 2;\n        const colStart = width / - 2;\n        const vtxCount = rowCount * colCount;\n        const idxCount = ( rowCount - 1 ) * colCount;\n        const rowStrid = height / ( rowCount - 1 );\n        const colStrid = width / ( colCount - 1 );\n        let currentRow = 0;\n        let currentCol = 0;\n        const vertices = [];\n        const indices = [];\n        const uv = [];\n        const uvXStrid = 1 / ( colCount - 1 );\n        const uvYStrid = 1 / ( rowCount - 1 );\n        let h;\n\n        for ( let i = 0; i < vtxCount; i ++ ) {\n\n            currentRow = Math.floor( i / colCount );\n            currentCol = i % colCount;\n            h = baseHeight + PMath.map( Perlin.perlin3( currentRow / perlinFreq, currentCol / perlinFreq, time / perlinFreq ), 0, 1, minHeight, maxHeight );\n\n            vertices.push( colStart + currentCol * colStrid, h, rowStart + currentRow * rowStrid );\n\n            uv.push( ( currentCol === colCount - 1 ) ? 0.9999 : currentCol * uvXStrid, ( currentRow === rowCount - 1 ) ? 0.9999 : currentRow * uvYStrid );\n\n            if ( i < idxCount ) { // TRIANGLE_STRIP\n\n                indices.push( currentRow * colCount + currentCol, ( currentRow + 1 ) * colCount + currentCol );\n\n                if ( currentCol === colCount - 1 && i < idxCount - 1 )\n                    indices.push( ( currentRow + 1 ) * colCount + currentCol, ( currentRow + 1 ) * colCount );\n\n            }\n\n        }\n\n        const normals = generateNormals( vertices, rowCount, colCount, maxHeight - minHeight );\n\n        const attribArrays = {\n            indices: { data: indices },\n        };\n        attribArrays[ Constant.ATTRIB_POSITION_NAME ] = { data: vertices, drawType: Constant.DYNAMIC_DRAW };\n        attribArrays[ Constant.ATTRIB_UV_NAME ] = { data: uv };\n        attribArrays[ Constant.ATTRIB_NORMAL_NAME ] = { data: normals };\n        const mesh = new Mesh( name || 'Terrain', attribArrays, { drawMode: Constant.TRIANGLE_STRIP } );\n        return Object.assign( mesh, {\n            time,\n            minHeight,\n            maxHeight,\n            baseHeight,\n            perlinFreq,\n            rowCount,\n            colCount,\n        } );\n\n    },\n\n    setTime( gl, mesh, newTime ) {\n\n        let vertices = mesh.attribArrays[ Constant.ATTRIB_POSITION_NAME ].data;\n        const length = vertices.length / 3;\n        const {\n            minHeight,\n            maxHeight,\n            baseHeight,\n            perlinFreq,\n            rowCount,\n            colCount,\n        } = mesh;\n        let currentRow;\n        let currentCol;\n\n        for ( let i = 0; i < length; i ++ ) {\n\n            currentRow = Math.floor( i / colCount );\n            currentCol = i % colCount;\n            vertices[ i * 3 + 1 ] = baseHeight + PMath.map( Perlin.perlin3( currentRow / perlinFreq, currentCol / perlinFreq, newTime / perlinFreq ), 0, 1, minHeight, maxHeight );\n\n        }\n\n        vertices = getTypedArray( vertices );\n\n        let normals = generateNormals( vertices, rowCount, colCount, maxHeight - minHeight );\n        normals = getTypedArray( normals );\n\n        mesh.time = newTime; // eslint-disable-line\n        mesh.attribArrays[ Constant.ATTRIB_NORMAL_NAME ].data = normals; // eslint-disable-line\n        mesh.attribArrays[ Constant.ATTRIB_POSITION_NAME ].data = vertices; // eslint-disable-line\n\n        const bufferInfo = mesh.bufferInfo;\n        if ( bufferInfo ) {\n\n            const vtxBuffer = bufferInfo.attribs[ Constant.ATTRIB_POSITION_NAME ].buffer;\n            setTypedArrayToBuffer( gl, vtxBuffer, vertices );\n\n            const normBuffer = bufferInfo.attribs[ Constant.ATTRIB_NORMAL_NAME ].buffer;\n            setTypedArrayToBuffer( gl, normBuffer, normals );\n\n        }\n\n        return mesh;\n\n    },\n\n    addTime( gl, mesh, timeSpan ) {\n\n        return Terrain.setTime( gl, mesh, mesh.time + timeSpan );\n\n    },\n\n} );\n\nexport { Terrain };\n","import { createTexture, resizeTexture } from './texture';\n\nconst UNSIGNED_BYTE = 0x1401;\n\n/* PixelFormat */\nconst DEPTH_COMPONENT = 0x1902;\nconst RGBA = 0x1908;\n\n/* Framebuffer Object. */\nconst RGBA4 = 0x8056;\nconst RGB5_A1 = 0x8057;\nconst RGB565 = 0x8D62;\nconst DEPTH_COMPONENT16 = 0x81A5;\nconst STENCIL_INDEX = 0x1901;\nconst STENCIL_INDEX8 = 0x8D48;\nconst DEPTH_STENCIL = 0x84F9;\nconst DEPTH_ATTACHMENT = 0x8D00;\nconst STENCIL_ATTACHMENT = 0x8D20;\nconst DEPTH_STENCIL_ATTACHMENT = 0x821A;\n\n/* TextureWrapMode */\nconst CLAMP_TO_EDGE = 0x812F;\n\n/* TextureMagFilter */\nconst LINEAR = 0x2601;\n\nconst defaultAttachment = [\n    {\n        format: RGBA, type: UNSIGNED_BYTE, min: LINEAR, wrap: CLAMP_TO_EDGE,\n    },\n    { format: DEPTH_STENCIL },\n];\n\nconst attachmentsByFormat = {};\nattachmentsByFormat[ DEPTH_STENCIL ] = DEPTH_STENCIL_ATTACHMENT;\nattachmentsByFormat[ STENCIL_INDEX ] = STENCIL_ATTACHMENT;\nattachmentsByFormat[ STENCIL_INDEX8 ] = STENCIL_ATTACHMENT;\nattachmentsByFormat[ DEPTH_COMPONENT ] = DEPTH_ATTACHMENT;\nattachmentsByFormat[ DEPTH_COMPONENT16 ] = DEPTH_ATTACHMENT;\n\nfunction getAttachmentPointForFormat( format ) {\n\n    return attachmentsByFormat[ format ];\n\n}\n\nconst renderbufferFormats = {};\nrenderbufferFormats[ RGBA4 ] = true;\nrenderbufferFormats[ RGB5_A1 ] = true;\nrenderbufferFormats[ RGB565 ] = true;\nrenderbufferFormats[ DEPTH_STENCIL ] = true;\nrenderbufferFormats[ DEPTH_COMPONENT16 ] = true;\nrenderbufferFormats[ STENCIL_INDEX ] = true;\nrenderbufferFormats[ STENCIL_INDEX8 ] = true;\n\nfunction isRenderbufferFormat( format ) {\n\n    return renderbufferFormats[ format ];\n\n}\n\nlet glRenderbuffer;\nfunction isRenderbuffer( gl, t ) {\n\n    if ( ! glRenderbuffer )\n        glRenderbuffer = gl.createRenderbuffer();\n\n    return t instanceof glRenderbuffer.constructor;\n\n}\n\nlet glTexture;\nfunction isTexture( gl, t ) {\n\n    if ( ! glTexture )\n        glTexture = gl.createTexture();\n\n    return t instanceof glTexture.constructor;\n\n}\n\nfunction createFramebufferInfo( gl, attachments = defaultAttachment, width = gl.drawingBufferWidth, height = gl.drawingBufferHeight ) {\n\n    const target = gl.FRAMEBUFFER;\n    const fb = gl.createFramebuffer();\n    gl.bindFramebuffer( target, fb );\n\n    let colorAttachmentCount = 0;\n    const framebufferInfo = {\n        framebuffer: fb,\n        attachments: [],\n        width,\n        height,\n    };\n\n    attachments.forEach( ( attachmentOptions ) => {\n\n        let attachment = attachmentOptions.attachment;\n        const format = attachmentOptions.format;\n        let attachmentPoint = getAttachmentPointForFormat( format );\n        if ( ! attachmentPoint )\n            attachmentPoint = gl.COLOR_ATTACHMENT0 + colorAttachmentCount ++;\n\n        if ( ! attachment )\n            if ( isRenderbufferFormat( format ) ) {\n\n                attachment = gl.createRenderbuffer();\n                gl.bindRenderbuffer( gl.RENDERBUFFER, attachment );\n                gl.renderbufferStorage( gl.RENDERBUFFER, format, width, height );\n                gl.bindRenderbuffer( gl.RENDERBUFFER, null );\n\n            } else {\n\n                const textureOptions = Object.assign( {}, attachmentOptions, { width, height } );\n\n                if ( textureOptions.auto === undefined ) {\n\n                    textureOptions.auto = false;\n                    textureOptions.min = textureOptions.min || textureOptions.minMag || gl.LINEAR;\n                    textureOptions.mag = textureOptions.mag || textureOptions.minMag || gl.LINEAR;\n                    textureOptions.wrapS = textureOptions.wrapS || textureOptions.wrap || gl.CLAMP_TO_EDGE;\n                    textureOptions.wrapT = textureOptions.wrapT || textureOptions.wrap || gl.CLAMP_TO_EDGE;\n\n                }\n                attachment = createTexture( gl, textureOptions );\n\n            }\n\n        if ( isRenderbuffer( gl, attachment ) )\n            gl.framebufferRenderbuffer( target, attachmentPoint, gl.RENDERBUFFER, attachment );\n        else if ( isTexture( gl, attachment ) )\n            gl.framebufferTexture2D(\n                target,\n                attachmentPoint,\n                attachmentOptions.texTarget || gl.TEXTURE_2D,\n                attachment,\n                attachmentOptions.level || 0,\n            );\n        else\n            throw new Error( 'unkonwn attachment type for framebuffer' );\n\n        framebufferInfo.attachments.push( attachment );\n\n    } );\n\n    if ( colorAttachmentCount > 1 ) {\n\n        const colorBuffers = [];\n        for ( let i = 0; i < colorAttachmentCount; i ++ )\n            colorBuffers.push( gl.COLOR_ATTACHMENT0 + i );\n        gl.drawBuffers( colorBuffers );\n\n    }\n\n\n    switch ( gl.checkFramebufferStatus( gl.FRAMEBUFFER ) ) {\n\n    case gl.FRAMEBUFFER_COMPLETE: break;\n    case gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT: console.log( 'FRAMEBUFFER_INCOMPLETE_ATTACHMENT' ); break;\n    case gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: console.log( 'FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT' ); break;\n    case gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS: console.log( 'FRAMEBUFFER_INCOMPLETE_DIMENSIONS' ); break;\n    case gl.FRAMEBUFFER_UNSUPPORTED: console.log( 'FRAMEBUFFER_UNSUPPORTED' ); break;\n    case gl.FRAMEBUFFER_INCOMPLETE_MULTISAMPLE: console.log( 'FRAMEBUFFER_INCOMPLETE_MULTISAMPLE' ); break;\n    case gl.RENDERBUFFER_SAMPLES: console.log( 'RENDERBUFFER_SAMPLES' ); break;\n    default: break;\n\n    }\n\n    gl.bindFramebuffer( gl.FRAMEBUFFER, null );\n\n    return framebufferInfo;\n\n}\n\nfunction bindFramebufferInfo( gl, framebufferInfo ) {\n\n    const target = gl.FRAMEBUFFER;\n    if ( framebufferInfo ) {\n\n        gl.bindFramebuffer( target, framebufferInfo.framebuffer );\n        gl.viewport( 0, 0, framebufferInfo.width, framebufferInfo.height );\n\n    } else {\n\n        gl.bindFramebuffer( target, null );\n        gl.viewport( 0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight );\n\n    }\n\n}\n\nfunction readPixcelFromFrameBufferInfo( gl, framebufferInfo, x, y, index = 0 ) {\n\n    const pix = new Uint8Array( 4 );\n    gl.bindFramebuffer( gl.FRAMEBUFFER, framebufferInfo.framebuffer || framebufferInfo );\n    gl.readBuffer( gl.COLOR_ATTACHMENT0 + index );\n    gl.readPixels( x, y, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pix );\n    gl.bindFramebuffer( gl.FRAMEBUFFER, null );\n\n    return pix;\n\n}\n\nfunction resizeFramebufferInfo( gl, framebufferInfo, attachments = defaultAttachment, width = gl.drawingBufferWidth, height = gl.drawingBufferHeight ) {\n\n    framebufferInfo.width = width; // eslint-disable-line\n    framebufferInfo.height = height; // eslint-disable-line\n\n    attachments.forEach( ( attachmentOpts, idx ) => {\n\n        const attachment = framebufferInfo.attachments[ idx ];\n        const format = attachmentOpts.format;\n        if ( isRenderbuffer( gl, attachment ) ) {\n\n            gl.bindRenderbuffer( gl.RENDERBUFFER, attachment );\n            gl.renderbufferStorage( gl.RENDERBUFFER, format, width, height );\n\n        } else if ( isTexture( gl, attachment ) )\n            resizeTexture( gl, attachment, attachmentOpts, width, height );\n        else\n            throw new Error( 'unknown attachment type -- fun resizeFramebufferInfo()' );\n\n    } );\n\n}\n\nexport { createFramebufferInfo, bindFramebufferInfo, readPixcelFromFrameBufferInfo, resizeFramebufferInfo };\n","import { ColorpickShader } from '../shader/ColorpickShader';\nimport { createFramebufferInfo, bindFramebufferInfo, readPixcelFromFrameBufferInfo, resizeFramebufferInfo } from '../renderer/framebuffer';\nimport { clear } from '../renderer/webgl';\n\nfunction id2Color( id ) {\n\n    if ( id >= 0xffffff ) {\n\n        id = 0; // eslint-disable-line\n        console.warn( `Color picker models length bigger than max length ${0xffffff - 1}` );\n\n    }\n\n    const a = new Float32Array( 3 );\n    a[ 0 ] = ( id & 0xff ) / 255.0;\n    a[ 1 ] = ( ( id & 0xff00 ) >> 8 ) / 255.0;\n    a[ 2 ] = ( ( id & 0xff0000 ) >> 16 ) / 255.0;\n    return a;\n\n}\n\nfunction color2Id( colorArray ) {\n\n    return colorArray[ 0 ] | ( colorArray[ 1 ] << 8 ) | ( colorArray[ 2 ] << 16 );\n\n}\n\nfunction FramebufferPicker( gl, camera, controler ) {\n\n    this.gl = gl;\n    this.canvas = gl.canvas;\n    this.controler = controler;\n    this.shader = new ColorpickShader( gl, camera );\n    this.models = [];\n    this.blankColor = this.id2Color( this.blankId );\n    this.framebufferInfo = createFramebufferInfo( gl );\n    this.flag = 0;\n\n    this.isActive = false;\n    this.updateCanvasParam();\n\n    this.eventListeners = { type: 'mouseleftclick', listener: this.onmouseclick.bind( this ) };\n\n    this.controler.addListeners( this.eventListeners );\n\n}\n\nObject.assign( FramebufferPicker.prototype, {\n\n    blankId: 0,\n\n    maxId: 0xffffff,\n\n    id2Color,\n\n    color2Id,\n\n    addModels( ...models ) {\n\n        if ( this.models.length >= this.maxId - 1 )\n            throw new Error( `Color picker models length bigger than max length ${this.maxId - 1}` );\n\n        for ( let i = 0; i < models.length; i ++ )\n            if ( Array.isArray( models[ i ] ) )\n                this.addModels( ...models[ i ] );\n            else\n                this.models.push( models[ i ] );\n\n        return this;\n\n    },\n\n    removeModels( ...models ) {\n\n        let index = - 1;\n\n        for ( let i = 0; i < models.length; i ++ )\n            if ( Array.isArray( models[ i ] ) )\n                this.removeModels( ...models[ i ] );\n            else {\n\n                index = this.models.indexOf( models[ i ] );\n                if ( index > - 1 )\n                    this.models.splice( index, 1 );\n\n            }\n\n        return this;\n\n    },\n\n    clear() {\n\n        bindFramebufferInfo( this.gl, this.framebufferInfo );\n        clear( this.gl );\n        bindFramebufferInfo( this.gl, null );\n\n        return this;\n\n    },\n\n    render() {\n\n        bindFramebufferInfo( this.gl, this.framebufferInfo );\n        this.shader.updateCamera();\n        this.models.forEach( ( model, index ) => {\n\n            this.shader.setColor( this.id2Color( index + 1 ) ).renderModel( model );\n\n        } );\n        bindFramebufferInfo( this.gl, null );\n\n        return this;\n\n    },\n\n    pick( x, y ) {\n\n        const p = readPixcelFromFrameBufferInfo( this.gl, this.framebufferInfo, x, this.gl.canvas.clientHeight - y );\n        const id = this.color2Id( p );\n        console.log( x, y, p, id, this.models[ id - 1 ] );\n\n    },\n\n    updateCanvasParam() {\n\n        const box = this.canvas.getBoundingClientRect();\n        this.offsetX = box.left;\n        this.offsetY = box.top;\n        this.lastCanvasWidth = this.canvas.clientWidth;\n        this.lastCanvasHeight = this.canvas.clientWidth;\n        return this;\n\n    },\n\n    onmouseclick( e ) {\n\n        if ( this.isActive ) {\n\n            const x = e.pageX - this.offsetX;\n            const y = e.pageY - this.offsetY;\n            this.needPick = true;\n            this.pickx = x;\n            this.picky = y;\n\n        }\n\n    },\n\n    dispose() {\n\n        this.controler.removeListeners( this.eventListeners );\n        return this;\n\n    },\n\n    update() {\n\n        if ( this.needPick ) {\n\n            if ( this.canvas.clientWidth !== this.lastCanvasWidth || this.canvas.clientHeight !== this.lastCanvasHeight ) {\n\n                this.resizeFramebufferInfo( this.canvas.clientWidth, this.canvas.clientHeight );\n                this.updateCanvasParam();\n\n            }\n            this.clear().render();\n            this.pick( this.pickx, this.picky );\n            this.needPick = false;\n\n        }\n\n        return this;\n\n    },\n\n    activate() {\n\n        this.isActive = true;\n        this.updateCanvasParam();\n        return this;\n\n    },\n\n    deactivate() {\n\n        this.isActive = false;\n        return this;\n\n    },\n\n    resizeFramebufferInfo( width, height ) {\n\n        resizeFramebufferInfo( this.gl, this.framebufferInfo, undefined, width, height );\n        return this;\n\n    },\n\n} );\n\nexport { FramebufferPicker, id2Color, color2Id };\n","import { Shader } from './Shader';\nimport vs from './shadersrc/screenQuad.vs.glsl';\nimport fs from './shadersrc/screenQuad.fs.glsl';\n\nfunction ScreenQuadShader( gl ) {\n\n    Shader.call( this, gl, ScreenQuadShader.vs, ScreenQuadShader.fs );\n\n    this.setFlipy( true );\n\n    this.deactivate();\n\n}\n\nScreenQuadShader.prototype = Object.assign( Object.create( Shader.prototype ), {\n\n    constructor: ScreenQuadShader,\n\n    setFlipy( flip ) {\n\n        this.setUniformObj( { u_flipy: !! flip } );\n\n    },\n\n} );\n\nObject.assign( ScreenQuadShader, {\n\n    vs,\n    fs,\n\n} );\n\nexport { ScreenQuadShader };\n","import { id2Color, color2Id } from './FramebufferPicker';\nimport { readPixcelFromFrameBufferInfo } from '../renderer/framebuffer';\n\nfunction BufferPicker( gl, models, framebufferInfo, controler, bufferIdx = 1 ) {\n\n    this.gl = gl;\n    this.canvas = gl.canvas;\n    this.models = models;\n    this.bufferIdx = bufferIdx;\n    this.framebufferInfo = framebufferInfo;\n    this.controler = controler;\n    this.eventListeners = { type: 'mouseleftclick', listener: this.onmouseclick.bind( this ) };\n    this.controler.addListeners( this.eventListeners );\n\n    this.isActive = false;\n    this.updateCanvasParam();\n\n}\n\nObject.assign( BufferPicker.prototype, {\n\n    blankColor: id2Color( 0 ),\n\n    id2Color,\n\n    color2Id,\n\n    pick( x, y ) {\n\n        const ratio = this.framebufferInfo.width / this.canvas.clientWidth;\n        const p = readPixcelFromFrameBufferInfo( this.gl, this.framebufferInfo, x * ratio, this.gl.canvas.height - y * ratio, this.bufferIdx );\n        const id = this.color2Id( p );\n        console.log( x, y, p, id, this.models[ id - 1 ] );\n\n    },\n\n    updateCanvasParam() {\n\n        const box = this.canvas.getBoundingClientRect();\n        this.offsetX = box.left;\n        this.offsetY = box.top;\n        this.lastCanvasWidth = this.canvas.width;\n        this.lastCanvasHeight = this.canvas.height;\n        return this;\n\n    },\n\n    dispose() {\n\n        this.controler.removeListeners( this.eventListeners );\n        return this;\n\n    },\n\n    setActivate( activate ) {\n\n        if ( activate ) {\n\n            this.isActive = true;\n            this.updateCanvasParam();\n\n        } else\n            this.isActive = false;\n\n        return this;\n\n    },\n\n    onmouseclick( e ) {\n\n        if ( this.isActive ) {\n\n            if ( this.canvas.width !== this.lastCanvasWidth || this.canvas.height !== this.lastCanvasHeight )\n                this.updateCanvasParam();\n\n            const x = e.pageX - this.offsetX;\n            const y = e.pageY - this.offsetY;\n            this.pick( x, y );\n\n        }\n\n    },\n\n} );\n\nexport { BufferPicker };\n","function addFunction( func ) {\n\n    if ( typeof func === 'function' )\n        this.push( func );\n    else\n        console.warn( `listenerOptions.listener( ${func} ) is not a function.` );\n\n}\n\nfunction removeFunction( func ) {\n\n    const idx = this.indexOf( func );\n    if ( idx > - 1 )\n        this.splice( idx, 1 );\n\n}\n\nfunction addFunctionsToArrays( array ) {\n\n    array.forEach( ary => Object.assign( ary, {\n        addFunction: addFunction.bind( ary ),\n        removeFunction: removeFunction.bind( ary ),\n    } ) );\n\n}\n\nconst BUTTONS = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\n\nfunction createEventListener( funcs, bindpoint ) {\n\n    const functions = funcs;\n    return function ( e ) {\n\n        if ( this.enable === false ) return;\n\n        functions.forEach( ( listener ) => {\n\n            listener( e );\n\n        } );\n\n    }.bind( bindpoint );\n\n}\n\nfunction Controler( element ) {\n\n    this.element = element;\n\n    this.enable = true;\n\n    this.mouseDownListeners = [];\n    this.mouseMoveListeners = [];\n    this.mouseUpListeners = [];\n\n    this.mouseWheelListeners = [];\n\n    this.keydownListeners = [];\n    this.keyupListeners = [];\n\n    this.touchStartListeners = [];\n    this.touchMoveListeners = [];\n    this.touchEndListeners = [];\n\n    this.mouseClickListeners = [];\n    this.mouseLeftClickListeners = [];\n    this.mouseMiddleClickListeners = [];\n    this.mouseRightClickListeners = [];\n\n    addFunctionsToArrays( [\n\n        this.mouseDownListeners,\n        this.mouseMoveListeners,\n        this.mouseUpListeners,\n\n        this.mouseWheelListeners,\n\n        this.keydownListeners,\n        this.keyupListeners,\n\n        this.touchStartListeners,\n        this.touchMoveListeners,\n        this.touchEndListeners,\n\n        this.mouseClickListeners,\n        this.mouseLeftClickListeners,\n        this.mouseMiddleClickListeners,\n        this.mouseRightClickListeners,\n\n    ] );\n\n    this.oncontext = function ( e ) {\n\n        if ( this.enable === false ) return;\n        e.preventDefault();\n\n    }.bind( this );\n\n    this.element.addEventListener( 'contextmenu', this.oncontext, false );\n\n    this.onmousedown = createEventListener( this.mouseDownListeners, this );\n    this.element.addEventListener( 'mousedown', this.onmousedown, false );\n    this.onmousemove = createEventListener( this.mouseMoveListeners, this );\n    document.addEventListener( 'mousemove', this.onmousemove, false );\n    this.onmouseup = createEventListener( this.mouseUpListeners, this );\n    document.addEventListener( 'mouseup', this.onmouseup, false );\n\n    this.onwheel = createEventListener( this.mouseWheelListeners, this );\n    this.element.addEventListener( 'wheel', this.onwheel, false );\n\n    this.onkeydown = createEventListener( this.keydownListeners, this );\n    window.addEventListener( 'keydown', this.onkeydown, false );\n    this.onkeyup = createEventListener( this.keyupListeners, this );\n    window.addEventListener( 'keyup', this.onkeyup, false );\n\n    this.ontouchstart = createEventListener( this.touchStartListeners, this );\n    this.element.addEventListener( 'touchstart', this.ontouchstart, false );\n    this.ontouchmove = createEventListener( this.touchMoveListeners, this );\n    this.element.addEventListener( 'touchmove', this.ontouchmove, false );\n    this.ontouchend = createEventListener( this.touchEndListeners, this );\n    this.element.addEventListener( 'touchend', this.ontouchend, false );\n\n    this.onmouseclick = createEventListener( this.mouseClickListeners, this );\n    this.onmouseleftclick = createEventListener( this.mouseLeftClickListeners, this );\n    this.onmousemiddleclick = createEventListener( this.mouseMiddleClickListeners, this );\n    this.onmouserightclick = createEventListener( this.mouseRightClickListeners, this );\n\n    this._flag = 0;\n    const self = this;\n    this.addListeners( [\n        {\n            type: 'mousedown',\n            listener() {\n\n                self._flag = 0;\n\n            },\n        },\n        {\n            type: 'mousemove',\n            listener() {\n\n                self._flag = 1;\n\n            },\n        },\n        {\n            type: 'mouseup',\n            listener( e ) {\n\n                if ( self.enable === false ) return;\n                if ( self._flag === 0 ) {\n\n                    self.onmouseclick( e );\n                    switch ( e.button ) {\n\n                    case BUTTONS.LEFT:\n                        self.onmouseleftclick( e );\n                        break;\n\n                    case BUTTONS.MIDDLE:\n                        self.onmousemiddleclick( e );\n                        break;\n\n                    case BUTTONS.RIGHT:\n                        self.onmouserightclick( e );\n                        break;\n\n                    default:\n                        break;\n\n                    }\n\n                }\n\n            },\n        },\n    ] );\n\n}\n\nObject.assign( Controler.prototype, {\n\n    addListeners( ...listenersOpts ) {\n\n        for ( let i = 0; i < listenersOpts.length; i ++ )\n            if ( Array.isArray( listenersOpts[ i ] ) )\n                this.addListeners( ...listenersOpts[ i ] );\n            else {\n\n                const listenerOptions = listenersOpts[ i ];\n                switch ( listenerOptions.type ) {\n\n                case 'mousedown':\n                    this.mouseDownListeners.addFunction( listenerOptions.listener );\n                    break;\n\n                case 'mousemove':\n                    this.mouseMoveListeners.addFunction( listenerOptions.listener );\n                    break;\n\n                case 'mouseup':\n                    this.mouseUpListeners.addFunction( listenerOptions.listener );\n                    break;\n\n                case 'wheel':\n                    this.mouseWheelListeners.addFunction( listenerOptions.listener );\n                    break;\n\n                case 'keydown':\n                    this.keydownListeners.addFunction( listenerOptions.listener );\n                    break;\n\n                case 'keyup':\n                    this.keyupListeners.addFunction( listenerOptions.listener );\n                    break;\n\n                case 'touchstart':\n                    this.touchStartListeners.addFunction( listenerOptions.listener );\n                    break;\n\n                case 'touchend':\n                    this.touchEndListeners.addFunction( listenerOptions.listener );\n                    break;\n\n                case 'touchmove':\n                    this.touchMoveListeners.addFunction( listenerOptions.listener );\n                    break;\n\n                case 'mouseclick':\n                    this.mouseClickListeners.addFunction( listenerOptions.listener );\n                    break;\n\n                case 'mouseleftclick':\n                    this.mouseLeftClickListeners.addFunction( listenerOptions.listener );\n                    break;\n\n                case 'mousemiddleclick':\n                    this.mouseMiddleClickListeners.addFunction( listenerOptions.listener );\n                    break;\n\n                case 'mouserightclick':\n                    this.mouseRightClickListeners.addFunction( listenerOptions.listener );\n                    break;\n\n                default:\n                    break;\n\n                }\n\n            }\n\n        return this;\n\n    },\n\n    removeListeners( ...listenersOpts ) {\n\n        for ( let i = 0; i < listenersOpts.length; i ++ )\n            if ( Array.isArray( listenersOpts[ i ] ) )\n                this.removeListeners( ...listenersOpts[ i ] );\n            else {\n\n                const listenerOptions = listenersOpts[ i ];\n                switch ( listenerOptions.type ) {\n\n                case 'mousedown':\n                    this.mouseDownListeners.removeFunction( listenerOptions.listener );\n                    break;\n\n                case 'mousemove':\n                    this.mouseMoveListeners.removeFunction( listenerOptions.listener );\n                    break;\n\n                case 'mouseup':\n                    this.mouseUpListeners.removeFunction( listenerOptions.listener );\n                    break;\n\n                case 'wheel':\n                    this.mouseWheelListeners.removeFunction( listenerOptions.listener );\n                    break;\n\n                case 'keydown':\n                    this.keydownListeners.removeFunction( listenerOptions.listener );\n                    break;\n\n                case 'keyup':\n                    this.keyupListeners.removeFunction( listenerOptions.listener );\n                    break;\n\n                case 'touchstart':\n                    this.touchStartListeners.removeFunction( listenerOptions.listener );\n                    break;\n\n                case 'touchend':\n                    this.touchEndListeners.removeFunction( listenerOptions.listener );\n                    break;\n\n                case 'touchmove':\n                    this.touchMoveListeners.removeFunction( listenerOptions.listener );\n                    break;\n\n                case 'mouseclick':\n                    this.mouseClickListeners.removeFunction( listenerOptions.listener );\n                    break;\n\n                case 'mouseleftclick':\n                    this.mouseLeftClickListeners.removeFunction( listenerOptions.listener );\n                    break;\n\n                case 'mousemiddleclick':\n                    this.mouseMiddleClickListeners.removeFunction( listenerOptions.listener );\n                    break;\n\n                case 'mouserightclick':\n                    this.mouseRightClickListeners.removeFunction( listenerOptions.listener );\n                    break;\n\n                default:\n                    break;\n\n                }\n\n            }\n\n        return this;\n\n    },\n\n    dispose() {\n\n        this.element.removeEventListener( 'contextmenu', this.oncontext, false );\n\n        this.element.removeEventListener( 'mousedown', this.onmousedown, false );\n        this.element.removeEventListener( 'mousemove', this.onmousemove, false );\n        this.element.removeEventListener( 'mouseup', this.onmouseup, false );\n\n        this.element.removeEventListener( 'wheel', this.onwheel, false );\n\n        this.element.removeEventListener( 'keydown', this.onkeydown, false );\n        this.element.removeEventListener( 'keyup', this.onkeyup, false );\n\n        this.element.removeEventListener( 'touchstart', this.ontouchstart, false );\n        this.element.removeEventListener( 'touchmove', this.ontouchmove, false );\n        this.element.removeEventListener( 'touchend', this.ontouchend, false );\n\n        return this;\n\n    },\n\n} );\n\nexport { Controler };\n","import { createFramebufferInfo, bindFramebufferInfo, resizeFramebufferInfo } from '../renderer/framebuffer';\nimport { Quad } from '../model/Primatives';\nimport { ScreenQuadShader } from '../shader/ScreenQuadShader';\nimport { BufferPicker } from '../controls/BufferPicker';\nimport { Controler } from '../controls/Controler';\nimport { Node } from './Node';\n\nfunction Scene( renderer, controler ) {\n\n    this.models = [];\n    this.shaders = [];\n    this.shadersMap = [];\n    this.helpers = [];\n    this.helpersMap = [];\n\n    this.root = new Node( 'root_node' );\n    this.renderer = renderer;\n    this.gl = this.renderer.context;\n    this.controler = controler || new Controler( this.gl.canvas );\n    this.quad2UnitModel = Quad.createModel( 'screenQuad', 2 );\n    this.ScreenQuadShader = new ScreenQuadShader( this.gl ).setDefines( 'FXAA' ).setUniformObj( { u_resolution: [ this.gl.canvas.width, this.gl.canvas.height ] } );\n\n    const defaultAttachment = [\n        {\n            format: this.gl.RGBA, type: this.gl.UNSIGNED_BYTE, minMag: this.gl.LINEAR, wrap: this.gl.CLAMP_TO_EDGE,\n        },\n        {\n            format: this.gl.RGBA, type: this.gl.UNSIGNED_BYTE, minMag: this.gl.LINEAR, wrap: this.gl.CLAMP_TO_EDGE,\n        },\n        { format: this.gl.DEPTH_STENCIL },\n    ];\n\n    this.attachments = defaultAttachment;\n    this.framebufferInfo = createFramebufferInfo( this.gl, this.attachments );\n    this.bufferPicker = new BufferPicker( this.gl, this.models, this.framebufferInfo, this.controler, 1 );\n\n    this.setPick( false );\n\n}\n\nObject.assign( Scene.prototype, {\n\n    add( ...objs ) {\n\n        for ( let i = 0; i < objs.length; i ++ )\n            if ( Array.isArray( objs[ i ] ) )\n                this.add( ...objs[ i ] );\n            else {\n\n                if ( objs[ i ].shader )\n                    this.addModelToShader( objs[ i ].shader, objs[ i ].model );\n                if ( objs[ i ].helper )\n                    this.addDataToHelper( objs[ i ].helper, objs[ i ].data );\n\n            }\n\n        return this;\n\n    },\n\n    addModelToShader( shader, model ) {\n\n        if ( Array.isArray( model ) )\n            model.forEach( m => this.addModelToShader( shader, m ) );\n        else {\n\n            if ( model instanceof Node )\n                return this.addNodeToShader( shader, model );\n\n            const shaderIdx = this.shadersMap.indexOf( shader );\n            let modelIdx = - 1;\n            if ( shaderIdx > - 1 ) {\n\n                modelIdx = this.shaders[ shaderIdx ].models.indexOf( model );\n                if ( modelIdx < 0 )\n                    this.shaders[ shaderIdx ].models.push( model );\n\n            } else {\n\n                const shaderObj = { shader: this.enablePick ? shader.setDefines( 'ColorPick' ) : shader, models: [ model ] };\n                this.shaders.push( shaderObj );\n                this.shadersMap.push( shader );\n\n            }\n\n            modelIdx = this.models.indexOf( model );\n            if ( modelIdx < 0 ) {\n\n                this.models.push( model );\n                this.root.addChild( model );\n                if ( this.enablePick )\n                    model.setUniformObj( { u_colorId: this.bufferPicker.id2Color( this.models.length ) } );\n\n            }\n\n        }\n\n        return this;\n\n    },\n\n    addNodeToShader( shader, node ) {\n\n        const models = [];\n        function getModels( nodep ) {\n\n            if ( nodep.model )\n                models.push( nodep.model );\n\n        }\n        node.traverse( getModels );\n\n        let shaderIdx = this.shadersMap.indexOf( shader );\n        if ( shaderIdx < 0 ) {\n\n            const shaderObj = { shader: this.enablePick ? shader.setDefines( 'ColorPick' ) : shader, models: [] };\n            this.shaders.push( shaderObj );\n            this.shadersMap.push( shader );\n            shaderIdx = this.shaders.length - 1;\n\n        }\n\n        const shaderModels = this.shaders[ shaderIdx ].models;\n        for ( let i = 0; i < models.length; i ++ ) {\n\n            const model = models[ i ];\n            let modelIdx = shaderModels.indexOf( model );\n            if ( modelIdx < 0 )\n                shaderModels.push( model );\n\n            modelIdx = this.models.indexOf( model );\n            if ( modelIdx < 0 ) {\n\n                this.models.push( model );\n                if ( this.enablePick )\n                    model.setUniformObj( { u_colorId: this.bufferPicker.id2Color( this.models.length ) } );\n\n            }\n\n        }\n\n        this.root.addChild( node );\n\n        return this;\n\n    },\n\n    addDataToHelper( helper, data ) {\n\n        if ( Array.isArray( data ) )\n            data.forEach( d => this.addDataToHelper( helper, d ) );\n        else {\n\n            const helperIdx = this.helpersMap.indexOf( helper );\n            if ( helperIdx > - 1 )\n                this.helpers[ helperIdx ].datas.push( data );\n            else {\n\n                const helperObj = { helper, datas: [ data ] };\n                this.helpers.push( helperObj );\n                this.helpersMap.push( helper );\n\n            }\n\n        }\n\n        return this;\n\n    },\n\n    remove( ...objs ) {\n\n        for ( let i = 0; i < objs.length; i ++ )\n            if ( Array.isArray( objs[ i ] ) )\n                this.remove( ...objs[ i ] );\n            else {\n\n                if ( objs[ i ].shader )\n                    this.removeModelFromShader( objs[ i ].shader, objs[ i ].model );\n                if ( objs[ i ].helper )\n                    this.removeDataFromHelper( objs[ i ].helper, objs[ i ].data );\n\n            }\n\n        return this;\n\n    },\n\n    removeModelFromShader( shader, model ) {\n\n        if ( Array.isArray( model ) )\n            model.forEach( m => this.removeModelFromShader( shader, m ) );\n        else {\n\n            const shaderIdx = this.shadersMap.indexOf( shader );\n            let modelIdx = - 1;\n            if ( shaderIdx > - 1 ) {\n\n                modelIdx = this.shaders[ shaderIdx ].models.indexOf( model );\n                if ( modelIdx > - 1 )\n                    this.shaders[ shaderIdx ].models.splice( modelIdx, 1 );\n\n            }\n\n            modelIdx = this.models.indexOf( model );\n            if ( modelIdx > - 1 ) {\n\n                this.models.splice( modelIdx, 1 );\n                this.root.remove( model.node );\n                if ( this.enablePick )\n                    this.needUpdateColorId = true;\n\n            }\n\n        }\n\n        return this;\n\n    },\n\n    removeDataFromHelper( helper, data ) {\n\n        if ( Array.isArray( data ) )\n            data.forEach( d => this.removeDataFromHelper( helper, d ) );\n        else {\n\n            const helperIdx = this.helpersMap.indexOf( helper );\n            if ( helperIdx > - 1 ) {\n\n                const dataIdx = this.helpers[ helperIdx ].datas.indexOf( data );\n                if ( dataIdx > - 1 )\n                    this.helpers[ helperIdx ].datas.splice( dataIdx, 1 );\n\n            }\n\n        }\n\n        return this;\n\n    },\n\n    render2Buffer( resize ) {\n\n        if ( resize ) {\n\n            resizeFramebufferInfo( this.gl, this.framebufferInfo, this.attachments );\n            this.ScreenQuadShader.setUniformObj( { u_resolution: [ this.gl.canvas.width, this.gl.canvas.height ] } );\n\n        }\n        bindFramebufferInfo( this.gl, this.framebufferInfo );\n        this.renderer.clear();\n        this.render();\n        bindFramebufferInfo( this.gl, null );\n        return this;\n\n    },\n\n    render2Screen( attachment = 0 ) {\n\n        this.ScreenQuadShader.setTexture( this.framebufferInfo.attachments[ attachment ] ).renderModel( this.quad2UnitModel );\n        return this;\n\n    },\n\n    render() {\n\n        this.root.updateMatrix();\n\n        if ( this.enablePick && this.needUpdateColorId ) {\n\n            this.models.forEach( ( m, id ) => m.setUniformObj( { u_colorId: id + 1 } ) );\n            this.needUpdateColorId = false;\n\n        }\n\n        let curShader;\n        let curShaderObj;\n        let curModel;\n        for ( let i = 0; i < this.shaders.length; i ++ ) {\n\n            curShaderObj = this.shaders[ i ];\n            curShader = curShaderObj.shader;\n\n            for ( let j = 0; j < curShaderObj.models.length; j ++ ) {\n\n                curModel = curShaderObj.models[ j ];\n                curShader.renderModel( curModel );\n\n            }\n\n            curShader.deactivate();\n\n        }\n\n        for ( let i = 0; i < this.helpers.length; i ++ ) {\n\n            curShaderObj = this.helpers[ i ];\n            curShader = curShaderObj.helper;\n            for ( let j = 0; j < curShaderObj.datas.length; j ++ ) {\n\n                curModel = curShaderObj.datas[ j ];\n                if ( curModel.data ) {\n\n                    curShader.setData( curModel.data );\n\n                    if ( curModel.transform )\n                        curShader.model.setTransform( curModel.transform );\n\n                    if ( curModel.position )\n                        curShader.model.setPosition( curModel.position );\n\n                    if ( curModel.rotation )\n                        curShader.model.setRotation( curModel.rotation );\n\n                    if ( curModel.scale )\n                        curShader.model.setScale( curModel.scale );\n\n                    curShader.render();\n\n                }\n\n            }\n\n\n        }\n\n    },\n\n    setPick( enable ) {\n\n        if ( !! enable === this.enablePick ) return this;\n\n        if ( enable ) {\n\n            this.shadersMap.forEach( shader => shader.setDefines( 'ColorPick' ) );\n            this.models.forEach( ( m, idx ) => m.setUniformObj( { u_colorId: this.bufferPicker.id2Color( idx + 1 ) } ) );\n\n        }\n\n        if ( ! enable )\n            this.shadersMap.forEach( shader => shader.setDefines() );\n\n        this.enablePick = !! enable;\n        this.bufferPicker.setActivate( this.enablePick );\n        return this;\n\n    },\n\n    removeAll() {\n\n        this.models = [];\n        this.shaders = [];\n        this.shadersMap = [];\n        this.helpers = [];\n        this.helpersMap = [];\n        return this;\n\n    },\n\n} );\n\nexport { Scene };\n","import { Quaternion } from '../math/Quaternion';\n\nfunction weightLinearLerp( out, v1, v2, t ) {\n\n    for ( let i = 0; i < v1.length; i ++ )\n        out[ i ] = v1[ i ] + t * ( v2[ i ] - v1[ i ] ); // eslint-disable-line\n\n    return out;\n\n}\n\nfunction quaternionLinearSlerp( out, v1, v2, t ) {\n\n    Quaternion.slerp( out, v1, v2, t );\n\n}\n\nfunction Animator( rawData ) {\n\n    this.raw = rawData;\n    this._parseRawData( rawData );\n    this._playList = [];\n\n}\n\nObject.assign( Animator.prototype, {\n\n    _parseRawData( raw ) {\n\n        this.animations = Animator.types[ raw.type ]( raw );\n\n    },\n\n    resetAll() {\n\n        this.animations.forEach( ( animate ) => {\n\n            animate.clips.forEach( ( clip ) => {\n\n                clip.currentTime = 0; // eslint-disable-line\n                clip.currentIdx = 0; // eslint-disable-line\n                clip.sumTime = 0; // eslint-disable-line\n\n            } );\n\n        } );\n\n        return this;\n\n    },\n\n    playAnimation( name ) {\n\n        this._playList = [];\n        this.animations.forEach( ( animation ) => {\n\n            if ( animation.name === name )\n                this._playList = [ animation ];\n\n        } );\n\n        return this;\n\n    },\n\n    playAll() {\n\n        this._playList = [];\n        this.animations.forEach( animation => this._playList.push( animation ) );\n\n        return this;\n\n    },\n\n    update( dtime ) {\n\n        for ( let i = 0; i < this._playList.length; i ++ ) {\n\n            const clips = this._playList[ i ].clips;\n            for ( let j = 0; j < clips.length; j ++ ) {\n\n                const clip = clips[ j ];\n                let {\n                    sumTime, currentIdx, currentTime,\n                } = clip;\n                const {\n                    minTime, maxTime, times, values, lerpFun, setTarget, animateMaxTime, animateMinTime,\n                } = clip;\n\n                sumTime += dtime;\n                currentTime += dtime;\n                if ( currentTime > animateMaxTime ) {\n\n                    currentTime %= animateMaxTime;\n                    currentIdx = 0;\n\n                }\n\n                clip.sumTime = sumTime;\n                clip.currentTime = currentTime;\n                if ( currentTime < animateMinTime || currentTime < minTime || currentTime > maxTime ) continue;\n\n                for ( let t = currentIdx; t < times.length; t ++ )\n                    if ( currentTime < times[ t ] ) {\n\n                        currentIdx = t - 1;\n                        break;\n\n                    }\n                clip.currentIdx = currentIdx;\n\n                const timePercent = ( currentTime - times[ currentIdx ] ) / ( times[ currentIdx + 1 ] - times[ currentIdx ] );\n                lerpFun( clip.currentValue, values[ currentIdx ], values[ currentIdx + 1 ], timePercent );\n                setTarget( clip.currentValue );\n\n            }\n\n        }\n\n    },\n\n} );\n\nObject.assign( Animator, {\n    types: {\n\n        gltf( raw ) {\n\n            const { animations, rootNode } = raw;\n            const result = [];\n            for ( let i = 0; i < animations.length; i ++ ) {\n\n                const animation = animations[ i ];\n                const { name, clips } = animation;\n                let animateMaxTime = Number.NEGATIVE_INFINITY;\n                let animateMinTime = Number.POSITIVE_INFINITY;\n                const clipsRes = [];\n                for ( let j = 0; j < clips.length; j ++ ) {\n\n                    const clip = clips[ j ];\n                    const {\n                        findFlag, findValue, targetProp, times, values, extras, // method,\n                    } = clip;\n\n                    const node = rootNode.findInChildren( findFlag, findValue );\n                    let nodes = [ node ];\n                    if ( ! node.model && node.gltfPrimitives )\n                        nodes = node.gltfPrimitives;\n\n                    let lerpFun;\n                    let setTarget = function ( v ) {\n\n                        nodes.forEach( ( n ) => {\n\n                            n[ targetProp ] = v; // eslint-disable-line\n\n                        } );\n\n                    };\n                    switch ( targetProp ) {\n\n                    case 'quaternion':\n                        lerpFun = quaternionLinearSlerp;\n                        break;\n                    case 'weights':\n                        lerpFun = weightLinearLerp;\n                        setTarget = function ( v ) {\n\n                            const uniformobj = {};\n                            uniformobj[ extras.uniformName ] = v;\n\n                            nodes.forEach( ( n ) => {\n\n                                n.model.setUniformObj( uniformobj );\n\n                            } );\n\n                        };\n                        break;\n                    case 'position':\n                    case 'scale':\n                        lerpFun = weightLinearLerp;\n                        break;\n                    default:\n                        break;\n\n                    }\n\n                    if ( ! lerpFun ) continue;\n\n                    animateMinTime = animateMinTime < times[ 0 ] ? animateMinTime : times[ 0 ];\n                    animateMaxTime = animateMaxTime > times[ times.length - 1 ] ? animateMaxTime : times[ times.length - 1 ];\n                    const clipRes = {\n                        setTarget,\n                        times,\n                        values,\n                        lerpFun,\n                        sumTime: 0,\n                        minTime: times[ 0 ],\n                        maxTime: times[ times.length - 1 ],\n                        currentIdx: 0,\n                        currentTime: 0,\n                        currentValue: values[ 0 ].slice ? values[ 0 ].slice() : values[ 0 ],\n                    };\n\n                    clipsRes.push( clipRes );\n\n                }\n\n                clipsRes.forEach( ( clip ) => {\n\n                    clip.animateMaxTime = animateMaxTime; // eslint-disable-line\n                    clip.animateMinTime = animateMinTime; // eslint-disable-line\n\n                } );\n\n                result.push( { name, clips: clipsRes } );\n\n            }\n\n            return result;\n\n        },\n\n    },\n} );\n\nexport { Animator };\n","export const ATTRIB_POSITION_NAME = 'a_position';\nexport const ATTRIB_POSITION_LOC = 0;\nexport const ATTRIB_UV_NAME = 'a_uv';\nexport const ATTRIB_UV_LOC = 1;\nexport const ATTRIB_NORMAL_NAME = 'a_normal';\nexport const ATTRIB_NORMAL_LOC = 2;\nexport const ATTRIB_BARYCENTRIC_NAME = 'a_barycentric';\nexport const ATTRIB_BARYCENTRIC_LOC = 4;\nexport const UNIFORM_WORLD_MAT_NAME = 'u_worldMat';\nexport const UNIFORM_VIEW_MAT_NAME = 'u_viewMat';\nexport const UNIFORM_PROJ_MAT_NAME = 'u_projMat';\nexport const UNIFORM_MVP_MAT_NAME = 'u_mvpMat';\nexport const UNIFORM_VP_MAT_NAME = 'u_vpMat';\nexport const UNIFORM_NORMAL_MAT_NAME = 'u_normMat';\nexport const UNIFORM_MAIN_TEXTURE_NAME = 'u_texture';\nexport const UNIFORM_PREFIX = 'u_';\nexport const UNIFORM_CAMPOS = 'u_camPos';\nexport const ATTRIB_JOINT_0_NAME = 'a_joint';\nexport const ATTRIB_WEIGHT_0_NAME = 'a_weight';\nexport const ATTRIB_UV_1_NAME = 'a_uv1';\nexport const ATTRIB_JOINT_1_NAME = 'a_joint1';\nexport const ATTRIB_WEIGHT_1_NAME = 'a_weight1';\nexport const ATTRIB_TANGENT_NAME = 'a_tangent';\nexport const ATTRIB_VERTEX_COLOR_NAME = 'a_color';\n\n\n// WebGLContext\nexport const LINES = 1;\nexport const LINE_STRIP = 3;\nexport const TRIANGLES = 4;\nexport const TRIANGLE_STRIP = 5;\n\nexport const DYNAMIC_DRAW = 35048;\n\n// Shader Defines\nexport const DEFINE_FLAT = 'FLAT';\n\n// texture filter\nexport const NEAREST = 9728;\nexport const LINEAR = 9729;\nexport const NEAREST_MIPMAP_NEAREST = 9984;\nexport const NEAREST_MIPMAP_LINEAR = 9986;\nexport const LINEAR_MIPMAP_NEAREST = 9985;\nexport const LINEAR_MIPMAP_LINEAR = 9987;\n\nexport const CLAMP_TO_EDGE = 33071;\nexport const MIRRORED_REPEAT = 33648;\nexport const REPEAT = 10497;\n","const RADIAN_PER_DEGREE = Math.PI / 180;\nconst EPS = 0.000001;\n\nconst PMath = {\n\n    RADIAN_PER_DEGREE,\n\n    degree2Radian( degree ) {\n\n        return degree * RADIAN_PER_DEGREE;\n\n    },\n\n    clamp( value, min, max ) {\n\n        return Math.max( min, Math.min( max, value ) );\n\n    },\n\n    map( value, min, max, tarMin, tarMax ) {\n\n        return tarMin + ( tarMax - tarMin ) * ( value - min ) / ( max - min );\n\n    },\n\n    arrayEquals( a, b ) {\n\n        if ( a.length !== b.length ) return false;\n\n        const length = a.length;\n        for ( let i = 0; i < length; i ++ )\n            if ( Math.abs( a[ i ] - b[ i ] ) > EPS * Math.max( 1.0, Math.abs( a[ i ] ), Math.abs( b[ i ] ) ) )\n                return false;\n\n        return true;\n\n    },\n\n    arrayClone( a ) {\n\n        const Type = a.constructor;\n        const length = a.length;\n        const out = new Type( length );\n        for ( let i = 0; i < length; i ++ )\n            out[ i ] = a[ i ];\n\n        return out;\n\n    },\n\n};\n\nexport { PMath };\n","import { createAttributesSetters, setAttributes } from './program';\n\nfunction createVertexArray( gl, bufferInfo, program, attribSetters ) {\n\n    const vao = gl.createVertexArray();\n    gl.bindVertexArray( vao );\n    setAttributes( attribSetters || createAttributesSetters( gl, program ), bufferInfo.attribs );\n    if ( bufferInfo.indices )\n        gl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, bufferInfo.indices );\n\n    gl.bindBuffer( gl.ARRAY_BUFFER, null );\n    gl.bindVertexArray( null );\n    return vao;\n\n}\n\nexport { createVertexArray };\n","class Render {\n\n    constructor( callback, fps ) {\n\n        const self = this;\n        this.lastTime = null;\n        this.callback = callback;\n        this.isActive = false;\n        this.fps = 0;\n\n        if ( typeof ( fps ) === 'number' && fps > 0 ) {\n\n            this.frameTimeLimit = 1 / fps;\n\n            this.run = function () {\n\n                const currentTime = performance.now();\n                const timespan = ( currentTime - self.lastTime ) / 1000;\n\n                if ( timespan >= self.frameTimeLimit ) {\n\n                    self.fps = Math.floor( 1 / timespan );\n                    self.lastTime = currentTime;\n                    self.callback( timespan );\n\n                }\n\n                if ( self.isActive ) window.requestAnimationFrame( self.run );\n\n            };\n\n        } else\n\n            this.run = function () {\n\n                const currentTime = performance.now();\n                const timespan = ( currentTime - self.lastTime ) / 1000;\n\n                self.fps = Math.floor( 1 / timespan );\n                self.lastTime = currentTime;\n\n                self.callback( timespan );\n                if ( self.isActive ) window.requestAnimationFrame( self.run );\n\n            };\n\n\n    }\n\n    start() {\n\n        this.isActive = true;\n        this.lastTime = performance.now();\n        window.requestAnimationFrame( this.run );\n        return this;\n\n    }\n\n    stop() {\n\n        this.isActive = false;\n\n    }\n\n}\n\nexport { Render };\n","import { getContext, clear, resizeCanvasToDisplaySize } from './webgl';\n\nclass Renderer {\n\n    constructor( canvasOrId, opts ) {\n\n        this.context = getContext( canvasOrId, opts );\n        this.canvas = this.context.canvas;\n        this.multiplier = 1.0;\n\n        this.context.cullFace( this.context.BACK );\n        this.context.frontFace( this.context.CCW );\n        this.context.enable( this.context.CULL_FACE );\n        this.context.enable( this.context.DEPTH_TEST );\n        this.context.depthFunc( this.context.LEQUAL );\n        this.context.blendFunc( this.context.SRC_ALPHA, this.context.ONE_MINUS_SRC_ALPHA );\n\n    }\n\n    clear( r, g, b, a ) {\n\n        if ( Array.isArray( r ) ) {\n\n            if ( r.length === 3 ) {\n\n                clear( this.context, r[ 0 ], r[ 1 ], r[ 2 ], 1.0 );\n                return this;\n\n            }\n            if ( r.length === 4 ) {\n\n                clear( this.context, r[ 0 ], r[ 1 ], r[ 2 ], r[ 3 ] );\n                return this;\n\n            }\n\n        }\n\n        clear( this.context, r, g, b, a );\n        return this;\n\n    }\n\n    setSize( width, height ) {\n\n        this.canvas.style.width = width;\n        this.canvas.style.height = height;\n        this.canvas.width = this.canvas.clientWidth;\n        this.canvas.height = this.canvas.clientHeight;\n        this.context.viewport( 0, 0, this.canvas.width, this.canvas.height );\n        return this;\n\n    }\n\n    fixCanvasToDisplay( multiplier, updateViewport = true ) {\n\n        if ( typeof multiplier === 'number' && multiplier > 0 && this.multiplier !== multiplier )\n            this.multiplier = multiplier;\n\n        if ( resizeCanvasToDisplaySize( this.canvas, this.multiplier ) ) {\n\n            if ( updateViewport )\n                this.context.viewport( 0, 0, this.canvas.width, this.canvas.height );\n            return true;\n\n        }\n\n        return false;\n\n    }\n\n}\n\nexport { Renderer };\n","/* eslint default-case: 0 */\nimport { Vector2 } from '../math/Vector2';\nimport { Vector3 } from '../math/Vector3';\nimport { Spherical } from '../math/Spherical';\n\nclass OrbitControls {\n\n    constructor( camera, domElement, controler ) {\n\n        this.controler = controler;\n        this.camera = camera;\n        this.domElement = ( domElement !== undefined ) ? domElement : document;\n        this.enable = true;\n        this.target = new Vector3();\n\n        this.minDistance = 0.1;\n        this.maxDistance = Infinity;\n\n        this.minZoom = 0.01;\n        this.maxZoom = Infinity;\n\n        this.minPolarAngle = 0;\n        this.maxPolarAngle = Math.PI;\n\n        this.minAzimuthAngle = - Infinity;\n        this.maxAzimuthAngle = Infinity;\n\n        this.enableDamping = false;\n        this.dampingFactor = 0.08;\n        this.zoomFactor = 0.2;\n\n        this.enableZoom = true;\n        this.zoomSpeed = 1.0;\n\n        this.enableRotate = true;\n        this.rotateSpeed = 0.8;\n\n        this.enablePan = true;\n        this.keyPanSpeed = 7.0;\n\n        this.autoRotate = false;\n        this.autoRotateSpeed = 2.0;\n\n        this.enableKeys = true;\n        this.keys = {\n            LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40,\n        };\n        this.mouseButtons = {\n            ORBIT: 0, ZOOM: 1, PAN: 2,\n        };\n\n        // update\n        this._offset = new Vector3();\n        this._spherical = new Spherical();\n        this._sphericalDelta = new Spherical();\n        this._sphericalDump = new Spherical();\n        this._zoomFrag = 0;\n        this._scale = 1;\n        this._panOffset = new Vector3();\n        this._isMouseUp = true;\n\n        // pan\n        this._vPan = new Vector3();\n\n        // state\n        this._rotateStart = new Vector2();\n        this._rotateEnd = new Vector2();\n        this._rotateDelta = new Vector2();\n\n        this._panStart = new Vector2();\n        this._panEnd = new Vector2();\n        this._panDelta = new Vector2();\n\n        this._zoomStart = new Vector2();\n        this._zoomEnd = new Vector2();\n        this._zoomDelta = new Vector2();\n\n        this.STATE = {\n            NONE: - 1, ROTATE: 0, ZOOM: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_ZOOM: 4, TOUCH_PAN: 5,\n        };\n        this._state = this.STATE.NONE;\n\n        this.eventListeners = [\n            { type: 'mousedown', listener: this.onMouseDown.bind( this ) },\n            { type: 'wheel', listener: this.onMouseWheel.bind( this ) },\n            { type: 'keydown', listener: this.onKeyDown.bind( this ) },\n            { type: 'touchstart', listener: this.onTouchStart.bind( this ) },\n            { type: 'touchend', listener: this.onTouchEnd.bind( this ) },\n            { type: 'touchmove', listener: this.onTouchMove.bind( this ) },\n        ];\n\n        this.mouseMoveUpListeners = [\n            { type: 'mousemove', listener: this.onMouseMove.bind( this ) },\n            { type: 'mouseup', listener: this.onMouseUp.bind( this ) },\n        ];\n\n        this.controler.addListeners( this.eventListeners );\n\n        this.update();\n\n    }\n\n    dispose() {\n\n        this.controler.removeListeners( this.eventListeners, this.mouseMoveUpListeners );\n\n    }\n\n    update() {\n\n        const position = this.camera.getVec3Position();\n\n        this._offset.copy( position ).sub( this.target );\n        this._spherical.setFromVecor3( this._offset );\n\n        if ( this.autoRotate && this._state === this.STATE.NONE )\n            this.rotateLeft( this.getAutoRotationAngle() );\n\n        this._spherical.theta += this._sphericalDelta.theta;\n        this._spherical.phi += this._sphericalDelta.phi;\n\n        this._spherical.theta = Math.max( this.minAzimuthAngle, Math.min( this.maxAzimuthAngle, this._spherical.theta ) );\n        this._spherical.phi = Math.max( this.minPolarAngle, Math.min( this.maxPolarAngle, this._spherical.phi ) );\n        this._spherical.makeSafe();\n\n        if ( this._scale !== 1 )\n            this._zoomFrag = this._spherical.radius * ( this._scale - 1 );\n\n        this._spherical.radius += this._zoomFrag;\n\n        this._spherical.radius = Math.max( this.minDistance, Math.min( this.maxDistance, this._spherical.radius ) );\n\n        this.target.add( this._panOffset );\n        this._offset.setFromSpherical( this._spherical );\n        position.copy( this.target ).add( this._offset );\n\n        this.camera.updateViewMatrix( this.target );\n\n        if ( this.enableDamping === true ) {\n\n            this._sphericalDump.theta *= ( 1 - this.dampingFactor );\n            this._sphericalDump.phi *= ( 1 - this.dampingFactor );\n            this._zoomFrag *= ( 1 - this.zoomFactor );\n\n            if ( this._isMouseUp ) {\n\n                this._sphericalDelta.theta = this._sphericalDump.theta;\n                this._sphericalDelta.phi = this._sphericalDump.phi;\n\n            } else\n                this._sphericalDelta.set( 0, 0, 0 );\n\n        } else {\n\n            this._sphericalDelta.set( 0, 0, 0 );\n            this._zoomFrag = 0;\n\n        }\n\n        this._scale = 1;\n        this._panOffset.set( 0, 0, 0 );\n\n    }\n\n    getAutoRotationAngle() {\n\n        return 2 * Math.PI / 60 / 60 / this.autoRotateSpeed;\n\n    }\n\n    getZoomScale() {\n\n        return Math.pow( 0.95, this.zoomSpeed ); // eslint-disable-line\n\n    }\n\n    rotateLeft( angle ) {\n\n        this._sphericalDelta.theta -= angle;\n        if ( this.enableDamping )\n            this._sphericalDump.theta = - angle;\n\n    }\n\n    rotateUp( angle ) {\n\n        this._sphericalDelta.phi -= angle;\n        if ( this.enableDamping )\n            this._sphericalDump.phi = - angle;\n\n    }\n\n    panLeft( distance, worldMatrix ) {\n\n        this._vPan.setFromArray( worldMatrix, 0 );\n        this._vPan.multiScalar( - distance );\n\n        this._panOffset.add( this._vPan );\n\n    }\n\n    panUp( distance, worldMatrix ) {\n\n        this._vPan.setFromArray( worldMatrix, 4 );\n        this._vPan.multiScalar( distance );\n\n        this._panOffset.add( this._vPan );\n\n    }\n\n    pan( deltaX, deltaY ) {\n\n        const element = this.domElement === document ? this.domElement.body : this.domElement;\n\n        if ( this.camera.isPerspectiveCamera ) {\n\n            const position = this.camera.getVec3Position();\n            this._vPan.copy( position ).sub( this.target );\n            let targetDisitance = this._vPan.length();\n\n            targetDisitance *= ( this.camera.fov / 2 ) * ( Math.PI / 180.0 );\n\n            this.panLeft( 2 * deltaX * ( targetDisitance / element.clientHeight ), this.camera.matrix );\n            this.panUp( 2 * deltaY * ( targetDisitance / element.clientHeight ), this.camera.matrix );\n\n        } else if ( this.camera.isOrthographicCamera ) {\n\n            this.panLeft( deltaX * ( this.camera.right - this.camera.left ) / this.camera.zoom / element.clientHeight, this.camera.matrix );\n            this.panUp( deltaY * ( this.camera.top - this.camera.bottom ) / this.camera.zoom / element.clientHeight, this.camera.matrix );\n\n        }\n\n    }\n\n    zoomIn( zoomScale ) {\n\n        if ( this.camera.isPerspectiveCamera )\n            this._scale /= zoomScale;\n        else if ( this.camera.isOrthographicCamera ) {\n\n            this.camera.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.camera.zoom * zoomScale ) );\n            this.camera.updateProjMatrix();\n\n        }\n\n    }\n\n    zoomOut( zoomScale ) {\n\n        if ( this.camera.isPerspectiveCamera )\n            this._scale *= zoomScale;\n        else if ( this.camera.isOrthographicCamera ) {\n\n            this.camera.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.camera.zoom / zoomScale ) );\n            this.camera.updateProjMatrix();\n\n        }\n\n    }\n\n    handleMouseDownRotate( event ) {\n\n        this._rotateStart.set( event.clientX, event.clientY );\n\n    }\n\n    handleMouseDownZoom( event ) {\n\n        this._zoomStart.set( event.clientX, event.clientY );\n\n    }\n\n    handleMouseDownPan( event ) {\n\n        this._panStart.set( event.clientX, event.clientY );\n\n    }\n\n    handleMouseMoveRotate( event ) {\n\n        this._rotateEnd.set( event.clientX, event.clientY );\n        this._rotateDelta.subVectors( this._rotateEnd, this._rotateStart );\n\n        const element = this.domElement === document ? document.body : this.domElement;\n\n        this.rotateLeft( 2 * Math.PI * ( this._rotateDelta.x / element.clientWidth ) * this.rotateSpeed );\n        this.rotateUp( 2 * Math.PI * ( this._rotateDelta.y / element.clientHeight ) * this.rotateSpeed );\n\n        this._rotateStart.copy( this._rotateEnd );\n\n        this.update();\n\n    }\n\n    handleMouseMoveZoom( event ) {\n\n        this._zoomEnd.set( event.clientX, event.clientY );\n        this._zoomDelta.subVectors( this._zoomEnd, this._zoomStart );\n\n        if ( this._zoomDelta.y > 0 )\n            this.zoomIn( this.getZoomScale() );\n        else if ( this._zoomDelta.y < 0 )\n            this.zoomOut( this.getZoomScale() );\n\n        this._zoomStart.copy( this._zoomEnd );\n\n        this.update();\n\n    }\n\n    handleMouseMovePan( event ) {\n\n        this._panEnd.set( event.clientX, event.clientY );\n        this._panDelta.subVectors( this._panEnd, this._panStart );\n\n        this.pan( this._panDelta.x, this._panDelta.y );\n\n        this._panStart.copy( this._panEnd );\n\n        this.update();\n\n    }\n\n    handleMouseWheel( event ) {\n\n        if ( event.deltaY < 0 )\n            this.zoomOut( this.getZoomScale() );\n        else if ( event.deltaY > 0 )\n            this.zoomIn( this.getZoomScale() );\n\n        this.update();\n\n    }\n\n    handleKeyDown( event ) {\n\n        switch ( event.keyCode ) {\n\n        case this.keys.UP:\n            this.pan( 0, this.keyPanSpeed );\n            this.update();\n            break;\n        case this.keys.BOTTOM:\n            this.pan( 0, - this.keyPanSpeed );\n            this.update();\n            break;\n        case this.keys.LEFT:\n            this.pan( this.keyPanSpeed, 0 );\n            this.update();\n            break;\n        case this.keys.RIGHT:\n            this.pan( - this.keyPanSpeed, 0 );\n            this.update();\n            break;\n\n        }\n\n    }\n\n    handleTouchStartRotate( event ) {\n\n        this._rotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n    }\n\n    handleTouchStartZoom( event ) {\n\n        const dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n        const dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n        const distance = Math.sqrt( dx * dx + dy * dy );\n\n        this._zoomStart.set( 0, distance );\n\n    }\n\n    handleTouchStartPan( event ) {\n\n        this._panStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n    }\n\n    handleTouchMoveRotate( event ) {\n\n        this._rotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n        this._rotateDelta.subVectors( this._rotateEnd, this._rotateStart );\n\n        const element = this.domElement === document ? this.domElement.body : this.domElement;\n\n        this.rotateLeft( 2 * Math.PI * this._rotateDelta.x / element.clientWidth * this.rotateSpeed );\n        this.rotateUp( 2 * Math.PI * this._rotateDelta.y / element.clientHeight * this.rotateSpeed );\n\n        this._rotateStart.copy( this._rotateEnd );\n\n        this.update();\n\n    }\n\n    handleTouchMoveZoom( event ) {\n\n        const dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n        const dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n        const distance = Math.sqrt( dx * dx + dy * dy );\n\n        this._zoomEnd.set( 0, distance );\n\n        this._zoomDelta.subVectors( this._zoomEnd, this._zoomStart );\n\n        if ( this._zoomDelta.y > 0 )\n            this.zoomOut( this.getZoomScale() );\n        else if ( this._zoomDelta.y < 0 )\n            this.zoomIn( this.getZoomScale() );\n\n        this._zoomStart.copy( this._zoomEnd );\n\n        this.update();\n\n    }\n\n    handleTouchMovePan( event ) {\n\n        this._panEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n        this._panDelta.subVectors( this._panEnd, this._panStart );\n\n        this.pan( this._panDelta.x, this._panDelta.y );\n\n        this._panStart.copy( this._panEnd );\n\n        this.update();\n\n    }\n\n    onMouseDown( event ) {\n\n        if ( this.enable === false ) return;\n\n        event.preventDefault();\n\n        this._isMouseUp = false;\n\n        switch ( event.button ) {\n\n        case this.mouseButtons.ORBIT:\n            if ( this.enableRotate === false ) return;\n\n            this.handleMouseDownRotate( event );\n            this._state = this.STATE.ROTATE;\n            break;\n\n        case this.mouseButtons.ZOOM:\n            if ( this.enableZoom === false ) return;\n\n            this.handleMouseDownZoom( event );\n            this._state = this.STATE.ZOOM;\n            break;\n\n        case this.mouseButtons.PAN:\n            if ( this.enablePan === false ) return;\n\n            this.handleMouseDownPan( event );\n            this._state = this.STATE.PAN;\n            break;\n\n        }\n\n        if ( this._state !== this.STATE.NONE )\n            this.controler.addListeners( this.mouseMoveUpListeners );\n\n    }\n\n    onMouseMove( event ) {\n\n        if ( this.enable === false ) return;\n\n        event.preventDefault();\n\n        switch ( this._state ) {\n\n        case this.STATE.ROTATE:\n            if ( this.enableRotate === false ) return;\n\n            this.handleMouseMoveRotate( event );\n            break;\n\n        case this.STATE.ZOOM:\n            if ( this.enableZoom === false ) return;\n\n            this.handleMouseMoveZoom( event );\n            break;\n\n        case this.STATE.PAN:\n            if ( this.enablePan === false ) return;\n\n            this.handleMouseMovePan( event );\n            break;\n\n        }\n\n    }\n\n    onMouseUp() {\n\n        if ( this.enable === false ) return;\n\n        this._isMouseUp = true;\n\n        this.controler.removeListeners( this.mouseMoveUpListeners );\n\n        this._state = this.STATE.NONE;\n\n    }\n\n    onMouseWheel( event ) {\n\n        if ( this.enable === false || this.enableZoom === false || ( this._state !== this.STATE.NONE && this._state !== this.STATE.ROTATE ) ) return;\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        this.handleMouseWheel( event );\n\n    }\n\n    onKeyDown( event ) {\n\n        if ( this.enable === false || this.enableKeys === false || this.enablePan === false ) return;\n\n        this.handleKeyDown( event );\n\n    }\n\n    onTouchStart( event ) {\n\n        if ( this.enable === false ) return;\n\n        this._isMouseUp = false;\n\n        switch ( event.touches.length ) {\n\n        case 1: // one-fingered touch: rotate\n\n            if ( this.enableRotate === false ) return;\n\n            this.handleTouchStartRotate( event );\n\n            this._state = this.STATE.TOUCH_ROTATE;\n\n            break;\n\n        case 2: // two-fingered touch: dolly\n\n            if ( this.enableZoom === false ) return;\n\n            this.handleTouchStartZoom( event );\n\n            this._state = this.STATE.TOUCH_ZOOM;\n\n            break;\n\n        case 3: // three-fingered touch: pan\n\n            if ( this.enablePan === false ) return;\n\n            this.handleTouchStartPan( event );\n\n            this._state = this.STATE.TOUCH_PAN;\n\n            break;\n\n        default:\n\n            this._state = this.STATE.NONE;\n\n        }\n\n    }\n\n    onTouchMove( event ) {\n\n        if ( this.enable === false ) return;\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        switch ( event.touches.length ) {\n\n        case 1: // one-fingered touch: rotate\n\n            if ( this.enableRotate === false ) return;\n            if ( this._state !== this.STATE.TOUCH_ROTATE ) return;\n            this.handleTouchMoveRotate( event );\n\n            break;\n\n        case 2: // two-fingered touch: dolly\n\n            if ( this.enableZoom === false ) return;\n            if ( this._state !== this.STATE.TOUCH_ZOOM ) return;\n\n            this.handleTouchMoveZoom( event );\n\n            break;\n\n        case 3: // three-fingered touch: pan\n\n            if ( this.enablePan === false ) return;\n            if ( this._state !== this.STATE.TOUCH_PAN ) return;\n\n            this.handleTouchMovePan( event );\n\n            break;\n\n        default:\n\n            this._state = this.STATE.NONE;\n\n        }\n\n    }\n\n    onTouchEnd() {\n\n        if ( this.enable === false ) return;\n\n        this._isMouseUp = true;\n\n        this._state = this.STATE.NONE;\n\n    }\n\n    onContextMenu( event ) {\n\n        if ( this.enable === false ) return;\n        event.preventDefault();\n\n    }\n\n}\n\nexport { OrbitControls };\n"],"names":["Vector3","x","y","z","raw","Quaternion","w","arguments","length","this","slice","Matrix4","identity","getGLTypeFromTypedArray","typedArray","Int8Array","BYTE","Uint8Array","UNSIGNED_BYTE","Uint8ClampedArray","Int16Array","SHORT","Uint16Array","UNSIGNED_SHORT","Int32Array","INT","Uint32Array","UNSIGNED_INT","Float32Array","FLOAT","Error","getTypedArrayTypeFromGLType","type","arrayType","glTypeToTypedArray","getTypedArray","array","Type","isArrayBuffer","Transform","_position","_scale","_rotation","_quaternion","matrix","normMat","worldMatrix","forward","up","right","_needUpdateMatrix","needUpdateWorldMatrix","isWebGL2","gl","texStorage2D","getHTMLElementSrc","id","ele","document","getElementById","textContent","idx","indexOf","createShader","src","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","str","lines","split","limitLength","toString","prefix","map","line","index","substring","i","join","addLineNum","getShaderInfoLog","createProgram","vs","fs","opts","vShader","fShader","VERTEX_SHADER","FRAGMENT_SHADER","prog","attachShader","bindAttribLocation","Constant","transformFeedbackVaryings","varyings","Array","isArray","Object","keys","transformFeedbackMode","SEPARATE_ATTRIBS","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","undefined","validateProgram","VALIDATE_STATUS","detachShader","deleteShader","getBindPointForSamplerType","typeMap","bindPoint","intSetter","location","v","uniform1i","intArraySetter","uniform1iv","intVec2Setter","uniform2iv","intVec3Setter","uniform3iv","intVec4Setter","uniform4iv","samplerSetter","unit","textureOrPair","texture","sampler","WebGLTexture","activeTexture","TEXTURE0","bindTexture","bindSampler","samplerArraySetter","size","units","ii","textures","forEach","floatAttribSetter","b","bindBuffer","ARRAY_BUFFER","buffer","enableVertexAttribArray","vertexAttribPointer","numComponents","normalize","stride","offset","divisor","vertexAttribDivisor","intAttribSetter","vertexAttribIPointer","matAttribSetter","typeInfo","defaultSize","count","rowOffset","isBuiltIn","info","name","startsWith","createAttributesSetters","program","attribSetters","numAttribs","ACTIVE_ATTRIBUTES","attribInfo","getActiveAttrib","getAttribLocation","attrTypeMap","setter","setAttributes","setters","buffers","attrib","createUniformSetters","createUnifromSetter","uniformInfo","getUniformLocation","substr","uint","textureUnit","arraySetter","uniformSetters","numUnifroms","ACTIVE_UNIFORMS","getActiveUniform","keyMap","key","replace","setUniforms","unifroms","numArgs","vals","numVals","j","prototype","hasOwnProperty","call","createUniformBlockSpec","uniformData","uniformIndices","push","pair","gname","getActiveUniforms","value","blockSpecs","numUniformBlock","ACTIVE_UNIFORM_BLOCKS","getActiveUniformBlockName","blockSpec","getActiveUniformBlockParameter","UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER","UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER","UNIFORM_BLOCK_DATA_SIZE","UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES","used","usedByVertexShader","usedByFragmentShader","createUniformBlockInfo","uniformBlockSpec","blockName","warn","ArrayBuffer","createBuffer","uniformBufferIndex","UNIFORM_BUFFER","uniformBlockBinding","arraySuffixRE","test","uniforms","uniformidx","data","BYTES_PER_ELEMENT","createUniformBlockInfos","uboInfos","bindUniformBlock","uniformBlcokInfo","bufferBindIndex","bindBufferRange","byteLength","setUniformBlock","uniformBlockInfo","bufferData","DYNAMIC_DRAW","setBlockUniforms","values","changed","set","setBlockUniformsForProgram","uniformBlockInfos","createTransformFeedbackInfo","numVaryings","TRANSFORM_FEEDBACK_VARYINGS","varying","getTransformFeedbackVarying","createTransformFeedback","transformfeedbaclnfo","bufferInfo","tf","bindTransformFeedback","TRANSFORM_FEEDBACK","useProgram","attribs","buf","TRANSFORM_FEEDBACK_BUFFER","bindBufferBase","isIndices","getArray","guessNumComponentsFromName","colorRE","textureRE","getNumComponents","createBufferFromTypedArray","drawType","STATIC_DRAW","WebGLBuffer","createBufferFromArray","ELEMENT_ARRAY_BUFFER","createAttribsFromArrays","arrays","attribName","normalization","numEle","numBytes","typedArrayType","getGLTypeFromTypedArrayType","createBufferInfoFromArrays","indices","newIndices","numElements","elementType","positionNames","getBufferParameter","BUFFER_SIZE","Math","floor","bytesPerValue","getBytesPerValueForGLType","totalElements","getNumElementsFromAttribs","setTypedArrayToBuffer","Matrix3","Shader","cullFace","blend","depth","sampleBlend","shaders","programs","programMap","camera","currentUniformObj","uniformObj","programInfos","uniformObjs","_programUpdated","setDefines","insertToString","string","position","CommonVAOShader","deactivate","Model","mesh","enablePick","transform","node","_uniformObj","getSquareDistance","p1","p2","dx","dy","dz","getSquareSegmentDistance","p","t","simplify","points","tolerance","highestQuality","sqTolerance","prevPoint","newPoints","point","len","simplifyRadialDistance","markers","first","last","stack","maxSqDist","sqDist","pop","simplifyDouglasPeucker","Mesh","attribArrays","options","prop","assign","deIndexAttribs","modelMesh","drawMode","tempAry","vao","GridAxisShader","setCamera","setUniformObj","u_colors","FlatTextureShader","u_texture","nightTex","dayTex","rate","DynamicSkyboxShader","u_dayTex","u_nightTex","u_rate","PointlightShader","pointSize","color","ColorPointShader","setPointSize","setColor","PhongLightShader","ColorpickShader","WireframeShader","MeshLineShader","TransformShader","transformfeedbackInfo","_customAttrib","GLTFShader","_maxVertexAttribs","getParameter","MAX_VERTEX_ATTRIBS","MeshLineModel","meshModel","widthCallback","error","meshc","process","empty","getFormatAndTypeFromInternalFormat","internalFromat","textureInternalFormatInfo","textureFormat","setTextureTo1PixelColor","tex","defaults","textureOptions","target","TEXTURE_2D","colorUsed","textureColor","make1Pixel","TEXTURE_CUBE_MAP","texImage2D","TEXTURE_CUBE_MAP_POSITIVE_X","RGBA","TEXTURE_3D","TEXTURE_2D_ARRAY","texImage3D","loadImage","url","crossOrigin","callback","clearEventHandlers","removeEventListener","onError","onLoad","img","cb","Image","cors","getDefaultCrossOrigin","addEventListener","savePatcState","colorspaceConversion","UNPACK_COLORSPACE_CONVERSION_WEBGL","pixelStorei","premultiplyAlpha","UNPACH_PREMULTIPLY_ALPHA_WEBGL","flipY","UNPACK_FLIP_Y_WEBGL","restorePackState","lastPackState","getCubeFacesOrder","cubeFaceOrder","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z","getCubeFacesWithIdx","facesWithIdx","face","sort","a","shouldAutoSetTextureFiltering","auto","level","isPowerOf2","setTextureFiltering","widthP","heightP","internalFormatP","typeP","internalFormat","width","height","colorRenderable","textureFilterable","canGenerateMipmap","generateMipmap","filtering","canFilter","LINEAR","NEAREST","texParameteri","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","setTextureParameters","parameteriFn","minMag","min","mag","wrap","WebGLSamplerCtor","TEXTURE_WRAP_R","wrapR","wrapS","wrapT","minLod","TEXTURE_MIN_LOD","maxLod","TEXTURE_MAX_LOD","baseLevel","TEXTURE_BASE_LEVEL","maxLevel","TEXTURE_MAX_LEVEL","setTextureFromElement","element","format","formatType","imgWidth","imgHeight","slices","nodeName","canvas","f","xOffset","yOffset","drawImage","ctx","smallest","largest","max","xMult","yMult","d","srcX","srcY","srcW","srcH","dstW","dstH","texSubImage3D","getTextureTypeFromArrayType","defaultType","guessDimensions","cWith","cHeight","sqrt","setTextureFromArray","typedSrc","bytesPerElement","bytesPerElementMap","getBytesPerElementForInternalFromat","glEnumToString","dimensions","cbrt","UNPACK_ALIGNMENT","unpackAlignment","faceSize","subarray","loadCubeMapFromUrls","urls","numToLoad","errors","faces","imgs","faceTarget","err","otherTarget","uploadImg","loadSlicesFromUrls","firstImage","s","createTexture","asyncOpts","imgBK","HTMLElement","setEmptyTexture","resizeTexture","clear","r","g","clearColor","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","Camera","projMat","viewMat","PerspectiveCamera","fov","aspect","near","far","_fov","fovRadian","PMath","degree2Radian","perspective","OrthographicCamera","zoom","left","bottom","top","ortho","Vector2","Spherical","radius","phi","theta","FileLoader","files","items","addFiles","LinePaser","cArray","Node","nameModel","isModel","setModel","nodeCount","children","parent","model","GLTFLoader","currentSceneName","errorMiss","nodeType","console","PointHelper","pointColor","POINTS","colors","ColorLineShader","setColors","LineHelper","normalLength","vertices","_getdata","LINES","setTransform","copyToWorldMatrix","Grad","fade","lerp","generateNormals","rowCount","colCount","yin","pos","xMax","yMax","nx","ny","nz","nl","hl","hr","ht","normals","vtxCount","isRenderbuffer","glRenderbuffer","createRenderbuffer","constructor","isTexture","glTexture","createFramebufferInfo","attachments","defaultAttachment","drawingBufferWidth","drawingBufferHeight","FRAMEBUFFER","fb","createFramebuffer","bindFramebuffer","colorAttachmentCount","framebufferInfo","attachmentOptions","attachment","attachmentPoint","attachmentsByFormat","getAttachmentPointForFormat","COLOR_ATTACHMENT0","renderbufferFormats","isRenderbufferFormat","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","framebufferRenderbuffer","framebufferTexture2D","texTarget","colorBuffers","drawBuffers","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","FRAMEBUFFER_INCOMPLETE_ATTACHMENT","log","FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_DIMENSIONS","FRAMEBUFFER_UNSUPPORTED","FRAMEBUFFER_INCOMPLETE_MULTISAMPLE","RENDERBUFFER_SAMPLES","bindFramebufferInfo","framebuffer","viewport","readPixcelFromFrameBufferInfo","pix","readBuffer","readPixels","resizeFramebufferInfo","attachmentOpts","id2Color","color2Id","colorArray","FramebufferPicker","controler","models","blankColor","blankId","flag","isActive","updateCanvasParam","eventListeners","listener","onmouseclick","bind","addListeners","ScreenQuadShader","setFlipy","BufferPicker","bufferIdx","addFunctionsToArrays","ary","func","splice","createEventListener","funcs","bindpoint","functions","e","enable","Controler","mouseDownListeners","mouseMoveListeners","mouseUpListeners","mouseWheelListeners","keydownListeners","keyupListeners","touchStartListeners","touchMoveListeners","touchEndListeners","mouseClickListeners","mouseLeftClickListeners","mouseMiddleClickListeners","mouseRightClickListeners","oncontext","preventDefault","onmousedown","onmousemove","onmouseup","onwheel","onkeydown","onkeyup","ontouchstart","ontouchmove","ontouchend","onmouseleftclick","onmousemiddleclick","onmouserightclick","_flag","self","button","BUTTONS","LEFT","MIDDLE","RIGHT","Scene","renderer","shadersMap","helpers","helpersMap","root","context","quad2UnitModel","Quad","createModel","u_resolution","DEPTH_STENCIL","bufferPicker","setPick","weightLinearLerp","out","v1","v2","quaternionLinearSlerp","slerp","Animator","rawData","_parseRawData","_playList","ATTRIB_POSITION_NAME","ATTRIB_POSITION_LOC","ATTRIB_UV_NAME","ATTRIB_UV_LOC","ATTRIB_NORMAL_NAME","ATTRIB_NORMAL_LOC","ATTRIB_BARYCENTRIC_NAME","ATTRIB_BARYCENTRIC_LOC","UNIFORM_WORLD_MAT_NAME","UNIFORM_VIEW_MAT_NAME","UNIFORM_PROJ_MAT_NAME","UNIFORM_MVP_MAT_NAME","UNIFORM_VP_MAT_NAME","UNIFORM_NORMAL_MAT_NAME","UNIFORM_PREFIX","UNIFORM_CAMPOS","TRIANGLES","RADIAN_PER_DEGREE","PI","degree","tarMin","tarMax","abs","defineProperties","fromSpherical","m","te","m11","m12","m13","m22","m23","m32","m33","asin","clamp","atan2","dotVectors","frag","result","crossVectors","q","transformQuat","ax","ay","az","bx","by","bz","sinPhiRadius","sin","cos","qx","qy","qz","qw","ix","iy","iz","iw","fromEuler","vFrom","vTo","dot","Map","cross","invert","l","c1","c2","c3","s1","s2","s3","a0","a1","a2","a3","invDot","aw","bw","omega","cosom","sinom","scale0","scale1","acos","m21","m31","trace","translate","rad","rotateX","rotateY","rotateZ","matArray","quat","fromQuat","mult","scale","quaternion","fromRotationTranslationScale","tan","nf","lr","bt","a01","a02","a03","a12","a13","a23","a00","a10","a11","a20","a21","a22","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","b0","b1","b2","b3","c","axis","b12","b20","b21","b22","mat","eye","x0","x1","x2","y0","y1","y2","z0","z1","z2","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","a4","a5","a6","a7","a8","a9","a14","a15","b4","b5","b6","b7","b8","b9","b13","b14","b15","xx","yx","yy","zx","zy","zz","wx","wy","wz","xy","xz","yz","sx","sy","sz","S","n11","n12","n13","n14","n21","n22","n23","n24","n31","n32","n33","n34","clone","determinant","invSX","invSY","invSZ","fromMatrix4","window","SharedArrayBuffer","tt","setPosition","setScale","setRotation","setQuaternion","fromTRS","normalMat3","transformVec4","copy","mat4","reset","applyQuaternion","setFromRotationMatrix","setFromEuler","rotation","args","updateQuaternion","updateEuler","haveEnumsForType","enums","existing","uniform1f","uniform1fv","uniform2fv","uniform3fv","uniform4fv","uniform1ui","uniform1uiv","uniform2uiv","uniform3uiv","uniform4uiv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","uniformMatrix2x3fv","uniformMatrix2x4fv","uniformMatrix3x2fv","uniformMatrix3x4fv","uniformMatrix4x2fv","uniformMatrix4x3fv","currentProgram","equalsFun","equals","arrayEquals","arrayClone","obj","_this","setUniformObjProp","mat4Array","_needCamPos","setProjMatrix","setViewMatrix","CURRENT_PROGRAM","deleteProgram","_this2","activate","updateCamera","_needMVPMat","_needVPMat","temp","CULL_FACE","BLEND","depthMask","SAMPLE_ALPHA_TO_COVERAGE","preRender","setWorldMatrix","getWorldMatrix","_needNormMat","bindVertexArray","instanceCount","drawElementsInstanced","drawElements","drawArraysInstanced","drawArrays","defines","currentProgNum","defs","currentShaders","injectDefines","updateProgram","filter","shadersrc","newShader","define","create","getDefaultShader","commonVAOShader","_name","arrayQuat","_drawMode","_cullFace","_blend","_depth","_sampleBlend","_instanceCount","_offset","_updateVao","createBufferInfo","createVAO","deleteVertexArray","createVertexArray","BezierCurve","p0","p3","invt","numPoints","highlyMinify","getPoint","_bufferInfo","updated","GridAxis","div","createMesh","step","half","createVertices","helfSize","Cube","h","uv","Sphere","subdivAixs","subdivHeight","startLon","endLon","startLat","endLat","latRange","lonRange","positions","uvs","u","sinTheta","cosTheta","sinPhi","ux","uy","uz","numVertAround","Curve","tolerence","bpoints","concat","getPoints","vec3","reduce","Render","fps","lastTime","frameTimeLimit","run","currentTime","performance","now","timespan","requestAnimationFrame","getOrientMatrix","u_color","u_pSize","stroke","fill","STREAM_COPY","transformFeedback","RASTERIZER_DISCARD","beginTransformFeedback","renderModel","endTransformFeedback","disable","MorphTargetNumPrefix","MORPH_POSITION_PREFIX","MORPH_NORMAL_PREFIX","MORPH_TANGENT_PREFIX","makeSafeGLTF","attribNum","morphInfo","morphAttribCount","morphPosition","morphNormal","morphTangent","morphDefine","originCount","Number","morphCount","activerAttribNum","num","getMorphTargetDefine","morphTargetNum","originPositionArrays","originNormalArrays","originTangentArrays","originPositionBufferInfo","originNormalBufferInfo","originTangentBufferInfo","compareWeight","weight","compareNum","lastWeight","currentWeight","newWeights","weights","origin","updateBufferInfo","makeSafe","resortMorph","idx1","idx2","ai","bi","conters","previous","next","side","comparePos","copyPos","n","positionArray","positionBuffer","a_previous","a_next","a_side","ndx","regex","RegExp","match","URL","WebGLSampler","createElement","getContext","Renderer","canvasOrId","names","VERSION","multiplier","BACK","frontFace","CCW","DEPTH_TEST","depthFunc","LEQUAL","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","style","clientWidth","clientHeight","updateViewport","resizeCanvasToDisplaySize","getVec3Position","lookAt","other","OrbitControls","domElement","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","zoomFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","UP","BOTTOM","mouseButtons","ZOOM","PAN","_spherical","_sphericalDelta","_sphericalDump","_zoomFrag","_panOffset","_isMouseUp","_vPan","_rotateStart","_rotateEnd","_rotateDelta","_panStart","_panEnd","_panDelta","_zoomStart","_zoomEnd","_zoomDelta","STATE","ROTATE","TOUCH_ROTATE","TOUCH_ZOOM","TOUCH_PAN","_state","NONE","onMouseDown","onMouseWheel","onKeyDown","onTouchStart","onTouchEnd","onTouchMove","mouseMoveUpListeners","onMouseMove","onMouseUp","update","removeListeners","sub","setFromVecor3","rotateLeft","getAutoRotationAngle","add","setFromSpherical","updateViewMatrix","pow","angle","distance","setFromArray","multiScalar","deltaX","deltaY","body","isPerspectiveCamera","targetDisitance","panLeft","panUp","isOrthographicCamera","zoomScale","updateProjMatrix","event","clientX","clientY","subVectors","rotateUp","zoomIn","getZoomScale","zoomOut","pan","keyCode","touches","pageX","pageY","ORBIT","handleMouseDownRotate","handleMouseDownZoom","handleMouseDownPan","handleMouseMoveRotate","handleMouseMoveZoom","handleMouseMovePan","stopPropagation","handleMouseWheel","handleKeyDown","handleTouchStartRotate","handleTouchStartZoom","handleTouchStartPan","handleTouchMoveRotate","handleTouchMoveZoom","handleTouchMovePan","toLowerCase","basename","getBasename","addFile","file","filepath","getExtension","getFilename","promises","item","types","promise","Promise","all","then","resolve","TextDecoder","decode","il","String","fromCharCode","decodeURIComponent","escape","fetch","response","text","json","loader","basepath","getBasepath","uri","images","imageRes","load","resources","arrayBuffer","BINARY_EXTENSION_CHUNK_TYPES","content","headerView","DataView","header","decodeText","getUint32","magic","version","chunkView","chunkIndex","chunkLength","chunkType","contentArray","byteOffset","JSON","parse","isParsed","dbuffer","trim","unshift","parseFloat","ObjLoader","filePath","res","objText","flipYUV","flip","currentObject","objects","vt","vn","oVert","oUV","oNorm","oIndex","fCache","vertCount","isQuad","ind","linePaser","init","getType","getFloatData","shift","parseInt","a_uv","a_normal","updateMatrix","updateNormalMatrix","updateDirection","afterUpdateMatrix","executeFun","traverse","traversePostOrder","execuFunPre","execuFunPost","traverseTwoExeFun","remove","nodelike","updateMatrixMarker","updateWorldMatrix","updateNormalAndDirection","property","finded","asset","minVersion","_generator","sceneId","gltf","generator","parseScene","parseAnimations","convertToNode","animations","animation","channels","samplers","clips","channel","input","parseAccessor","outputData","output","interpolation","gltfNodeIdx","path","combinedOutput","numComp","k","nodeProperty","extras","uniformName","MORPH_WEIGHT_UNIFORM","clip","GLTF_NODE_INDEX_PROPERTY","loadScene","scene","scenes","nodes","parseNode","infos","trivarse","trivarseFun","parentNode","nodeInfos","rootNode","skins","nodeInfo","nodeId","translation","decompose","addChild","primitives","primitive","modelName","meshName","uniformobj","skinDefines","skin","material","baseColorTexture","baseColorFactor","metallicFactor","roughnessFactor","doubleSided","metallicRoughnessTexture","normalTexture","occlusionTexture","emissiveTexture","enableBlend","alphaCutoff","ALPHA_CUTOFF_UNIFORM","BASE_COLOR_UNIFORM","METALROUGHNESS_UNIFORM","textureIdx","BASE_COLOR_TEXTURE_UNIFORM","METALROUGHNESS_TEXTURE_UNIFORM","NORMAL_TEXTURE_UNIFORM","NORMAL_SCALE_UNIFORM","OCCLUSION_TEXTURE_UNIFORM","OCCLUSION_FACTOR_UNIFORM","strength","EMISSIVE_TEXTURE_UNIFORM","EMISSIVE_FACTOR_UNIFORM","emissiveFactor","gltfPrimitives","skinsNum","updateJointUniformFuncs","joints","skeleton","inverseBindMatrices","jointNum","globalJointTransformNodes","findInChildren","globalTransformNode","SCENE_ROOT_SKELETON","fragWorld","jointMats","IDENTITY_INVERSE_BIND_MATRICES","JOINT_MATRICES_UNIFORM","dnode","parseMesh","parseSkin","skinId","dskin","getJointsNumDefine","accessor","matrices","meshId","meshes","dprimitives","attributes","mode","targets","dprimitive","hasNormal","hasTangent","texCoordNum","jointVec8","vertexColor","attribute","getHasNormalDefine","getHasTangentDefine","getTexCoordDefine","getJointVec8Define","getVertexColorDefine","dmaterial","parseMaterial","getMeshNameCounter","getModelNameCounter","getMorphTargetsDefine","hasPositions","hasNormals","hasTangents","getMorphtargetPositionDefine","getMorphtargetNormalDefine","getMorphtargetTangentDefine","accessorId","accessors","daccessor","normalized","bufferView","bufferViews","byteStride","componentType","componentsBytes","parseBufferView","getTypedArrayFromArrayBuffer","sparse","indicesByteOffset","indicesBufferView","indicesArrayType","indicesBuffer","indicesArray","valuesByteOffset","valuesBufferView","valuesBuffer","valuesArray","computeResult","componentVals","bufferViewId","dbufferView","parseBuffer","bufferArray","bufferId","base64Idx","BASE64_MARKER","blob","atob","bytes","charCodeAt","materialId","defaultMaterial","materials","pbrMetallicRoughness","alphaMode","getAlphaMaskDefine","getAlphaBlendDdefine","parseTexture","texCoord","getBaseColorTextureDefine","getMetalRoughnessDefine","getNormalMapDefine","getOcclusionMapDefine","getEmissiveMapDefine","textureId","dtexture","source","image","parseImage","imgsampler","parseSampler","imageId","dimage","mimeType","arrayBufferView","Blob","imageUrl","webkitURL","createObjectURL","imageres","samplerId","dsampler","magFilter","minFilter","counter","texNum","targetNum","normalPos","positionInfo","normalInfo","isMesh","start","normal","strip","sStrip","nStrip","grad3","perm","gradP","F2","G2","Perlin","seed","xin","n0","n1","n2","i1","j1","gi0","gi1","gi2","t0","dot2","t1","t2","zin","n3","k1","i2","j2","k2","x3","y3","z3","gi3","dot3","t3","X","Y","n00","n01","n10","Z","n000","n001","n010","n011","n100","n101","n110","n111","Terrain","time","setTime","timeSpan","addTime","minHeight","maxHeight","baseHeight","perlinFreq","random","rowStart","colStart","idxCount","rowStrid","colStrid","currentRow","currentCol","uvXStrid","uvYStrid","perlin3","newTime","maxId","addModels","removeModels","box","getBoundingClientRect","offsetX","offsetY","lastCanvasWidth","lastCanvasHeight","needPick","pickx","picky","render","pick","u_flipy","ratio","listenersOpts","listenerOptions","addFunction","removeFunction","objs","addModelToShader","helper","addDataToHelper","addNodeToShader","shaderIdx","shaderObj","u_colorId","nodep","shaderModels","modelIdx","helperIdx","datas","helperObj","removeModelFromShader","removeDataFromHelper","_this3","needUpdateColorId","_this4","dataIdx","resize","setTexture","curShader","curShaderObj","curModel","setData","_this5","setActivate","animate","currentIdx","sumTime","dtime","minTime","maxTime","times","lerpFun","setTarget","animateMaxTime","animateMinTime","timePercent","currentValue","NEGATIVE_INFINITY","POSITIVE_INFINITY","clipsRes","findFlag","findValue","targetProp","clipRes","removeEdge","Q","numVert","barycentrics","lastVerts","curVerts","vert","getNumElementsFromNonIndicedArrays","callCallbackWhenReady","numLoading","setTimeout","onLoadFn","isAsyncSrc"],"mappings":"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"}